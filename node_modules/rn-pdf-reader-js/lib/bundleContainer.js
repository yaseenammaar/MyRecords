import { Base64 } from 'js-base64';
const bundle = '!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=11)}([function(e,t,r){e.exports=r(23)()},function(e,t){e.exports=React},function(e,t,r){e.exports=r(22)},function(module,exports,__webpack_require__){(function(Buffer,global,process){var factory;factory=function(){return function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}return r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";var n=r(1),o=r(190),i=r(205),a=r(206),s=r(194),u=r(207),c=r(199),l=r(196);if(r(48).isNodeJS){var f=r(208).PDFNodeStream;o.setPDFNetworkStreamFactory((function(e){return new f(e)}))}else{var h,d=r(211).PDFNetworkStream;s.isFetchSupported()&&(h=r(212).PDFFetchStream),o.setPDFNetworkStreamFactory((function(e){return h&&s.isValidFetchUrl(e.url)?new h(e):new d(e)}))}t.build=o.build,t.version=o.version,t.getDocument=o.getDocument,t.LoopbackPort=o.LoopbackPort,t.PDFDataRangeTransport=o.PDFDataRangeTransport,t.PDFWorker=o.PDFWorker,t.renderTextLayer=i.renderTextLayer,t.AnnotationLayer=a.AnnotationLayer,t.createPromiseCapability=n.createPromiseCapability,t.PasswordResponses=n.PasswordResponses,t.InvalidPDFException=n.InvalidPDFException,t.MissingPDFException=n.MissingPDFException,t.SVGGraphics=u.SVGGraphics,t.NativeImageDecoding=n.NativeImageDecoding,t.CMapCompressionType=n.CMapCompressionType,t.PermissionFlag=n.PermissionFlag,t.UnexpectedResponseException=n.UnexpectedResponseException,t.OPS=n.OPS,t.VerbosityLevel=n.VerbosityLevel,t.UNSUPPORTED_FEATURES=n.UNSUPPORTED_FEATURES,t.createValidAbsoluteUrl=n.createValidAbsoluteUrl,t.createObjectURL=n.createObjectURL,t.removeNullCharacters=n.removeNullCharacters,t.shadow=n.shadow,t.Util=n.Util,t.RenderingCancelledException=s.RenderingCancelledException,t.getFilenameFromUrl=s.getFilenameFromUrl,t.LinkTarget=s.LinkTarget,t.addLinkAttributes=s.addLinkAttributes,t.loadScript=s.loadScript,t.PDFDateString=s.PDFDateString,t.GlobalWorkerOptions=c.GlobalWorkerOptions,t.apiCompatibilityParams=l.apiCompatibilityParams},function(e,t,r){"use strict";function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){return!t||"object"!==o(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}Object.defineProperty(t,"__esModule",{value:!0}),t.arrayByteLength=R,t.arraysToBytes=function(e){var t=e.length;if(1===t&&e[0]instanceof Uint8Array)return e[0];for(var r=0,n=0;n<t;n++)r+=R(e[n]);for(var o=0,i=new Uint8Array(r),a=0;a<t;a++){var s=e[a];s instanceof Uint8Array||(s="string"==typeof s?x(s):new Uint8Array(s));var u=s.byteLength;i.set(s,o),o+=u}return i},t.assert=p,t.bytesToString=function(e){p(null!==e&&"object"===o(e)&&void 0!==e.length,"Invalid argument for bytesToString");var t=e.length;if(t<8192)return String.fromCharCode.apply(null,e);for(var r=[],n=0;n<t;n+=8192){var i=Math.min(n+8192,t),a=e.subarray(n,i);r.push(String.fromCharCode.apply(null,a))}return r.join("")},t.createPromiseCapability=function(){var e=Object.create(null),t=!1;return Object.defineProperty(e,"settled",{get:function(){return t}}),e.promise=new Promise((function(r,n){e.resolve=function(e){t=!0,r(e)},e.reject=function(e){t=!0,n(e)}})),e},t.getVerbosityLevel=function(){return f},t.info=function(e){f>=l.INFOS&&console.log("Info: ".concat(e))},t.isArrayBuffer=function(e){return"object"===o(e)&&null!==e&&void 0!==e.byteLength},t.isArrayEqual=function(e,t){return e.length===t.length&&e.every((function(e,r){return e===t[r]}))},t.isBool=function(e){return"boolean"==typeof e},t.isEmptyObj=function(e){for(var t in e)return!1;return!0},t.isNum=function(e){return"number"==typeof e},t.isString=function(e){return"string"==typeof e},t.isSameOrigin=function(e,t){var r;try{if(!(r=new URL(e)).origin||"null"===r.origin)return!1}catch(e){return!1}var n=new URL(t,r);return r.origin===n.origin},t.createValidAbsoluteUrl=function(e,t){if(!e)return null;try{var r=t?new URL(e,t):new URL(e);if(function(e){if(!e)return!1;switch(e.protocol){case"http:":case"https:":case"ftp:":case"mailto:":case"tel:":return!0;default:return!1}}(r))return r}catch(e){}return null},t.removeNullCharacters=function(e){return"string"!=typeof e?(h("The argument for removeNullCharacters must be a string."),e):e.replace(k,"")},t.setVerbosityLevel=function(e){Number.isInteger(e)&&(f=e)},t.shadow=v,t.string32=function(e){return String.fromCharCode(e>>24&255,e>>16&255,e>>8&255,255&e)},t.stringToBytes=x,t.stringToPDFString=function(e){var t=e.length,r=[];if("þ"===e[0]&&"ÿ"===e[1])for(var n=2;n<t;n+=2)r.push(String.fromCharCode(e.charCodeAt(n)<<8|e.charCodeAt(n+1)));else if("ÿ"===e[0]&&"þ"===e[1])for(var o=2;o<t;o+=2)r.push(String.fromCharCode(e.charCodeAt(o+1)<<8|e.charCodeAt(o)));else for(var i=0;i<t;++i){var a=L[e.charCodeAt(i)];r.push(a?String.fromCharCode(a):e.charAt(i))}return r.join("")},t.stringToUTF8String=function(e){return decodeURIComponent(escape(e))},t.utf8StringToString=function(e){return unescape(encodeURIComponent(e))},t.warn=h,t.unreachable=d,t.IsEvalSupportedCached=t.IsLittleEndianCached=t.createObjectURL=t.FormatError=t.Util=t.UnknownErrorException=t.UnexpectedResponseException=t.TextRenderingMode=t.StreamType=t.PermissionFlag=t.PasswordResponses=t.PasswordException=t.NativeImageDecoding=t.MissingPDFException=t.InvalidPDFException=t.AbortException=t.CMapCompressionType=t.ImageKind=t.FontType=t.AnnotationType=t.AnnotationStateModelType=t.AnnotationReviewState=t.AnnotationReplyType=t.AnnotationMarkedState=t.AnnotationFlag=t.AnnotationFieldFlag=t.AnnotationBorderStyleType=t.UNSUPPORTED_FEATURES=t.VerbosityLevel=t.OPS=t.IDENTITY_MATRIX=t.FONT_IDENTITY_MATRIX=t.BaseException=void 0,r(2),t.IDENTITY_MATRIX=[1,0,0,1,0,0],t.FONT_IDENTITY_MATRIX=[.001,0,0,.001,0,0],t.NativeImageDecoding={NONE:"none",DECODE:"decode",DISPLAY:"display"},t.PermissionFlag={PRINT:4,MODIFY_CONTENTS:8,COPY:16,MODIFY_ANNOTATIONS:32,FILL_INTERACTIVE_FORMS:256,COPY_FOR_ACCESSIBILITY:512,ASSEMBLE:1024,PRINT_HIGH_QUALITY:2048},t.TextRenderingMode={FILL:0,STROKE:1,FILL_STROKE:2,INVISIBLE:3,FILL_ADD_TO_PATH:4,STROKE_ADD_TO_PATH:5,FILL_STROKE_ADD_TO_PATH:6,ADD_TO_PATH:7,FILL_STROKE_MASK:3,ADD_TO_PATH_FLAG:4},t.ImageKind={GRAYSCALE_1BPP:1,RGB_24BPP:2,RGBA_32BPP:3},t.AnnotationType={TEXT:1,LINK:2,FREETEXT:3,LINE:4,SQUARE:5,CIRCLE:6,POLYGON:7,POLYLINE:8,HIGHLIGHT:9,UNDERLINE:10,SQUIGGLY:11,STRIKEOUT:12,STAMP:13,CARET:14,INK:15,POPUP:16,FILEATTACHMENT:17,SOUND:18,MOVIE:19,WIDGET:20,SCREEN:21,PRINTERMARK:22,TRAPNET:23,WATERMARK:24,THREED:25,REDACT:26},t.AnnotationStateModelType={MARKED:"Marked",REVIEW:"Review"},t.AnnotationMarkedState={MARKED:"Marked",UNMARKED:"Unmarked"},t.AnnotationReviewState={ACCEPTED:"Accepted",REJECTED:"Rejected",CANCELLED:"Cancelled",COMPLETED:"Completed",NONE:"None"},t.AnnotationReplyType={GROUP:"Group",REPLY:"R"},t.AnnotationFlag={INVISIBLE:1,HIDDEN:2,PRINT:4,NOZOOM:8,NOROTATE:16,NOVIEW:32,READONLY:64,LOCKED:128,TOGGLENOVIEW:256,LOCKEDCONTENTS:512},t.AnnotationFieldFlag={READONLY:1,REQUIRED:2,NOEXPORT:4,MULTILINE:4096,PASSWORD:8192,NOTOGGLETOOFF:16384,RADIO:32768,PUSHBUTTON:65536,COMBO:131072,EDIT:262144,SORT:524288,FILESELECT:1048576,MULTISELECT:2097152,DONOTSPELLCHECK:4194304,DONOTSCROLL:8388608,COMB:16777216,RICHTEXT:33554432,RADIOSINUNISON:33554432,COMMITONSELCHANGE:67108864},t.AnnotationBorderStyleType={SOLID:1,DASHED:2,BEVELED:3,INSET:4,UNDERLINE:5},t.StreamType={UNKNOWN:"UNKNOWN",FLATE:"FLATE",LZW:"LZW",DCT:"DCT",JPX:"JPX",JBIG:"JBIG",A85:"A85",AHX:"AHX",CCF:"CCF",RLX:"RLX"},t.FontType={UNKNOWN:"UNKNOWN",TYPE1:"TYPE1",TYPE1C:"TYPE1C",CIDFONTTYPE0:"CIDFONTTYPE0",CIDFONTTYPE0C:"CIDFONTTYPE0C",TRUETYPE:"TRUETYPE",CIDFONTTYPE2:"CIDFONTTYPE2",TYPE3:"TYPE3",OPENTYPE:"OPENTYPE",TYPE0:"TYPE0",MMTYPE1:"MMTYPE1"};var l={ERRORS:0,WARNINGS:1,INFOS:5};t.VerbosityLevel=l,t.CMapCompressionType={NONE:0,BINARY:1,STREAM:2},t.OPS={dependency:1,setLineWidth:2,setLineCap:3,setLineJoin:4,setMiterLimit:5,setDash:6,setRenderingIntent:7,setFlatness:8,setGState:9,save:10,restore:11,transform:12,moveTo:13,lineTo:14,curveTo:15,curveTo2:16,curveTo3:17,closePath:18,rectangle:19,stroke:20,closeStroke:21,fill:22,eoFill:23,fillStroke:24,eoFillStroke:25,closeFillStroke:26,closeEOFillStroke:27,endPath:28,clip:29,eoClip:30,beginText:31,endText:32,setCharSpacing:33,setWordSpacing:34,setHScale:35,setLeading:36,setFont:37,setTextRenderingMode:38,setTextRise:39,moveText:40,setLeadingMoveText:41,setTextMatrix:42,nextLine:43,showText:44,showSpacedText:45,nextLineShowText:46,nextLineSetSpacingShowText:47,setCharWidth:48,setCharWidthAndBounds:49,setStrokeColorSpace:50,setFillColorSpace:51,setStrokeColor:52,setStrokeColorN:53,setFillColor:54,setFillColorN:55,setStrokeGray:56,setFillGray:57,setStrokeRGBColor:58,setFillRGBColor:59,setStrokeCMYKColor:60,setFillCMYKColor:61,shadingFill:62,beginInlineImage:63,beginImageData:64,endInlineImage:65,paintXObject:66,markPoint:67,markPointProps:68,beginMarkedContent:69,beginMarkedContentProps:70,endMarkedContent:71,beginCompat:72,endCompat:73,paintFormXObjectBegin:74,paintFormXObjectEnd:75,beginGroup:76,endGroup:77,beginAnnotations:78,endAnnotations:79,beginAnnotation:80,endAnnotation:81,paintJpegXObject:82,paintImageMaskXObject:83,paintImageMaskXObjectGroup:84,paintImageXObject:85,paintInlineImageXObject:86,paintInlineImageXObjectGroup:87,paintImageXObjectRepeat:88,paintImageMaskXObjectRepeat:89,paintSolidColorImageMask:90,constructPath:91},t.UNSUPPORTED_FEATURES={unknown:"unknown",forms:"forms",javaScript:"javaScript",smask:"smask",shadingPattern:"shadingPattern",font:"font"},t.PasswordResponses={NEED_PASSWORD:1,INCORRECT_PASSWORD:2};var f=l.WARNINGS;function h(e){f>=l.WARNINGS&&console.log("Warning: ".concat(e))}function d(e){throw new Error(e)}function p(e,t){e||d(t)}function v(e,t,r){return Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!1}),r}var g=function(){function e(t){this.constructor===e&&d("Cannot initialize BaseException."),this.message=t,this.name=this.constructor.name}return e.prototype=new Error,e.constructor=e,e}();t.BaseException=g;var y=function(e){function t(e,r){var n;return i(this,t),(n=a(this,s(t).call(this,e))).code=r,n}return u(t,e),t}(g);t.PasswordException=y;var m=function(e){function t(e,r){var n;return i(this,t),(n=a(this,s(t).call(this,e))).details=r,n}return u(t,e),t}(g);t.UnknownErrorException=m;var b=function(e){function t(){return i(this,t),a(this,s(t).apply(this,arguments))}return u(t,e),t}(g);t.InvalidPDFException=b;var _=function(e){function t(){return i(this,t),a(this,s(t).apply(this,arguments))}return u(t,e),t}(g);t.MissingPDFException=_;var w=function(e){function t(e,r){var n;return i(this,t),(n=a(this,s(t).call(this,e))).status=r,n}return u(t,e),t}(g);t.UnexpectedResponseException=w;var A=function(e){function t(){return i(this,t),a(this,s(t).apply(this,arguments))}return u(t,e),t}(g);t.FormatError=A;var S=function(e){function t(){return i(this,t),a(this,s(t).apply(this,arguments))}return u(t,e),t}(g);t.AbortException=S;var k=/\x00/g;function x(e){p("string"==typeof e,"Invalid argument for stringToBytes");for(var t=e.length,r=new Uint8Array(t),n=0;n<t;++n)r[n]=255&e.charCodeAt(n);return r}function R(e){return void 0!==e.length?e.length:(p(void 0!==e.byteLength),e.byteLength)}var E={get value(){return v(this,"value",((e=new Uint8Array(4))[0]=1,1===new Uint32Array(e.buffer,0,1)[0]));var e}};t.IsLittleEndianCached=E;var C={get value(){return v(this,"value",function(){try{return new Function(""),!0}catch(e){return!1}}())}};t.IsEvalSupportedCached=C;var P=["rgb(",0,",",0,",",0,")"],T=function(){function e(){i(this,e)}var t,r,o;return t=e,o=[{key:"makeCssRgb",value:function(e,t,r){return P[1]=e,P[3]=t,P[5]=r,P.join("")}},{key:"transform",value:function(e,t){return[e[0]*t[0]+e[2]*t[1],e[1]*t[0]+e[3]*t[1],e[0]*t[2]+e[2]*t[3],e[1]*t[2]+e[3]*t[3],e[0]*t[4]+e[2]*t[5]+e[4],e[1]*t[4]+e[3]*t[5]+e[5]]}},{key:"applyTransform",value:function(e,t){return[e[0]*t[0]+e[1]*t[2]+t[4],e[0]*t[1]+e[1]*t[3]+t[5]]}},{key:"applyInverseTransform",value:function(e,t){var r=t[0]*t[3]-t[1]*t[2];return[(e[0]*t[3]-e[1]*t[2]+t[2]*t[5]-t[4]*t[3])/r,(-e[0]*t[1]+e[1]*t[0]+t[4]*t[1]-t[5]*t[0])/r]}},{key:"getAxialAlignedBoundingBox",value:function(t,r){var n=e.applyTransform(t,r),o=e.applyTransform(t.slice(2,4),r),i=e.applyTransform([t[0],t[3]],r),a=e.applyTransform([t[2],t[1]],r);return[Math.min(n[0],o[0],i[0],a[0]),Math.min(n[1],o[1],i[1],a[1]),Math.max(n[0],o[0],i[0],a[0]),Math.max(n[1],o[1],i[1],a[1])]}},{key:"inverseTransform",value:function(e){var t=e[0]*e[3]-e[1]*e[2];return[e[3]/t,-e[1]/t,-e[2]/t,e[0]/t,(e[2]*e[5]-e[4]*e[3])/t,(e[4]*e[1]-e[5]*e[0])/t]}},{key:"apply3dTransform",value:function(e,t){return[e[0]*t[0]+e[1]*t[1]+e[2]*t[2],e[3]*t[0]+e[4]*t[1]+e[5]*t[2],e[6]*t[0]+e[7]*t[1]+e[8]*t[2]]}},{key:"singularValueDecompose2dScale",value:function(e){var t=[e[0],e[2],e[1],e[3]],r=e[0]*t[0]+e[1]*t[2],n=e[0]*t[1]+e[1]*t[3],o=e[2]*t[0]+e[3]*t[2],i=e[2]*t[1]+e[3]*t[3],a=(r+i)/2,s=Math.sqrt((r+i)*(r+i)-4*(r*i-o*n))/2,u=a+s||1,c=a-s||1;return[Math.sqrt(u),Math.sqrt(c)]}},{key:"normalizeRect",value:function(e){var t=e.slice(0);return e[0]>e[2]&&(t[0]=e[2],t[2]=e[0]),e[1]>e[3]&&(t[1]=e[3],t[3]=e[1]),t}},{key:"intersect",value:function(t,r){function n(e,t){return e-t}var o=[t[0],t[2],r[0],r[2]].sort(n),i=[t[1],t[3],r[1],r[3]].sort(n),a=[];return t=e.normalizeRect(t),r=e.normalizeRect(r),o[0]===t[0]&&o[1]===r[0]||o[0]===r[0]&&o[1]===t[0]?(a[0]=o[1],a[2]=o[2],i[0]===t[1]&&i[1]===r[1]||i[0]===r[1]&&i[1]===t[1]?(a[1]=i[1],a[3]=i[2],a):null):null}}],(r=null)&&n(t.prototype,r),o&&n(t,o),e}();t.Util=T;var O,L=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,728,711,710,729,733,731,730,732,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8226,8224,8225,8230,8212,8211,402,8260,8249,8250,8722,8240,8222,8220,8221,8216,8217,8218,8482,64257,64258,321,338,352,376,381,305,322,339,353,382,0,8364],I=(O="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",function(e,t){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(!r&&URL.createObjectURL){var n=new Blob([e],{type:t});return URL.createObjectURL(n)}for(var o="data:".concat(t,";base64,"),i=0,a=e.length;i<a;i+=3){var s=255&e[i],u=255&e[i+1],c=255&e[i+2],l=s>>2,f=(3&s)<<4|u>>4,h=i+1<a?(15&u)<<2|c>>6:64,d=i+2<a?63&c:64;o+=O[l]+O[f]+O[h]+O[d]}return o});t.createObjectURL=I},function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}if("undefined"==typeof globalThis||!globalThis._pdfjsCompatibilityChecked){"undefined"!=typeof globalThis&&globalThis.Math===Math||(globalThis=r(3)),globalThis._pdfjsCompatibilityChecked=!0;var o=r(48).isNodeJS,i="object"===("undefined"==typeof window?"undefined":n(window))&&"object"===("undefined"==typeof document?"undefined":n(document)),a="undefined"!=typeof navigator&&navigator.userAgent||"",s=/Trident/.test(a);!globalThis.btoa&&o&&(globalThis.btoa=function(e){return Buffer.from(e,"binary").toString("base64")}),!globalThis.atob&&o&&(globalThis.atob=function(e){return Buffer.from(e,"base64").toString("binary")}),i&&void 0===Element.prototype.remove&&(Element.prototype.remove=function(){this.parentNode&&this.parentNode.removeChild(this)}),function(){if(i&&!o){var e=document.createElement("div");if(e.classList.add("testOne","testTwo"),!0!==e.classList.contains("testOne")||!0!==e.classList.contains("testTwo")){var t=DOMTokenList.prototype.add,r=DOMTokenList.prototype.remove;DOMTokenList.prototype.add=function(){for(var e=arguments.length,r=new Array(e),n=0;n<e;n++)r[n]=arguments[n];for(var o=0,i=r;o<i.length;o++){var a=i[o];t.call(this,a)}},DOMTokenList.prototype.remove=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(var o=0,i=t;o<i.length;o++){var a=i[o];r.call(this,a)}}}}}(),i&&!o&&!1!==document.createElement("div").classList.toggle("test",0)&&(DOMTokenList.prototype.toggle=function(e){var t=arguments.length>1?!!arguments[1]:!this.contains(e);return this[t?"add":"remove"](e),t}),function(){if(i&&s){var e=window.history.pushState,t=window.history.replaceState;window.history.pushState=function(t,r,n){var o=void 0===n?[t,r]:[t,r,n];e.apply(this,o)},window.history.replaceState=function(e,r,n){var o=void 0===n?[e,r]:[e,r,n];t.apply(this,o)}}}(),String.prototype.startsWith||r(49),String.prototype.endsWith||r(60),String.prototype.includes||r(62),Array.prototype.includes||r(64),Array.from||r(72),Object.assign||r(94),Math.log2||(Math.log2=r(97)),Number.isNaN||(Number.isNaN=r(99)),Number.isInteger||(Number.isInteger=r(101)),globalThis.Promise&&globalThis.Promise.allSettled||(globalThis.Promise=r(104)),globalThis.URL=r(128),function(){var e=!1;if("undefined"!=typeof ReadableStream)try{new ReadableStream({start:function(e){e.close()}}),e=!0}catch(e){}e||(globalThis.ReadableStream=r(135).ReadableStream)}(),globalThis.Map&&globalThis.Map.prototype.entries||(globalThis.Map=r(136)),globalThis.Set&&globalThis.Set.prototype.entries||(globalThis.Set=r(143)),globalThis.WeakMap||(globalThis.WeakMap=r(145)),globalThis.WeakSet||(globalThis.WeakSet=r(151)),String.prototype.codePointAt||r(153),String.fromCodePoint||(String.fromCodePoint=r(155)),globalThis.Symbol||r(157),String.prototype.padStart||r(180),String.prototype.padEnd||r(185),Object.values||(Object.values=r(187))}},function(e,t,r){r(4),e.exports=r(6)},function(e,t,r){r(5)({global:!0},{globalThis:r(6)})},function(e,t,r){var n=r(6),o=r(7).f,i=r(21),a=r(24),s=r(25),u=r(35),c=r(47);e.exports=function(e,t){var r,l,f,h,d,p=e.target,v=e.global,g=e.stat;if(r=v?n:g?n[p]||s(p,{}):(n[p]||{}).prototype)for(l in t){if(h=t[l],f=e.noTargetGet?(d=o(r,l))&&d.value:r[l],!c(v?l:p+(g?".":"#")+l,e.forced)&&void 0!==f){if(typeof h==typeof f)continue;u(h,f)}(e.sham||f&&f.sham)&&i(h,"sham",!0),a(r,l,h,e)}}},function(e,t){var r=function(e){return e&&e.Math==Math&&e};e.exports=r("object"==typeof globalThis&&globalThis)||r("object"==typeof window&&window)||r("object"==typeof self&&self)||r("object"==typeof global&&global)||Function("return this")()},function(e,t,r){var n=r(8),o=r(10),i=r(11),a=r(12),s=r(16),u=r(18),c=r(19),l=Object.getOwnPropertyDescriptor;t.f=n?l:function(e,t){if(e=a(e),t=s(t,!0),c)try{return l(e,t)}catch(e){}if(u(e,t))return i(!o.f.call(e,t),e[t])}},function(e,t,r){var n=r(9);e.exports=!n((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,r){"use strict";var n={}.propertyIsEnumerable,o=Object.getOwnPropertyDescriptor,i=o&&!n.call({1:2},1);t.f=i?function(e){var t=o(this,e);return!!t&&t.enumerable}:n},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,r){var n=r(13),o=r(15);e.exports=function(e){return n(o(e))}},function(e,t,r){var n=r(9),o=r(14),i="".split;e.exports=n((function(){return!Object("z").propertyIsEnumerable(0)}))?function(e){return"String"==o(e)?i.call(e,""):Object(e)}:Object},function(e,t){var r={}.toString;e.exports=function(e){return r.call(e).slice(8,-1)}},function(e,t){e.exports=function(e){if(null==e)throw TypeError("Can't call method on "+e);return e}},function(e,t,r){var n=r(17);e.exports=function(e,t){if(!n(e))return e;var r,o;if(t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;if("function"==typeof(r=e.valueOf)&&!n(o=r.call(e)))return o;if(!t&&"function"==typeof(r=e.toString)&&!n(o=r.call(e)))return o;throw TypeError("Can't convert object to primitive value")}},function(e,t){e.exports=function(e){return"object"==typeof e?null!==e:"function"==typeof e}},function(e,t){var r={}.hasOwnProperty;e.exports=function(e,t){return r.call(e,t)}},function(e,t,r){var n=r(8),o=r(9),i=r(20);e.exports=!n&&!o((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},function(e,t,r){var n=r(6),o=r(17),i=n.document,a=o(i)&&o(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},function(e,t,r){var n=r(8),o=r(22),i=r(11);e.exports=n?function(e,t,r){return o.f(e,t,i(1,r))}:function(e,t,r){return e[t]=r,e}},function(e,t,r){var n=r(8),o=r(19),i=r(23),a=r(16),s=Object.defineProperty;t.f=n?s:function(e,t,r){if(i(e),t=a(t,!0),i(r),o)try{return s(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported");return"value"in r&&(e[t]=r.value),e}},function(e,t,r){var n=r(17);e.exports=function(e){if(!n(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t,r){var n=r(6),o=r(21),i=r(18),a=r(25),s=r(26),u=r(28),c=u.get,l=u.enforce,f=String(String).split("String");(e.exports=function(e,t,r,s){var u=!!s&&!!s.unsafe,c=!!s&&!!s.enumerable,h=!!s&&!!s.noTargetGet;"function"==typeof r&&("string"!=typeof t||i(r,"name")||o(r,"name",t),l(r).source=f.join("string"==typeof t?t:"")),e!==n?(u?!h&&e[t]&&(c=!0):delete e[t],c?e[t]=r:o(e,t,r)):c?e[t]=r:a(t,r)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(e,t,r){var n=r(6),o=r(21);e.exports=function(e,t){try{o(n,e,t)}catch(r){n[e]=t}return t}},function(e,t,r){var n=r(27),o=Function.toString;"function"!=typeof n.inspectSource&&(n.inspectSource=function(e){return o.call(e)}),e.exports=n.inspectSource},function(e,t,r){var n=r(6),o=r(25),i=n["__core-js_shared__"]||o("__core-js_shared__",{});e.exports=i},function(e,t,r){var n,o,i,a=r(29),s=r(6),u=r(17),c=r(21),l=r(18),f=r(30),h=r(34),d=s.WeakMap;if(a){var p=new d,v=p.get,g=p.has,y=p.set;n=function(e,t){return y.call(p,e,t),t},o=function(e){return v.call(p,e)||{}},i=function(e){return g.call(p,e)}}else{var m=f("state");h[m]=!0,n=function(e,t){return c(e,m,t),t},o=function(e){return l(e,m)?e[m]:{}},i=function(e){return l(e,m)}}e.exports={set:n,get:o,has:i,enforce:function(e){return i(e)?o(e):n(e,{})},getterFor:function(e){return function(t){var r;if(!u(t)||(r=o(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return r}}}},function(e,t,r){var n=r(6),o=r(26),i=n.WeakMap;e.exports="function"==typeof i&&/native code/.test(o(i))},function(e,t,r){var n=r(31),o=r(33),i=n("keys");e.exports=function(e){return i[e]||(i[e]=o(e))}},function(e,t,r){var n=r(32),o=r(27);(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.6.4",mode:n?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(e,t){e.exports=!1},function(e,t){var r=0,n=Math.random();e.exports=function(e){return"Symbol("+String(void 0===e?"":e)+")_"+(++r+n).toString(36)}},function(e,t){e.exports={}},function(e,t,r){var n=r(18),o=r(36),i=r(7),a=r(22);e.exports=function(e,t){for(var r=o(t),s=a.f,u=i.f,c=0;c<r.length;c++){var l=r[c];n(e,l)||s(e,l,u(t,l))}}},function(e,t,r){var n=r(37),o=r(39),i=r(46),a=r(23);e.exports=n("Reflect","ownKeys")||function(e){var t=o.f(a(e)),r=i.f;return r?t.concat(r(e)):t}},function(e,t,r){var n=r(38),o=r(6),i=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?i(n[e])||i(o[e]):n[e]&&n[e][t]||o[e]&&o[e][t]}},function(e,t,r){var n=r(6);e.exports=n},function(e,t,r){var n=r(40),o=r(45).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return n(e,o)}},function(e,t,r){var n=r(18),o=r(12),i=r(41).indexOf,a=r(34);e.exports=function(e,t){var r,s=o(e),u=0,c=[];for(r in s)!n(a,r)&&n(s,r)&&c.push(r);for(;t.length>u;)n(s,r=t[u++])&&(~i(c,r)||c.push(r));return c}},function(e,t,r){var n=r(12),o=r(42),i=r(44),a=function(e){return function(t,r,a){var s,u=n(t),c=o(u.length),l=i(a,c);if(e&&r!=r){for(;c>l;)if((s=u[l++])!=s)return!0}else for(;c>l;l++)if((e||l in u)&&u[l]===r)return e||l||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},function(e,t,r){var n=r(43),o=Math.min;e.exports=function(e){return e>0?o(n(e),9007199254740991):0}},function(e,t){var r=Math.ceil,n=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?n:r)(e)}},function(e,t,r){var n=r(43),o=Math.max,i=Math.min;e.exports=function(e,t){var r=n(e);return r<0?o(r+t,0):i(r,t)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,r){var n=r(9),o=/#|\.prototype\./,i=function(e,t){var r=s[a(e)];return r==c||r!=u&&("function"==typeof t?n(t):!!t)},a=i.normalize=function(e){return String(e).replace(o,".").toLowerCase()},s=i.data={},u=i.NATIVE="N",c=i.POLYFILL="P";e.exports=i},function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(t,"__esModule",{value:!0}),t.isNodeJS=void 0;var o="object"===(void 0===process?"undefined":n(process))&&process+""=="[object process]"&&!process.versions.nw&&!process.versions.electron;t.isNodeJS=o},function(e,t,r){r(50);var n=r(57);e.exports=n("String","startsWith")},function(e,t,r){"use strict";var n,o=r(5),i=r(7).f,a=r(42),s=r(51),u=r(15),c=r(56),l=r(32),f="".startsWith,h=Math.min,d=c("startsWith");o({target:"String",proto:!0,forced:!(!l&&!d&&(n=i(String.prototype,"startsWith"),n&&!n.writable)||d)},{startsWith:function(e){var t=String(u(this));s(e);var r=a(h(arguments.length>1?arguments[1]:void 0,t.length)),n=String(e);return f?f.call(t,n,r):t.slice(r,r+n.length)===n}})},function(e,t,r){var n=r(52);e.exports=function(e){if(n(e))throw TypeError("The method doesn't accept regular expressions");return e}},function(e,t,r){var n=r(17),o=r(14),i=r(53)("match");e.exports=function(e){var t;return n(e)&&(void 0!==(t=e[i])?!!t:"RegExp"==o(e))}},function(e,t,r){var n=r(6),o=r(31),i=r(18),a=r(33),s=r(54),u=r(55),c=o("wks"),l=n.Symbol,f=u?l:l&&l.withoutSetter||a;e.exports=function(e){return i(c,e)||(s&&i(l,e)?c[e]=l[e]:c[e]=f("Symbol."+e)),c[e]}},function(e,t,r){var n=r(9);e.exports=!!Object.getOwnPropertySymbols&&!n((function(){return!String(Symbol())}))},function(e,t,r){var n=r(54);e.exports=n&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(e,t,r){var n=r(53)("match");e.exports=function(e){var t=/./;try{"/./"[e](t)}catch(r){try{return t[n]=!1,"/./"[e](t)}catch(e){}}return!1}},function(e,t,r){var n=r(6),o=r(58),i=Function.call;e.exports=function(e,t,r){return o(i,n[e].prototype[t],r)}},function(e,t,r){var n=r(59);e.exports=function(e,t,r){if(n(e),void 0===t)return e;switch(r){case 0:return function(){return e.call(t)};case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}}},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t,r){r(61);var n=r(57);e.exports=n("String","endsWith")},function(e,t,r){"use strict";var n,o=r(5),i=r(7).f,a=r(42),s=r(51),u=r(15),c=r(56),l=r(32),f="".endsWith,h=Math.min,d=c("endsWith");o({target:"String",proto:!0,forced:!(!l&&!d&&(n=i(String.prototype,"endsWith"),n&&!n.writable)||d)},{endsWith:function(e){var t=String(u(this));s(e);var r=arguments.length>1?arguments[1]:void 0,n=a(t.length),o=void 0===r?n:h(a(r),n),i=String(e);return f?f.call(t,i,o):t.slice(o-i.length,o)===i}})},function(e,t,r){r(63);var n=r(57);e.exports=n("String","includes")},function(e,t,r){"use strict";var n=r(5),o=r(51),i=r(15);n({target:"String",proto:!0,forced:!r(56)("includes")},{includes:function(e){return!!~String(i(this)).indexOf(o(e),arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){r(65);var n=r(57);e.exports=n("Array","includes")},function(e,t,r){"use strict";var n=r(5),o=r(41).includes,i=r(66);n({target:"Array",proto:!0,forced:!r(71)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}}),i("includes")},function(e,t,r){var n=r(53),o=r(67),i=r(22),a=n("unscopables"),s=Array.prototype;null==s[a]&&i.f(s,a,{configurable:!0,value:o(null)}),e.exports=function(e){s[a][e]=!0}},function(e,t,r){var n,o=r(23),i=r(68),a=r(45),s=r(34),u=r(70),c=r(20),l=r(30),f=l("IE_PROTO"),h=function(){},d=function(e){return"<script>"+e+"<\/script>"},p=function(){try{n=document.domain&&new ActiveXObject("htmlfile")}catch(e){}var e,t;p=n?function(e){e.write(d("")),e.close();var t=e.parentWindow.Object;return e=null,t}(n):((t=c("iframe")).style.display="none",u.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write(d("document.F=Object")),e.close(),e.F);for(var r=a.length;r--;)delete p.prototype[a[r]];return p()};s[f]=!0,e.exports=Object.create||function(e,t){var r;return null!==e?(h.prototype=o(e),r=new h,h.prototype=null,r[f]=e):r=p(),void 0===t?r:i(r,t)}},function(e,t,r){var n=r(8),o=r(22),i=r(23),a=r(69);e.exports=n?Object.defineProperties:function(e,t){i(e);for(var r,n=a(t),s=n.length,u=0;s>u;)o.f(e,r=n[u++],t[r]);return e}},function(e,t,r){var n=r(40),o=r(45);e.exports=Object.keys||function(e){return n(e,o)}},function(e,t,r){var n=r(37);e.exports=n("document","documentElement")},function(e,t,r){var n=r(8),o=r(9),i=r(18),a=Object.defineProperty,s={},u=function(e){throw e};e.exports=function(e,t){if(i(s,e))return s[e];t||(t={});var r=[][e],c=!!i(t,"ACCESSORS")&&t.ACCESSORS,l=i(t,0)?t[0]:u,f=i(t,1)?t[1]:void 0;return s[e]=!!r&&!o((function(){if(c&&!n)return!0;var e={length:-1};c?a(e,1,{enumerable:!0,get:u}):e[1]=1,r.call(e,l,f)}))}},function(e,t,r){r(73),r(85);var n=r(38);e.exports=n.Array.from},function(e,t,r){"use strict";var n=r(74).charAt,o=r(28),i=r(75),a=o.set,s=o.getterFor("String Iterator");i(String,"String",(function(e){a(this,{type:"String Iterator",string:String(e),index:0})}),(function(){var e,t=s(this),r=t.string,o=t.index;return o>=r.length?{value:void 0,done:!0}:(e=n(r,o),t.index+=e.length,{value:e,done:!1})}))},function(e,t,r){var n=r(43),o=r(15),i=function(e){return function(t,r){var i,a,s=String(o(t)),u=n(r),c=s.length;return u<0||u>=c?e?"":void 0:(i=s.charCodeAt(u))<55296||i>56319||u+1===c||(a=s.charCodeAt(u+1))<56320||a>57343?e?s.charAt(u):i:e?s.slice(u,u+2):a-56320+(i-55296<<10)+65536}};e.exports={codeAt:i(!1),charAt:i(!0)}},function(e,t,r){"use strict";var n=r(5),o=r(76),i=r(78),a=r(83),s=r(81),u=r(21),c=r(24),l=r(53),f=r(32),h=r(82),d=r(77),p=d.IteratorPrototype,v=d.BUGGY_SAFARI_ITERATORS,g=l("iterator"),y=function(){return this};e.exports=function(e,t,r,l,d,m,b){o(r,t,l);var _,w,A,S=function(e){if(e===d&&C)return C;if(!v&&e in R)return R[e];switch(e){case"keys":case"values":case"entries":return function(){return new r(this,e)}}return function(){return new r(this)}},k=t+" Iterator",x=!1,R=e.prototype,E=R[g]||R["@@iterator"]||d&&R[d],C=!v&&E||S(d),P="Array"==t&&R.entries||E;if(P&&(_=i(P.call(new e)),p!==Object.prototype&&_.next&&(f||i(_)===p||(a?a(_,p):"function"!=typeof _[g]&&u(_,g,y)),s(_,k,!0,!0),f&&(h[k]=y))),"values"==d&&E&&"values"!==E.name&&(x=!0,C=function(){return E.call(this)}),f&&!b||R[g]===C||u(R,g,C),h[t]=C,d)if(w={values:S("values"),keys:m?C:S("keys"),entries:S("entries")},b)for(A in w)!v&&!x&&A in R||c(R,A,w[A]);else n({target:t,proto:!0,forced:v||x},w);return w}},function(e,t,r){"use strict";var n=r(77).IteratorPrototype,o=r(67),i=r(11),a=r(81),s=r(82),u=function(){return this};e.exports=function(e,t,r){var c=t+" Iterator";return e.prototype=o(n,{next:i(1,r)}),a(e,c,!1,!0),s[c]=u,e}},function(e,t,r){"use strict";var n,o,i,a=r(78),s=r(21),u=r(18),c=r(53),l=r(32),f=c("iterator"),h=!1;[].keys&&("next"in(i=[].keys())?(o=a(a(i)))!==Object.prototype&&(n=o):h=!0),null==n&&(n={}),l||u(n,f)||s(n,f,(function(){return this})),e.exports={IteratorPrototype:n,BUGGY_SAFARI_ITERATORS:h}},function(e,t,r){var n=r(18),o=r(79),i=r(30),a=r(80),s=i("IE_PROTO"),u=Object.prototype;e.exports=a?Object.getPrototypeOf:function(e){return e=o(e),n(e,s)?e[s]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?u:null}},function(e,t,r){var n=r(15);e.exports=function(e){return Object(n(e))}},function(e,t,r){var n=r(9);e.exports=!n((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},function(e,t,r){var n=r(22).f,o=r(18),i=r(53)("toStringTag");e.exports=function(e,t,r){e&&!o(e=r?e:e.prototype,i)&&n(e,i,{configurable:!0,value:t})}},function(e,t){e.exports={}},function(e,t,r){var n=r(23),o=r(84);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,r={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(r,[]),t=r instanceof Array}catch(e){}return function(r,i){return n(r),o(i),t?e.call(r,i):r.__proto__=i,r}}():void 0)},function(e,t,r){var n=r(17);e.exports=function(e){if(!n(e)&&null!==e)throw TypeError("Can't set "+String(e)+" as a prototype");return e}},function(e,t,r){var n=r(5),o=r(86);n({target:"Array",stat:!0,forced:!r(93)((function(e){Array.from(e)}))},{from:o})},function(e,t,r){"use strict";var n=r(58),o=r(79),i=r(87),a=r(88),s=r(42),u=r(89),c=r(90);e.exports=function(e){var t,r,l,f,h,d,p=o(e),v="function"==typeof this?this:Array,g=arguments.length,y=g>1?arguments[1]:void 0,m=void 0!==y,b=c(p),_=0;if(m&&(y=n(y,g>2?arguments[2]:void 0,2)),null==b||v==Array&&a(b))for(r=new v(t=s(p.length));t>_;_++)d=m?y(p[_],_):p[_],u(r,_,d);else for(h=(f=b.call(p)).next,r=new v;!(l=h.call(f)).done;_++)d=m?i(f,y,[l.value,_],!0):l.value,u(r,_,d);return r.length=_,r}},function(e,t,r){var n=r(23);e.exports=function(e,t,r,o){try{return o?t(n(r)[0],r[1]):t(r)}catch(t){var i=e.return;throw void 0!==i&&n(i.call(e)),t}}},function(e,t,r){var n=r(53),o=r(82),i=n("iterator"),a=Array.prototype;e.exports=function(e){return void 0!==e&&(o.Array===e||a[i]===e)}},function(e,t,r){"use strict";var n=r(16),o=r(22),i=r(11);e.exports=function(e,t,r){var a=n(t);a in e?o.f(e,a,i(0,r)):e[a]=r}},function(e,t,r){var n=r(91),o=r(82),i=r(53)("iterator");e.exports=function(e){if(null!=e)return e[i]||e["@@iterator"]||o[n(e)]}},function(e,t,r){var n=r(92),o=r(14),i=r(53)("toStringTag"),a="Arguments"==o(function(){return arguments}());e.exports=n?o:function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),i))?r:a?o(t):"Object"==(n=o(t))&&"function"==typeof t.callee?"Arguments":n}},function(e,t,r){var n={};n[r(53)("toStringTag")]="z",e.exports="[object z]"===String(n)},function(e,t,r){var n=r(53)("iterator"),o=!1;try{var i=0,a={next:function(){return{done:!!i++}},return:function(){o=!0}};a[n]=function(){return this},Array.from(a,(function(){throw 2}))}catch(e){}e.exports=function(e,t){if(!t&&!o)return!1;var r=!1;try{var i={};i[n]=function(){return{next:function(){return{done:r=!0}}}},e(i)}catch(e){}return r}},function(e,t,r){r(95);var n=r(38);e.exports=n.Object.assign},function(e,t,r){var n=r(5),o=r(96);n({target:"Object",stat:!0,forced:Object.assign!==o},{assign:o})},function(e,t,r){"use strict";var n=r(8),o=r(9),i=r(69),a=r(46),s=r(10),u=r(79),c=r(13),l=Object.assign,f=Object.defineProperty;e.exports=!l||o((function(){if(n&&1!==l({b:1},l(f({},"a",{enumerable:!0,get:function(){f(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var e={},t={},r=Symbol();return e[r]=7,"abcdefghijklmnopqrst".split("").forEach((function(e){t[e]=e})),7!=l({},e)[r]||"abcdefghijklmnopqrst"!=i(l({},t)).join("")}))?function(e,t){for(var r=u(e),o=arguments.length,l=1,f=a.f,h=s.f;o>l;)for(var d,p=c(arguments[l++]),v=f?i(p).concat(f(p)):i(p),g=v.length,y=0;g>y;)d=v[y++],n&&!h.call(p,d)||(r[d]=p[d]);return r}:l},function(e,t,r){r(98);var n=r(38);e.exports=n.Math.log2},function(e,t,r){var n=r(5),o=Math.log,i=Math.LN2;n({target:"Math",stat:!0},{log2:function(e){return o(e)/i}})},function(e,t,r){r(100);var n=r(38);e.exports=n.Number.isNaN},function(e,t,r){r(5)({target:"Number",stat:!0},{isNaN:function(e){return e!=e}})},function(e,t,r){r(102);var n=r(38);e.exports=n.Number.isInteger},function(e,t,r){r(5)({target:"Number",stat:!0},{isInteger:r(103)})},function(e,t,r){var n=r(17),o=Math.floor;e.exports=function(e){return!n(e)&&isFinite(e)&&o(e)===e}},function(e,t,r){r(105),r(73),r(107),r(110),r(126),r(127);var n=r(38);e.exports=n.Promise},function(e,t,r){var n=r(92),o=r(24),i=r(106);n||o(Object.prototype,"toString",i,{unsafe:!0})},function(e,t,r){"use strict";var n=r(92),o=r(91);e.exports=n?{}.toString:function(){return"[object "+o(this)+"]"}},function(e,t,r){var n=r(6),o=r(108),i=r(109),a=r(21),s=r(53),u=s("iterator"),c=s("toStringTag"),l=i.values;for(var f in o){var h=n[f],d=h&&h.prototype;if(d){if(d[u]!==l)try{a(d,u,l)}catch(e){d[u]=l}if(d[c]||a(d,c,f),o[f])for(var p in i)if(d[p]!==i[p])try{a(d,p,i[p])}catch(e){d[p]=i[p]}}}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,r){"use strict";var n=r(12),o=r(66),i=r(82),a=r(28),s=r(75),u=a.set,c=a.getterFor("Array Iterator");e.exports=s(Array,"Array",(function(e,t){u(this,{type:"Array Iterator",target:n(e),index:0,kind:t})}),(function(){var e=c(this),t=e.target,r=e.kind,n=e.index++;return!t||n>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==r?{value:n,done:!1}:"values"==r?{value:t[n],done:!1}:{value:[n,t[n]],done:!1}}),"values"),i.Arguments=i.Array,o("keys"),o("values"),o("entries")},function(e,t,r){"use strict";var n,o,i,a,s=r(5),u=r(32),c=r(6),l=r(37),f=r(111),h=r(24),d=r(112),p=r(81),v=r(113),g=r(17),y=r(59),m=r(114),b=r(14),_=r(26),w=r(115),A=r(93),S=r(116),k=r(117).set,x=r(120),R=r(121),E=r(123),C=r(122),P=r(124),T=r(28),O=r(47),L=r(53),I=r(125),F=L("species"),j="Promise",D=T.get,M=T.set,N=T.getterFor(j),U=f,q=c.TypeError,B=c.document,W=c.process,G=l("fetch"),z=C.f,H=z,Y="process"==b(W),X=!!(B&&B.createEvent&&c.dispatchEvent),V=O(j,(function(){if(_(U)===String(U)){if(66===I)return!0;if(!Y&&"function"!=typeof PromiseRejectionEvent)return!0}if(u&&!U.prototype.finally)return!0;if(I>=51&&/native code/.test(U))return!1;var e=U.resolve(1),t=function(e){e((function(){}),(function(){}))};return(e.constructor={})[F]=t,!(e.then((function(){}))instanceof t)})),K=V||!A((function(e){U.all(e).catch((function(){}))})),Q=function(e){var t;return!(!g(e)||"function"!=typeof(t=e.then))&&t},J=function(e,t,r){if(!t.notified){t.notified=!0;var n=t.reactions;x((function(){for(var o=t.value,i=1==t.state,a=0;n.length>a;){var s,u,c,l=n[a++],f=i?l.ok:l.fail,h=l.resolve,d=l.reject,p=l.domain;try{f?(i||(2===t.rejection&&te(e,t),t.rejection=1),!0===f?s=o:(p&&p.enter(),s=f(o),p&&(p.exit(),c=!0)),s===l.promise?d(q("Promise-chain cycle")):(u=Q(s))?u.call(s,h,d):h(s)):d(o)}catch(e){p&&!c&&p.exit(),d(e)}}t.reactions=[],t.notified=!1,r&&!t.rejection&&$(e,t)}))}},Z=function(e,t,r){var n,o;X?((n=B.createEvent("Event")).promise=t,n.reason=r,n.initEvent(e,!1,!0),c.dispatchEvent(n)):n={promise:t,reason:r},(o=c["on"+e])?o(n):"unhandledrejection"===e&&E("Unhandled promise rejection",r)},$=function(e,t){k.call(c,(function(){var r,n=t.value;if(ee(t)&&(r=P((function(){Y?W.emit("unhandledRejection",n,e):Z("unhandledrejection",e,n)})),t.rejection=Y||ee(t)?2:1,r.error))throw r.value}))},ee=function(e){return 1!==e.rejection&&!e.parent},te=function(e,t){k.call(c,(function(){Y?W.emit("rejectionHandled",e):Z("rejectionhandled",e,t.value)}))},re=function(e,t,r,n){return function(o){e(t,r,o,n)}},ne=function(e,t,r,n){t.done||(t.done=!0,n&&(t=n),t.value=r,t.state=2,J(e,t,!0))},oe=function(e,t,r,n){if(!t.done){t.done=!0,n&&(t=n);try{if(e===r)throw q("Promise can't be resolved itself");var o=Q(r);o?x((function(){var n={done:!1};try{o.call(r,re(oe,e,n,t),re(ne,e,n,t))}catch(r){ne(e,n,r,t)}})):(t.value=r,t.state=1,J(e,t,!1))}catch(r){ne(e,{done:!1},r,t)}}};V&&(U=function(e){m(this,U,j),y(e),n.call(this);var t=D(this);try{e(re(oe,this,t),re(ne,this,t))}catch(e){ne(this,t,e)}},(n=function(e){M(this,{type:j,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=d(U.prototype,{then:function(e,t){var r=N(this),n=z(S(this,U));return n.ok="function"!=typeof e||e,n.fail="function"==typeof t&&t,n.domain=Y?W.domain:void 0,r.parent=!0,r.reactions.push(n),0!=r.state&&J(this,r,!1),n.promise},catch:function(e){return this.then(void 0,e)}}),o=function(){var e=new n,t=D(e);this.promise=e,this.resolve=re(oe,e,t),this.reject=re(ne,e,t)},C.f=z=function(e){return e===U||e===i?new o(e):H(e)},u||"function"!=typeof f||(a=f.prototype.then,h(f.prototype,"then",(function(e,t){var r=this;return new U((function(e,t){a.call(r,e,t)})).then(e,t)}),{unsafe:!0}),"function"==typeof G&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(e){return R(U,G.apply(c,arguments))}}))),s({global:!0,wrap:!0,forced:V},{Promise:U}),p(U,j,!1,!0),v(j),i=l(j),s({target:j,stat:!0,forced:V},{reject:function(e){var t=z(this);return t.reject.call(void 0,e),t.promise}}),s({target:j,stat:!0,forced:u||V},{resolve:function(e){return R(u&&this===i?U:this,e)}}),s({target:j,stat:!0,forced:K},{all:function(e){var t=this,r=z(t),n=r.resolve,o=r.reject,i=P((function(){var r=y(t.resolve),i=[],a=0,s=1;w(e,(function(e){var u=a++,c=!1;i.push(void 0),s++,r.call(t,e).then((function(e){c||(c=!0,i[u]=e,--s||n(i))}),o)})),--s||n(i)}));return i.error&&o(i.value),r.promise},race:function(e){var t=this,r=z(t),n=r.reject,o=P((function(){var o=y(t.resolve);w(e,(function(e){o.call(t,e).then(r.resolve,n)}))}));return o.error&&n(o.value),r.promise}})},function(e,t,r){var n=r(6);e.exports=n.Promise},function(e,t,r){var n=r(24);e.exports=function(e,t,r){for(var o in t)n(e,o,t[o],r);return e}},function(e,t,r){"use strict";var n=r(37),o=r(22),i=r(53),a=r(8),s=i("species");e.exports=function(e){var t=n(e),r=o.f;a&&t&&!t[s]&&r(t,s,{configurable:!0,get:function(){return this}})}},function(e,t){e.exports=function(e,t,r){if(!(e instanceof t))throw TypeError("Incorrect "+(r?r+" ":"")+"invocation");return e}},function(e,t,r){var n=r(23),o=r(88),i=r(42),a=r(58),s=r(90),u=r(87),c=function(e,t){this.stopped=e,this.result=t};(e.exports=function(e,t,r,l,f){var h,d,p,v,g,y,m,b=a(t,r,l?2:1);if(f)h=e;else{if("function"!=typeof(d=s(e)))throw TypeError("Target is not iterable");if(o(d)){for(p=0,v=i(e.length);v>p;p++)if((g=l?b(n(m=e[p])[0],m[1]):b(e[p]))&&g instanceof c)return g;return new c(!1)}h=d.call(e)}for(y=h.next;!(m=y.call(h)).done;)if("object"==typeof(g=u(h,b,m.value,l))&&g&&g instanceof c)return g;return new c(!1)}).stop=function(e){return new c(!0,e)}},function(e,t,r){var n=r(23),o=r(59),i=r(53)("species");e.exports=function(e,t){var r,a=n(e).constructor;return void 0===a||null==(r=n(a)[i])?t:o(r)}},function(e,t,r){var n,o,i,a=r(6),s=r(9),u=r(14),c=r(58),l=r(70),f=r(20),h=r(118),d=a.location,p=a.setImmediate,v=a.clearImmediate,g=a.process,y=a.MessageChannel,m=a.Dispatch,b=0,_={},w=function(e){if(_.hasOwnProperty(e)){var t=_[e];delete _[e],t()}},A=function(e){return function(){w(e)}},S=function(e){w(e.data)},k=function(e){a.postMessage(e+"",d.protocol+"//"+d.host)};p&&v||(p=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return _[++b]=function(){("function"==typeof e?e:Function(e)).apply(void 0,t)},n(b),b},v=function(e){delete _[e]},"process"==u(g)?n=function(e){g.nextTick(A(e))}:m&&m.now?n=function(e){m.now(A(e))}:y&&!h?(i=(o=new y).port2,o.port1.onmessage=S,n=c(i.postMessage,i,1)):!a.addEventListener||"function"!=typeof postMessage||a.importScripts||s(k)?n="onreadystatechange"in f("script")?function(e){l.appendChild(f("script")).onreadystatechange=function(){l.removeChild(this),w(e)}}:function(e){setTimeout(A(e),0)}:(n=k,a.addEventListener("message",S,!1))),e.exports={set:p,clear:v}},function(e,t,r){var n=r(119);e.exports=/(iphone|ipod|ipad).*applewebkit/i.test(n)},function(e,t,r){var n=r(37);e.exports=n("navigator","userAgent")||""},function(e,t,r){var n,o,i,a,s,u,c,l,f=r(6),h=r(7).f,d=r(14),p=r(117).set,v=r(118),g=f.MutationObserver||f.WebKitMutationObserver,y=f.process,m=f.Promise,b="process"==d(y),_=h(f,"queueMicrotask"),w=_&&_.value;w||(n=function(){var e,t;for(b&&(e=y.domain)&&e.exit();o;){t=o.fn,o=o.next;try{t()}catch(e){throw o?a():i=void 0,e}}i=void 0,e&&e.enter()},b?a=function(){y.nextTick(n)}:g&&!v?(s=!0,u=document.createTextNode(""),new g(n).observe(u,{characterData:!0}),a=function(){u.data=s=!s}):m&&m.resolve?(c=m.resolve(void 0),l=c.then,a=function(){l.call(c,n)}):a=function(){p.call(f,n)}),e.exports=w||function(e){var t={fn:e,next:void 0};i&&(i.next=t),o||(o=t,a()),i=t}},function(e,t,r){var n=r(23),o=r(17),i=r(122);e.exports=function(e,t){if(n(e),o(t)&&t.constructor===e)return t;var r=i.f(e);return(0,r.resolve)(t),r.promise}},function(e,t,r){"use strict";var n=r(59),o=function(e){var t,r;this.promise=new e((function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n})),this.resolve=n(t),this.reject=n(r)};e.exports.f=function(e){return new o(e)}},function(e,t,r){var n=r(6);e.exports=function(e,t){var r=n.console;r&&r.error&&(1===arguments.length?r.error(e):r.error(e,t))}},function(e,t){e.exports=function(e){try{return{error:!1,value:e()}}catch(e){return{error:!0,value:e}}}},function(e,t,r){var n,o,i=r(6),a=r(119),s=i.process,u=s&&s.versions,c=u&&u.v8;c?o=(n=c.split("."))[0]+n[1]:a&&(!(n=a.match(/Edge\/(\d+)/))||n[1]>=74)&&(n=a.match(/Chrome\/(\d+)/))&&(o=n[1]),e.exports=o&&+o},function(e,t,r){"use strict";var n=r(5),o=r(59),i=r(122),a=r(124),s=r(115);n({target:"Promise",stat:!0},{allSettled:function(e){var t=this,r=i.f(t),n=r.resolve,u=r.reject,c=a((function(){var r=o(t.resolve),i=[],a=0,u=1;s(e,(function(e){var o=a++,s=!1;i.push(void 0),u++,r.call(t,e).then((function(e){s||(s=!0,i[o]={status:"fulfilled",value:e},--u||n(i))}),(function(e){s||(s=!0,i[o]={status:"rejected",reason:e},--u||n(i))}))})),--u||n(i)}));return c.error&&u(c.value),r.promise}})},function(e,t,r){"use strict";var n=r(5),o=r(32),i=r(111),a=r(9),s=r(37),u=r(116),c=r(121),l=r(24);n({target:"Promise",proto:!0,real:!0,forced:!!i&&a((function(){i.prototype.finally.call({then:function(){}},(function(){}))}))},{finally:function(e){var t=u(this,s("Promise")),r="function"==typeof e;return this.then(r?function(r){return c(t,e()).then((function(){return r}))}:e,r?function(r){return c(t,e()).then((function(){throw r}))}:e)}}),o||"function"!=typeof i||i.prototype.finally||l(i.prototype,"finally",s("Promise").prototype.finally)},function(e,t,r){r(129),r(134),r(132);var n=r(38);e.exports=n.URL},function(e,t,r){"use strict";r(73);var n,o=r(5),i=r(8),a=r(130),s=r(6),u=r(68),c=r(24),l=r(114),f=r(18),h=r(96),d=r(86),p=r(74).codeAt,v=r(131),g=r(81),y=r(132),m=r(28),b=s.URL,_=y.URLSearchParams,w=y.getState,A=m.set,S=m.getterFor("URL"),k=Math.floor,x=Math.pow,R=/[A-Za-z]/,E=/[\d+\-.A-Za-z]/,C=/\d/,P=/^(0x|0X)/,T=/^[0-7]+$/,O=/^\d+$/,L=/^[\dA-Fa-f]+$/,I=/[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,F=/[\u0000\u0009\u000A\u000D #/:?@[\\]]/,j=/^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,D=/[\u0009\u000A\u000D]/g,M=function(e,t){var r,n,o;if("["==t.charAt(0)){if("]"!=t.charAt(t.length-1))return"Invalid host";if(!(r=U(t.slice(1,-1))))return"Invalid host";e.host=r}else if(X(e)){if(t=v(t),I.test(t))return"Invalid host";if(null===(r=N(t)))return"Invalid host";e.host=r}else{if(F.test(t))return"Invalid host";for(r="",n=d(t),o=0;o<n.length;o++)r+=H(n[o],B);e.host=r}},N=function(e){var t,r,n,o,i,a,s,u=e.split(".");if(u.length&&""==u[u.length-1]&&u.pop(),(t=u.length)>4)return e;for(r=[],n=0;n<t;n++){if(""==(o=u[n]))return e;if(i=10,o.length>1&&"0"==o.charAt(0)&&(i=P.test(o)?16:8,o=o.slice(8==i?1:2)),""===o)a=0;else{if(!(10==i?O:8==i?T:L).test(o))return e;a=parseInt(o,i)}r.push(a)}for(n=0;n<t;n++)if(a=r[n],n==t-1){if(a>=x(256,5-t))return null}else if(a>255)return null;for(s=r.pop(),n=0;n<r.length;n++)s+=r[n]*x(256,3-n);return s},U=function(e){var t,r,n,o,i,a,s,u=[0,0,0,0,0,0,0,0],c=0,l=null,f=0,h=function(){return e.charAt(f)};if(":"==h()){if(":"!=e.charAt(1))return;f+=2,l=++c}for(;h();){if(8==c)return;if(":"!=h()){for(t=r=0;r<4&&L.test(h());)t=16*t+parseInt(h(),16),f++,r++;if("."==h()){if(0==r)return;if(f-=r,c>6)return;for(n=0;h();){if(o=null,n>0){if(!("."==h()&&n<4))return;f++}if(!C.test(h()))return;for(;C.test(h());){if(i=parseInt(h(),10),null===o)o=i;else{if(0==o)return;o=10*o+i}if(o>255)return;f++}u[c]=256*u[c]+o,2!=++n&&4!=n||c++}if(4!=n)return;break}if(":"==h()){if(f++,!h())return}else if(h())return;u[c++]=t}else{if(null!==l)return;f++,l=++c}}if(null!==l)for(a=c-l,c=7;0!=c&&a>0;)s=u[c],u[c--]=u[l+a-1],u[l+--a]=s;else if(8!=c)return;return u},q=function(e){var t,r,n,o;if("number"==typeof e){for(t=[],r=0;r<4;r++)t.unshift(e%256),e=k(e/256);return t.join(".")}if("object"==typeof e){for(t="",n=function(e){for(var t=null,r=1,n=null,o=0,i=0;i<8;i++)0!==e[i]?(o>r&&(t=n,r=o),n=null,o=0):(null===n&&(n=i),++o);return o>r&&(t=n,r=o),t}(e),r=0;r<8;r++)o&&0===e[r]||(o&&(o=!1),n===r?(t+=r?":":"::",o=!0):(t+=e[r].toString(16),r<7&&(t+=":")));return"["+t+"]"}return e},B={},W=h({},B,{" ":1,'"':1,"<":1,">":1,"`":1}),G=h({},W,{"#":1,"?":1,"{":1,"}":1}),z=h({},G,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),H=function(e,t){var r=p(e,0);return r>32&&r<127&&!f(t,e)?e:encodeURIComponent(e)},Y={ftp:21,file:null,http:80,https:443,ws:80,wss:443},X=function(e){return f(Y,e.scheme)},V=function(e){return""!=e.username||""!=e.password},K=function(e){return!e.host||e.cannotBeABaseURL||"file"==e.scheme},Q=function(e,t){var r;return 2==e.length&&R.test(e.charAt(0))&&(":"==(r=e.charAt(1))||!t&&"|"==r)},J=function(e){var t;return e.length>1&&Q(e.slice(0,2))&&(2==e.length||"/"===(t=e.charAt(2))||"\\"===t||"?"===t||"#"===t)},Z=function(e){var t=e.path,r=t.length;!r||"file"==e.scheme&&1==r&&Q(t[0],!0)||t.pop()},$=function(e){return"."===e||"%2e"===e.toLowerCase()},ee={},te={},re={},ne={},oe={},ie={},ae={},se={},ue={},ce={},le={},fe={},he={},de={},pe={},ve={},ge={},ye={},me={},be={},_e={},we=function(e,t,r,o){var i,a,s,u,c,l=r||ee,h=0,p="",v=!1,g=!1,y=!1;for(r||(e.scheme="",e.username="",e.password="",e.host=null,e.port=null,e.path=[],e.query=null,e.fragment=null,e.cannotBeABaseURL=!1,t=t.replace(j,"")),t=t.replace(D,""),i=d(t);h<=i.length;){switch(a=i[h],l){case ee:if(!a||!R.test(a)){if(r)return"Invalid scheme";l=re;continue}p+=a.toLowerCase(),l=te;break;case te:if(a&&(E.test(a)||"+"==a||"-"==a||"."==a))p+=a.toLowerCase();else{if(":"!=a){if(r)return"Invalid scheme";p="",l=re,h=0;continue}if(r&&(X(e)!=f(Y,p)||"file"==p&&(V(e)||null!==e.port)||"file"==e.scheme&&!e.host))return;if(e.scheme=p,r)return void(X(e)&&Y[e.scheme]==e.port&&(e.port=null));p="","file"==e.scheme?l=de:X(e)&&o&&o.scheme==e.scheme?l=ne:X(e)?l=se:"/"==i[h+1]?(l=oe,h++):(e.cannotBeABaseURL=!0,e.path.push(""),l=me)}break;case re:if(!o||o.cannotBeABaseURL&&"#"!=a)return"Invalid scheme";if(o.cannotBeABaseURL&&"#"==a){e.scheme=o.scheme,e.path=o.path.slice(),e.query=o.query,e.fragment="",e.cannotBeABaseURL=!0,l=_e;break}l="file"==o.scheme?de:ie;continue;case ne:if("/"!=a||"/"!=i[h+1]){l=ie;continue}l=ue,h++;break;case oe:if("/"==a){l=ce;break}l=ye;continue;case ie:if(e.scheme=o.scheme,a==n)e.username=o.username,e.password=o.password,e.host=o.host,e.port=o.port,e.path=o.path.slice(),e.query=o.query;else if("/"==a||"\\"==a&&X(e))l=ae;else if("?"==a)e.username=o.username,e.password=o.password,e.host=o.host,e.port=o.port,e.path=o.path.slice(),e.query="",l=be;else{if("#"!=a){e.username=o.username,e.password=o.password,e.host=o.host,e.port=o.port,e.path=o.path.slice(),e.path.pop(),l=ye;continue}e.username=o.username,e.password=o.password,e.host=o.host,e.port=o.port,e.path=o.path.slice(),e.query=o.query,e.fragment="",l=_e}break;case ae:if(!X(e)||"/"!=a&&"\\"!=a){if("/"!=a){e.username=o.username,e.password=o.password,e.host=o.host,e.port=o.port,l=ye;continue}l=ce}else l=ue;break;case se:if(l=ue,"/"!=a||"/"!=p.charAt(h+1))continue;h++;break;case ue:if("/"!=a&&"\\"!=a){l=ce;continue}break;case ce:if("@"==a){v&&(p="%40"+p),v=!0,s=d(p);for(var m=0;m<s.length;m++){var b=s[m];if(":"!=b||y){var _=H(b,z);y?e.password+=_:e.username+=_}else y=!0}p=""}else if(a==n||"/"==a||"?"==a||"#"==a||"\\"==a&&X(e)){if(v&&""==p)return"Invalid authority";h-=d(p).length+1,p="",l=le}else p+=a;break;case le:case fe:if(r&&"file"==e.scheme){l=ve;continue}if(":"!=a||g){if(a==n||"/"==a||"?"==a||"#"==a||"\\"==a&&X(e)){if(X(e)&&""==p)return"Invalid host";if(r&&""==p&&(V(e)||null!==e.port))return;if(u=M(e,p))return u;if(p="",l=ge,r)return;continue}"["==a?g=!0:"]"==a&&(g=!1),p+=a}else{if(""==p)return"Invalid host";if(u=M(e,p))return u;if(p="",l=he,r==fe)return}break;case he:if(!C.test(a)){if(a==n||"/"==a||"?"==a||"#"==a||"\\"==a&&X(e)||r){if(""!=p){var w=parseInt(p,10);if(w>65535)return"Invalid port";e.port=X(e)&&w===Y[e.scheme]?null:w,p=""}if(r)return;l=ge;continue}return"Invalid port"}p+=a;break;case de:if(e.scheme="file","/"==a||"\\"==a)l=pe;else{if(!o||"file"!=o.scheme){l=ye;continue}if(a==n)e.host=o.host,e.path=o.path.slice(),e.query=o.query;else if("?"==a)e.host=o.host,e.path=o.path.slice(),e.query="",l=be;else{if("#"!=a){J(i.slice(h).join(""))||(e.host=o.host,e.path=o.path.slice(),Z(e)),l=ye;continue}e.host=o.host,e.path=o.path.slice(),e.query=o.query,e.fragment="",l=_e}}break;case pe:if("/"==a||"\\"==a){l=ve;break}o&&"file"==o.scheme&&!J(i.slice(h).join(""))&&(Q(o.path[0],!0)?e.path.push(o.path[0]):e.host=o.host),l=ye;continue;case ve:if(a==n||"/"==a||"\\"==a||"?"==a||"#"==a){if(!r&&Q(p))l=ye;else if(""==p){if(e.host="",r)return;l=ge}else{if(u=M(e,p))return u;if("localhost"==e.host&&(e.host=""),r)return;p="",l=ge}continue}p+=a;break;case ge:if(X(e)){if(l=ye,"/"!=a&&"\\"!=a)continue}else if(r||"?"!=a)if(r||"#"!=a){if(a!=n&&(l=ye,"/"!=a))continue}else e.fragment="",l=_e;else e.query="",l=be;break;case ye:if(a==n||"/"==a||"\\"==a&&X(e)||!r&&("?"==a||"#"==a)){if(".."===(c=(c=p).toLowerCase())||"%2e."===c||".%2e"===c||"%2e%2e"===c?(Z(e),"/"==a||"\\"==a&&X(e)||e.path.push("")):$(p)?"/"==a||"\\"==a&&X(e)||e.path.push(""):("file"==e.scheme&&!e.path.length&&Q(p)&&(e.host&&(e.host=""),p=p.charAt(0)+":"),e.path.push(p)),p="","file"==e.scheme&&(a==n||"?"==a||"#"==a))for(;e.path.length>1&&""===e.path[0];)e.path.shift();"?"==a?(e.query="",l=be):"#"==a&&(e.fragment="",l=_e)}else p+=H(a,G);break;case me:"?"==a?(e.query="",l=be):"#"==a?(e.fragment="",l=_e):a!=n&&(e.path[0]+=H(a,B));break;case be:r||"#"!=a?a!=n&&("'"==a&&X(e)?e.query+="%27":e.query+="#"==a?"%23":H(a,B)):(e.fragment="",l=_e);break;case _e:a!=n&&(e.fragment+=H(a,W))}h++}},Ae=function(e){var t,r,n=l(this,Ae,"URL"),o=arguments.length>1?arguments[1]:void 0,a=String(e),s=A(n,{type:"URL"});if(void 0!==o)if(o instanceof Ae)t=S(o);else if(r=we(t={},String(o)))throw TypeError(r);if(r=we(s,a,null,t))throw TypeError(r);var u=s.searchParams=new _,c=w(u);c.updateSearchParams(s.query),c.updateURL=function(){s.query=String(u)||null},i||(n.href=ke.call(n),n.origin=xe.call(n),n.protocol=Re.call(n),n.username=Ee.call(n),n.password=Ce.call(n),n.host=Pe.call(n),n.hostname=Te.call(n),n.port=Oe.call(n),n.pathname=Le.call(n),n.search=Ie.call(n),n.searchParams=Fe.call(n),n.hash=je.call(n))},Se=Ae.prototype,ke=function(){var e=S(this),t=e.scheme,r=e.username,n=e.password,o=e.host,i=e.port,a=e.path,s=e.query,u=e.fragment,c=t+":";return null!==o?(c+="//",V(e)&&(c+=r+(n?":"+n:"")+"@"),c+=q(o),null!==i&&(c+=":"+i)):"file"==t&&(c+="//"),c+=e.cannotBeABaseURL?a[0]:a.length?"/"+a.join("/"):"",null!==s&&(c+="?"+s),null!==u&&(c+="#"+u),c},xe=function(){var e=S(this),t=e.scheme,r=e.port;if("blob"==t)try{return new URL(t.path[0]).origin}catch(e){return"null"}return"file"!=t&&X(e)?t+"://"+q(e.host)+(null!==r?":"+r:""):"null"},Re=function(){return S(this).scheme+":"},Ee=function(){return S(this).username},Ce=function(){return S(this).password},Pe=function(){var e=S(this),t=e.host,r=e.port;return null===t?"":null===r?q(t):q(t)+":"+r},Te=function(){var e=S(this).host;return null===e?"":q(e)},Oe=function(){var e=S(this).port;return null===e?"":String(e)},Le=function(){var e=S(this),t=e.path;return e.cannotBeABaseURL?t[0]:t.length?"/"+t.join("/"):""},Ie=function(){var e=S(this).query;return e?"?"+e:""},Fe=function(){return S(this).searchParams},je=function(){var e=S(this).fragment;return e?"#"+e:""},De=function(e,t){return{get:e,set:t,configurable:!0,enumerable:!0}};if(i&&u(Se,{href:De(ke,(function(e){var t=S(this),r=String(e),n=we(t,r);if(n)throw TypeError(n);w(t.searchParams).updateSearchParams(t.query)})),origin:De(xe),protocol:De(Re,(function(e){var t=S(this);we(t,String(e)+":",ee)})),username:De(Ee,(function(e){var t=S(this),r=d(String(e));if(!K(t)){t.username="";for(var n=0;n<r.length;n++)t.username+=H(r[n],z)}})),password:De(Ce,(function(e){var t=S(this),r=d(String(e));if(!K(t)){t.password="";for(var n=0;n<r.length;n++)t.password+=H(r[n],z)}})),host:De(Pe,(function(e){var t=S(this);t.cannotBeABaseURL||we(t,String(e),le)})),hostname:De(Te,(function(e){var t=S(this);t.cannotBeABaseURL||we(t,String(e),fe)})),port:De(Oe,(function(e){var t=S(this);K(t)||(""==(e=String(e))?t.port=null:we(t,e,he))})),pathname:De(Le,(function(e){var t=S(this);t.cannotBeABaseURL||(t.path=[],we(t,e+"",ge))})),search:De(Ie,(function(e){var t=S(this);""==(e=String(e))?t.query=null:("?"==e.charAt(0)&&(e=e.slice(1)),t.query="",we(t,e,be)),w(t.searchParams).updateSearchParams(t.query)})),searchParams:De(Fe),hash:De(je,(function(e){var t=S(this);""!=(e=String(e))?("#"==e.charAt(0)&&(e=e.slice(1)),t.fragment="",we(t,e,_e)):t.fragment=null}))}),c(Se,"toJSON",(function(){return ke.call(this)}),{enumerable:!0}),c(Se,"toString",(function(){return ke.call(this)}),{enumerable:!0}),b){var Me=b.createObjectURL,Ne=b.revokeObjectURL;Me&&c(Ae,"createObjectURL",(function(e){return Me.apply(b,arguments)})),Ne&&c(Ae,"revokeObjectURL",(function(e){return Ne.apply(b,arguments)}))}g(Ae,"URL"),o({global:!0,forced:!a,sham:!i},{URL:Ae})},function(e,t,r){var n=r(9),o=r(53),i=r(32),a=o("iterator");e.exports=!n((function(){var e=new URL("b?a=1&b=2&c=3","http://a"),t=e.searchParams,r="";return e.pathname="c%20d",t.forEach((function(e,n){t.delete("b"),r+=n+e})),i&&!e.toJSON||!t.sort||"http://a/c%20d?a=1&c=3"!==e.href||"3"!==t.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!t[a]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://тест").host||"#%D0%B1"!==new URL("http://a#б").hash||"a1c3"!==r||"x"!==new URL("http://x",void 0).host}))},function(e,t,r){"use strict";var n=/[^\0-\u007E]/,o=/[.\u3002\uFF0E\uFF61]/g,i="Overflow: input needs wider integers to process",a=Math.floor,s=String.fromCharCode,u=function(e){return e+22+75*(e<26)},c=function(e,t,r){var n=0;for(e=r?a(e/700):e>>1,e+=a(e/t);e>455;n+=36)e=a(e/35);return a(n+36*e/(e+38))},l=function(e){var t,r,n=[],o=(e=function(e){for(var t=[],r=0,n=e.length;r<n;){var o=e.charCodeAt(r++);if(o>=55296&&o<=56319&&r<n){var i=e.charCodeAt(r++);56320==(64512&i)?t.push(((1023&o)<<10)+(1023&i)+65536):(t.push(o),r--)}else t.push(o)}return t}(e)).length,l=128,f=0,h=72;for(t=0;t<e.length;t++)(r=e[t])<128&&n.push(s(r));var d=n.length,p=d;for(d&&n.push("-");p<o;){var v=2147483647;for(t=0;t<e.length;t++)(r=e[t])>=l&&r<v&&(v=r);var g=p+1;if(v-l>a((2147483647-f)/g))throw RangeError(i);for(f+=(v-l)*g,l=v,t=0;t<e.length;t++){if((r=e[t])<l&&++f>2147483647)throw RangeError(i);if(r==l){for(var y=f,m=36;;m+=36){var b=m<=h?1:m>=h+26?26:m-h;if(y<b)break;var _=y-b,w=36-b;n.push(s(u(b+_%w))),y=a(_/w)}n.push(s(u(y))),h=c(f,g,p==d),f=0,++p}}++f,++l}return n.join("")};e.exports=function(e){var t,r,i=[],a=e.toLowerCase().replace(o,".").split(".");for(t=0;t<a.length;t++)r=a[t],i.push(n.test(r)?"xn--"+l(r):r);return i.join(".")}},function(e,t,r){"use strict";r(109);var n=r(5),o=r(37),i=r(130),a=r(24),s=r(112),u=r(81),c=r(76),l=r(28),f=r(114),h=r(18),d=r(58),p=r(91),v=r(23),g=r(17),y=r(67),m=r(11),b=r(133),_=r(90),w=r(53),A=o("fetch"),S=o("Headers"),k=w("iterator"),x=l.set,R=l.getterFor("URLSearchParams"),E=l.getterFor("URLSearchParamsIterator"),C=/\+/g,P=Array(4),T=function(e){return P[e-1]||(P[e-1]=RegExp("((?:%[\\da-f]{2}){"+e+"})","gi"))},O=function(e){try{return decodeURIComponent(e)}catch(t){return e}},L=function(e){var t=e.replace(C," "),r=4;try{return decodeURIComponent(t)}catch(e){for(;r;)t=t.replace(T(r--),O);return t}},I=/[!'()~]|%20/g,F={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},j=function(e){return F[e]},D=function(e){return encodeURIComponent(e).replace(I,j)},M=function(e,t){if(t)for(var r,n,o=t.split("&"),i=0;i<o.length;)(r=o[i++]).length&&(n=r.split("="),e.push({key:L(n.shift()),value:L(n.join("="))}))},N=function(e){this.entries.length=0,M(this.entries,e)},U=function(e,t){if(e<t)throw TypeError("Not enough arguments")},q=c((function(e,t){x(this,{type:"URLSearchParamsIterator",iterator:b(R(e).entries),kind:t})}),"Iterator",(function(){var e=E(this),t=e.kind,r=e.iterator.next(),n=r.value;return r.done||(r.value="keys"===t?n.key:"values"===t?n.value:[n.key,n.value]),r})),B=function(){f(this,B,"URLSearchParams");var e,t,r,n,o,i,a,s,u,c=arguments.length>0?arguments[0]:void 0,l=this,d=[];if(x(l,{type:"URLSearchParams",entries:d,updateURL:function(){},updateSearchParams:N}),void 0!==c)if(g(c))if("function"==typeof(e=_(c)))for(r=(t=e.call(c)).next;!(n=r.call(t)).done;){if((a=(i=(o=b(v(n.value))).next).call(o)).done||(s=i.call(o)).done||!i.call(o).done)throw TypeError("Expected sequence with length 2");d.push({key:a.value+"",value:s.value+""})}else for(u in c)h(c,u)&&d.push({key:u,value:c[u]+""});else M(d,"string"==typeof c?"?"===c.charAt(0)?c.slice(1):c:c+"")},W=B.prototype;s(W,{append:function(e,t){U(arguments.length,2);var r=R(this);r.entries.push({key:e+"",value:t+""}),r.updateURL()},delete:function(e){U(arguments.length,1);for(var t=R(this),r=t.entries,n=e+"",o=0;o<r.length;)r[o].key===n?r.splice(o,1):o++;t.updateURL()},get:function(e){U(arguments.length,1);for(var t=R(this).entries,r=e+"",n=0;n<t.length;n++)if(t[n].key===r)return t[n].value;return null},getAll:function(e){U(arguments.length,1);for(var t=R(this).entries,r=e+"",n=[],o=0;o<t.length;o++)t[o].key===r&&n.push(t[o].value);return n},has:function(e){U(arguments.length,1);for(var t=R(this).entries,r=e+"",n=0;n<t.length;)if(t[n++].key===r)return!0;return!1},set:function(e,t){U(arguments.length,1);for(var r,n=R(this),o=n.entries,i=!1,a=e+"",s=t+"",u=0;u<o.length;u++)(r=o[u]).key===a&&(i?o.splice(u--,1):(i=!0,r.value=s));i||o.push({key:a,value:s}),n.updateURL()},sort:function(){var e,t,r,n=R(this),o=n.entries,i=o.slice();for(o.length=0,r=0;r<i.length;r++){for(e=i[r],t=0;t<r;t++)if(o[t].key>e.key){o.splice(t,0,e);break}t===r&&o.push(e)}n.updateURL()},forEach:function(e){for(var t,r=R(this).entries,n=d(e,arguments.length>1?arguments[1]:void 0,3),o=0;o<r.length;)n((t=r[o++]).value,t.key,this)},keys:function(){return new q(this,"keys")},values:function(){return new q(this,"values")},entries:function(){return new q(this,"entries")}},{enumerable:!0}),a(W,k,W.entries),a(W,"toString",(function(){for(var e,t=R(this).entries,r=[],n=0;n<t.length;)e=t[n++],r.push(D(e.key)+"="+D(e.value));return r.join("&")}),{enumerable:!0}),u(B,"URLSearchParams"),n({global:!0,forced:!i},{URLSearchParams:B}),i||"function"!=typeof A||"function"!=typeof S||n({global:!0,enumerable:!0,forced:!0},{fetch:function(e){var t,r,n,o=[e];return arguments.length>1&&(t=arguments[1],g(t)&&(r=t.body,"URLSearchParams"===p(r)&&((n=t.headers?new S(t.headers):new S).has("content-type")||n.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"),t=y(t,{body:m(0,String(r)),headers:m(0,n)}))),o.push(t)),A.apply(this,o)}}),e.exports={URLSearchParams:B,getState:R}},function(e,t,r){var n=r(23),o=r(90);e.exports=function(e){var t=o(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return n(t.call(e))}},function(e,t,r){"use strict";r(5)({target:"URL",proto:!0,enumerable:!0},{toJSON:function(){return URL.prototype.toString.call(this)}})},function(e,t,r){!function(e){"use strict";var t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol:function(e){return"Symbol("+e+")"};function r(){}var n=Number.isNaN||function(e){return e!=e},o=r;function i(e){return"object"==typeof e&&null!==e||"function"==typeof e}function a(e){return e.slice()}function s(e){return!1!==function(e){return!("number"!=typeof e||n(e)||e<0)}(e)&&e!==1/0}function u(e,t,r){if("function"!=typeof e)throw new TypeError("Argument is not a function");return Function.prototype.apply.call(e,t,r)}function c(e,t,r,n){var o=e[t];if(void 0!==o){if("function"!=typeof o)throw new TypeError(o+" is not a method");switch(r){case 0:return function(){return f(o,e,n)};case 1:return function(t){var r=[t].concat(n);return f(o,e,r)}}}return function(){return b(void 0)}}function l(e,t,r){var n=e[t];if(void 0!==n)return u(n,e,r)}function f(e,t,r){try{return b(u(e,t,r))}catch(e){return _(e)}}function h(e){if(e=Number(e),n(e)||e<0)throw new RangeError("highWaterMark property of a queuing strategy must be non-negative and non-NaN");return e}function d(e){if(void 0===e)return function(){return 1};if("function"!=typeof e)throw new TypeError("size property of a queuing strategy must be a function");return function(t){return e(t)}}var p=Promise,v=Promise.prototype.then,g=Promise.resolve.bind(p),y=Promise.reject.bind(p);function m(e){return new p(e)}function b(e){return g(e)}function _(e){return y(e)}function w(e,t,r){return v.call(e,t,r)}function A(e,t,r){w(w(e,t,r),void 0,o)}function S(e,t){A(e,t)}function k(e,t){A(e,void 0,t)}function x(e,t,r){return w(e,t,r)}function R(e){w(e,void 0,o)}var E=function(){function e(){this._cursor=0,this._size=0,this._front={_elements:[],_next:void 0},this._back=this._front,this._cursor=0,this._size=0}return Object.defineProperty(e.prototype,"length",{get:function(){return this._size},enumerable:!0,configurable:!0}),e.prototype.push=function(e){var t=this._back,r=t;16383===t._elements.length&&(r={_elements:[],_next:void 0}),t._elements.push(e),r!==t&&(this._back=r,t._next=r),++this._size},e.prototype.shift=function(){var e=this._front,t=e,r=this._cursor,n=r+1,o=e._elements,i=o[r];return 16384===n&&(t=e._next,n=0),--this._size,this._cursor=n,e!==t&&(this._front=t),o[r]=void 0,i},e.prototype.forEach=function(e){for(var t=this._cursor,r=this._front,n=r._elements;!(t===n.length&&void 0===r._next||t===n.length&&(t=0,0===(n=(r=r._next)._elements).length));)e(n[t]),++t},e.prototype.peek=function(){var e=this._front,t=this._cursor;return e._elements[t]},e}();function C(e,t,r){var n=null;!0===r&&(n=Object.prototype);var o=Object.create(n);return o.value=e,o.done=t,o}function P(e,t){e._forAuthorCode=!0,e._ownerReadableStream=t,t._reader=e,"readable"===t._state?I(e):"closed"===t._state?function(e){I(e),D(e)}(e):F(e,t._storedError)}function T(e,t){return qt(e._ownerReadableStream,t)}function O(e){"readable"===e._ownerReadableStream._state?j(e,new TypeError("Reader was released and can no longer be used to monitor the stream's closedness")):function(e,t){F(e,t)}(e,new TypeError("Reader was released and can no longer be used to monitor the stream's closedness")),e._ownerReadableStream._reader=void 0,e._ownerReadableStream=void 0}function L(e){return new TypeError("Cannot "+e+" a stream using a released reader")}function I(e){e._closedPromise=m((function(t,r){e._closedPromise_resolve=t,e._closedPromise_reject=r}))}function F(e,t){I(e),j(e,t)}function j(e,t){R(e._closedPromise),e._closedPromise_reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0}function D(e){e._closedPromise_resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0}var M=t("[[CancelSteps]]"),N=t("[[PullSteps]]");function U(e,t){void 0===t&&(t=!1);var r=new Y(e);return r._forAuthorCode=t,r}function q(e){return m((function(t,r){var n={_resolve:t,_reject:r};e._reader._readRequests.push(n)}))}function B(e,t,r){var n=e._reader;n._readRequests.shift()._resolve(C(t,r,n._forAuthorCode))}function W(e){return e._reader._readRequests.length}function G(e){var t=e._reader;return void 0!==t&&!!X(t)}var z,H,Y=function(){function e(e){if(!1===Nt(e))throw new TypeError("ReadableStreamDefaultReader can only be constructed with a ReadableStream instance");if(!0===Ut(e))throw new TypeError("This stream has already been locked for exclusive reading by another reader");P(this,e),this._readRequests=new E}return Object.defineProperty(e.prototype,"closed",{get:function(){return X(this)?this._closedPromise:_(K("closed"))},enumerable:!0,configurable:!0}),e.prototype.cancel=function(e){return X(this)?void 0===this._ownerReadableStream?_(L("cancel")):T(this,e):_(K("cancel"))},e.prototype.read=function(){return X(this)?void 0===this._ownerReadableStream?_(L("read from")):V(this):_(K("read"))},e.prototype.releaseLock=function(){if(!X(this))throw K("releaseLock");if(void 0!==this._ownerReadableStream){if(this._readRequests.length>0)throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");O(this)}},e}();function X(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_readRequests")}function V(e){var t=e._ownerReadableStream;return t._disturbed=!0,"closed"===t._state?b(C(void 0,!0,e._forAuthorCode)):"errored"===t._state?_(t._storedError):t._readableStreamController[N]()}function K(e){return new TypeError("ReadableStreamDefaultReader.prototype."+e+" can only be used on a ReadableStreamDefaultReader")}"symbol"==typeof t.asyncIterator&&((z={})[t.asyncIterator]=function(){return this},H=z,Object.defineProperty(H,t.asyncIterator,{enumerable:!1}));var Q={next:function(){if(!1===J(this))return _(Z("next"));var e=this._asyncIteratorReader;return void 0===e._ownerReadableStream?_(L("iterate")):x(V(e),(function(t){var r=t.done;return r&&O(e),C(t.value,r,!0)}))},return:function(e){if(!1===J(this))return _(Z("next"));var t=this._asyncIteratorReader;if(void 0===t._ownerReadableStream)return _(L("finish iterating"));if(t._readRequests.length>0)return _(new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled"));if(!1===this._preventCancel){var r=T(t,e);return O(t),x(r,(function(){return C(e,!0,!0)}))}return O(t),b(C(e,!0,!0))}};function J(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_asyncIteratorReader")}function Z(e){return new TypeError("ReadableStreamAsyncIterator."+e+" can only be used on a ReadableSteamAsyncIterator")}function $(e){var t=e._queue.shift();return e._queueTotalSize-=t.size,e._queueTotalSize<0&&(e._queueTotalSize=0),t.value}function ee(e,t,r){if(!s(r=Number(r)))throw new RangeError("Size must be a finite, non-NaN, non-negative number.");e._queue.push({value:t,size:r}),e._queueTotalSize+=r}function te(e){e._queue=new E,e._queueTotalSize=0}void 0!==H&&Object.setPrototypeOf(Q,H),Object.defineProperty(Q,"next",{enumerable:!1}),Object.defineProperty(Q,"return",{enumerable:!1});var re=t("[[AbortSteps]]"),ne=t("[[ErrorSteps]]"),oe=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={}),ae(this);var r=t.size,n=t.highWaterMark;if(void 0!==e.type)throw new RangeError("Invalid type is specified");var o=d(r);void 0===n&&(n=1),function(e,t,r,n){var o=Object.create(ke.prototype),i=c(t,"write",1,[o]),a=c(t,"close",0,[]),s=c(t,"abort",1,[]);xe(e,o,(function(){return l(t,"start",[o])}),i,a,s,r,n)}(this,e,n=h(n),o)}return Object.defineProperty(e.prototype,"locked",{get:function(){if(!1===se(this))throw Le("locked");return ue(this)},enumerable:!0,configurable:!0}),e.prototype.abort=function(e){return!1===se(this)?_(Le("abort")):!0===ue(this)?_(new TypeError("Cannot abort a stream that already has a writer")):ce(this,e)},e.prototype.close=function(){return!1===se(this)?_(Le("close")):!0===ue(this)?_(new TypeError("Cannot close a stream that already has a writer")):!0===pe(this)?_(new TypeError("Cannot close an already-closing stream")):le(this)},e.prototype.getWriter=function(){if(!1===se(this))throw Le("getWriter");return ie(this)},e}();function ie(e){return new ye(e)}function ae(e){e._state="writable",e._storedError=void 0,e._writer=void 0,e._writableStreamController=void 0,e._writeRequests=new E,e._inFlightWriteRequest=void 0,e._closeRequest=void 0,e._inFlightCloseRequest=void 0,e._pendingAbortRequest=void 0,e._backpressure=!1}function se(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_writableStreamController")}function ue(e){return void 0!==e._writer}function ce(e,t){var r=e._state;if("closed"===r||"errored"===r)return b(void 0);if(void 0!==e._pendingAbortRequest)return e._pendingAbortRequest._promise;var n=!1;"erroring"===r&&(n=!0,t=void 0);var o=m((function(r,o){e._pendingAbortRequest={_promise:void 0,_resolve:r,_reject:o,_reason:t,_wasAlreadyErroring:n}}));return e._pendingAbortRequest._promise=o,!1===n&&he(e,t),o}function le(e){var t=e._state;if("closed"===t||"errored"===t)return _(new TypeError("The stream (in "+t+" state) is not in the writable state and cannot be closed"));var r,n=m((function(t,r){var n={_resolve:t,_reject:r};e._closeRequest=n})),o=e._writer;return void 0!==o&&!0===e._backpressure&&"writable"===t&&Ge(o),ee(r=e._writableStreamController,"close",0),Ce(r),n}function fe(e,t){"writable"!==e._state?de(e):he(e,t)}function he(e,t){var r=e._writableStreamController;e._state="erroring",e._storedError=t;var n=e._writer;void 0!==n&&we(n,t),!1===function(e){return void 0!==e._inFlightWriteRequest||void 0!==e._inFlightCloseRequest}(e)&&!0===r._started&&de(e)}function de(e){e._state="errored",e._writableStreamController[ne]();var t=e._storedError;if(e._writeRequests.forEach((function(e){e._reject(t)})),e._writeRequests=new E,void 0!==e._pendingAbortRequest){var r=e._pendingAbortRequest;if(e._pendingAbortRequest=void 0,!0===r._wasAlreadyErroring)return r._reject(t),void ve(e);A(e._writableStreamController[re](r._reason),(function(){r._resolve(),ve(e)}),(function(t){r._reject(t),ve(e)}))}else ve(e)}function pe(e){return void 0!==e._closeRequest||void 0!==e._inFlightCloseRequest}function ve(e){void 0!==e._closeRequest&&(e._closeRequest._reject(e._storedError),e._closeRequest=void 0);var t=e._writer;void 0!==t&&Me(t,e._storedError)}function ge(e,t){var r=e._writer;void 0!==r&&t!==e._backpressure&&(!0===t?function(e){Ue(e)}(r):Ge(r)),e._backpressure=t}var ye=function(){function e(e){if(!1===se(e))throw new TypeError("WritableStreamDefaultWriter can only be constructed with a WritableStream instance");if(!0===ue(e))throw new TypeError("This stream has already been locked for exclusive writing by another writer");this._ownerWritableStream=e,e._writer=this;var t,r=e._state;if("writable"===r)!1===pe(e)&&!0===e._backpressure?Ue(this):Be(this),je(this);else if("erroring"===r)qe(this,e._storedError),je(this);else if("closed"===r)Be(this),je(t=this),Ne(t);else{var n=e._storedError;qe(this,n),De(this,n)}}return Object.defineProperty(e.prototype,"closed",{get:function(){return!1===me(this)?_(Ie("closed")):this._closedPromise},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"desiredSize",{get:function(){if(!1===me(this))throw Ie("desiredSize");if(void 0===this._ownerWritableStream)throw Fe("desiredSize");return e=this._ownerWritableStream,"errored"===(t=e._state)||"erroring"===t?null:"closed"===t?0:Ee(e._writableStreamController);var e,t},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"ready",{get:function(){return!1===me(this)?_(Ie("ready")):this._readyPromise},enumerable:!0,configurable:!0}),e.prototype.abort=function(e){return!1===me(this)?_(Ie("abort")):void 0===this._ownerWritableStream?_(Fe("abort")):function(e,t){return ce(e._ownerWritableStream,t)}(this,e)},e.prototype.close=function(){if(!1===me(this))return _(Ie("close"));var e=this._ownerWritableStream;return void 0===e?_(Fe("close")):!0===pe(e)?_(new TypeError("Cannot close an already-closing stream")):be(this)},e.prototype.releaseLock=function(){if(!1===me(this))throw Ie("releaseLock");void 0!==this._ownerWritableStream&&Ae(this)},e.prototype.write=function(e){return!1===me(this)?_(Ie("write")):void 0===this._ownerWritableStream?_(Fe("write to")):Se(this,e)},e}();function me(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_ownerWritableStream")}function be(e){return le(e._ownerWritableStream)}function _e(e,t){"pending"===e._closedPromiseState?Me(e,t):function(e,t){De(e,t)}(e,t)}function we(e,t){"pending"===e._readyPromiseState?We(e,t):function(e,t){qe(e,t)}(e,t)}function Ae(e){var t=e._ownerWritableStream,r=new TypeError("Writer was released and can no longer be used to monitor the stream's closedness");we(e,r),_e(e,r),t._writer=void 0,e._ownerWritableStream=void 0}function Se(e,t){var r=e._ownerWritableStream,n=r._writableStreamController,o=function(e,t){try{return e._strategySizeAlgorithm(t)}catch(t){return Pe(e,t),1}}(n,t);if(r!==e._ownerWritableStream)return _(Fe("write to"));var i=r._state;if("errored"===i)return _(r._storedError);if(!0===pe(r)||"closed"===i)return _(new TypeError("The stream is closing or closed and cannot be written to"));if("erroring"===i)return _(r._storedError);var a=function(e){return m((function(t,r){var n={_resolve:t,_reject:r};e._writeRequests.push(n)}))}(r);return function(e,t,r){var n={chunk:t};try{ee(e,n,r)}catch(t){return void Pe(e,t)}var o=e._controlledWritableStream;if(!1===pe(o)&&"writable"===o._state){var i=Te(e);ge(o,i)}Ce(e)}(n,t,o),a}var ke=function(){function e(){throw new TypeError("WritableStreamDefaultController cannot be constructed explicitly")}return e.prototype.error=function(e){if(0==(!!i(t=this)&&!!Object.prototype.hasOwnProperty.call(t,"_controlledWritableStream")))throw new TypeError("WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController");var t;"writable"===this._controlledWritableStream._state&&Oe(this,e)},e.prototype[re]=function(e){var t=this._abortAlgorithm(e);return Re(this),t},e.prototype[ne]=function(){te(this)},e}();function xe(e,t,r,n,o,i,a,s){t._controlledWritableStream=e,e._writableStreamController=t,t._queue=void 0,t._queueTotalSize=void 0,te(t),t._started=!1,t._strategySizeAlgorithm=s,t._strategyHWM=a,t._writeAlgorithm=n,t._closeAlgorithm=o,t._abortAlgorithm=i;var u=Te(t);ge(e,u),A(b(r()),(function(){t._started=!0,Ce(t)}),(function(r){t._started=!0,fe(e,r)}))}function Re(e){e._writeAlgorithm=void 0,e._closeAlgorithm=void 0,e._abortAlgorithm=void 0,e._strategySizeAlgorithm=void 0}function Ee(e){return e._strategyHWM-e._queueTotalSize}function Ce(e){var t=e._controlledWritableStream;if(!1!==e._started&&void 0===t._inFlightWriteRequest)if("erroring"!==t._state){if(0!==e._queue.length){var r=e._queue.peek().value;"close"===r?function(e){var t=e._controlledWritableStream;(function(e){e._inFlightCloseRequest=e._closeRequest,e._closeRequest=void 0})(t),$(e);var r=e._closeAlgorithm();Re(e),A(r,(function(){!function(e){e._inFlightCloseRequest._resolve(void 0),e._inFlightCloseRequest=void 0,"erroring"===e._state&&(e._storedError=void 0,void 0!==e._pendingAbortRequest&&(e._pendingAbortRequest._resolve(),e._pendingAbortRequest=void 0)),e._state="closed";var t=e._writer;void 0!==t&&Ne(t)}(t)}),(function(e){!function(e,t){e._inFlightCloseRequest._reject(t),e._inFlightCloseRequest=void 0,void 0!==e._pendingAbortRequest&&(e._pendingAbortRequest._reject(t),e._pendingAbortRequest=void 0),fe(e,t)}(t,e)}))}(e):function(e,t){var r=e._controlledWritableStream;(function(e){e._inFlightWriteRequest=e._writeRequests.shift()})(r),A(e._writeAlgorithm(t),(function(){!function(e){e._inFlightWriteRequest._resolve(void 0),e._inFlightWriteRequest=void 0}(r);var t=r._state;if($(e),!1===pe(r)&&"writable"===t){var n=Te(e);ge(r,n)}Ce(e)}),(function(t){"writable"===r._state&&Re(e),function(e,t){e._inFlightWriteRequest._reject(t),e._inFlightWriteRequest=void 0,fe(e,t)}(r,t)}))}(e,r.chunk)}}else de(t)}function Pe(e,t){"writable"===e._controlledWritableStream._state&&Oe(e,t)}function Te(e){return Ee(e)<=0}function Oe(e,t){var r=e._controlledWritableStream;Re(e),he(r,t)}function Le(e){return new TypeError("WritableStream.prototype."+e+" can only be used on a WritableStream")}function Ie(e){return new TypeError("WritableStreamDefaultWriter.prototype."+e+" can only be used on a WritableStreamDefaultWriter")}function Fe(e){return new TypeError("Cannot "+e+" a stream using a released writer")}function je(e){e._closedPromise=m((function(t,r){e._closedPromise_resolve=t,e._closedPromise_reject=r,e._closedPromiseState="pending"}))}function De(e,t){je(e),Me(e,t)}function Me(e,t){R(e._closedPromise),e._closedPromise_reject(t),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState="rejected"}function Ne(e){e._closedPromise_resolve(void 0),e._closedPromise_resolve=void 0,e._closedPromise_reject=void 0,e._closedPromiseState="resolved"}function Ue(e){e._readyPromise=m((function(t,r){e._readyPromise_resolve=t,e._readyPromise_reject=r})),e._readyPromiseState="pending"}function qe(e,t){Ue(e),We(e,t)}function Be(e){Ue(e),Ge(e)}function We(e,t){R(e._readyPromise),e._readyPromise_reject(t),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState="rejected"}function Ge(e){e._readyPromise_resolve(void 0),e._readyPromise_resolve=void 0,e._readyPromise_reject=void 0,e._readyPromiseState="fulfilled"}function ze(e){if("object"!=typeof e||null===e)return!1;try{return"boolean"==typeof e.aborted}catch(e){return!1}}var He,Ye="undefined"!=typeof DOMException?DOMException:void 0,Xe=function(e){if("function"!=typeof e&&"object"!=typeof e)return!1;try{return new e,!0}catch(e){return!1}}(Ye)?Ye:((He=function(e,t){this.message=e||"",this.name=t||"Error",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}).prototype=Object.create(Error.prototype),Object.defineProperty(He.prototype,"constructor",{value:He,writable:!0,configurable:!0}),He);function Ve(e,t,n,o,i,a){var s=U(e),u=ie(t);e._disturbed=!0;var c=!1,l=b(void 0);return m((function(f,h){var d,p,v,g;if(void 0!==a){if(d=function(){var r=new Xe("Aborted","AbortError"),n=[];!1===o&&n.push((function(){return"writable"===t._state?ce(t,r):b(void 0)})),!1===i&&n.push((function(){return"readable"===e._state?qt(e,r):b(void 0)})),C((function(){return Promise.all(n.map((function(e){return e()})))}),!0,r)},!0===a.aborted)return void d();a.addEventListener("abort",d)}if(E(e,s._closedPromise,(function(e){!1===o?C((function(){return ce(t,e)}),!0,e):P(!0,e)})),E(t,u._closedPromise,(function(t){!1===i?C((function(){return qt(e,t)}),!0,t):P(!0,t)})),p=e,v=s._closedPromise,g=function(){!1===n?C((function(){return function(e){var t=e._ownerWritableStream,r=t._state;return!0===pe(t)||"closed"===r?b(void 0):"errored"===r?_(t._storedError):be(e)}(u)})):P()},"closed"===p._state?g():S(v,g),!0===pe(t)||"closed"===t._state){var y=new TypeError("the destination writable stream closed before all data could be piped to it");!1===i?C((function(){return qt(e,y)}),!0,y):P(!0,y)}function x(){var e=l;return w(l,(function(){return e!==l?x():void 0}))}function E(e,t,r){"errored"===e._state?r(e._storedError):k(t,r)}function C(e,r,n){function o(){A(e(),(function(){return T(r,n)}),(function(e){return T(!0,e)}))}!0!==c&&(c=!0,"writable"===t._state&&!1===pe(t)?S(x(),o):o())}function P(e,r){!0!==c&&(c=!0,"writable"===t._state&&!1===pe(t)?S(x(),(function(){return T(e,r)})):T(e,r))}function T(e,t){Ae(u),O(s),void 0!==a&&a.removeEventListener("abort",d),e?h(t):f(void 0)}R(m((function(e,t){!function n(o){o?e():w(!0===c?b(!0):w(u._readyPromise,(function(){return w(V(s),(function(e){var t=e.value;return!0===e.done||(l=w(Se(u,t),void 0,r),!1)}))})),n,t)}(!1)})))}))}var Ke=function(){function e(){throw new TypeError}return Object.defineProperty(e.prototype,"desiredSize",{get:function(){if(!1===Qe(this))throw at("desiredSize");return nt(this)},enumerable:!0,configurable:!0}),e.prototype.close=function(){if(!1===Qe(this))throw at("close");if(!1===ot(this))throw new TypeError("The stream is not in a state that permits close");et(this)},e.prototype.enqueue=function(e){if(!1===Qe(this))throw at("enqueue");if(!1===ot(this))throw new TypeError("The stream is not in a state that permits enqueue");return tt(this,e)},e.prototype.error=function(e){if(!1===Qe(this))throw at("error");rt(this,e)},e.prototype[M]=function(e){te(this);var t=this._cancelAlgorithm(e);return $e(this),t},e.prototype[N]=function(){var e=this._controlledReadableStream;if(this._queue.length>0){var t=$(this);return!0===this._closeRequested&&0===this._queue.length?($e(this),Bt(e)):Je(this),b(C(t,!1,e._reader._forAuthorCode))}var r=q(e);return Je(this),r},e}();function Qe(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_controlledReadableStream")}function Je(e){!1!==Ze(e)&&(!0!==e._pulling?(e._pulling=!0,A(e._pullAlgorithm(),(function(){e._pulling=!1,!0===e._pullAgain&&(e._pullAgain=!1,Je(e))}),(function(t){rt(e,t)}))):e._pullAgain=!0)}function Ze(e){var t=e._controlledReadableStream;return!1!==ot(e)&&!1!==e._started&&(!0===Ut(t)&&W(t)>0||nt(e)>0)}function $e(e){e._pullAlgorithm=void 0,e._cancelAlgorithm=void 0,e._strategySizeAlgorithm=void 0}function et(e){var t=e._controlledReadableStream;e._closeRequested=!0,0===e._queue.length&&($e(e),Bt(t))}function tt(e,t){var r=e._controlledReadableStream;if(!0===Ut(r)&&W(r)>0)B(r,t,!1);else{var n=void 0;try{n=e._strategySizeAlgorithm(t)}catch(t){throw rt(e,t),t}try{ee(e,t,n)}catch(t){throw rt(e,t),t}}Je(e)}function rt(e,t){var r=e._controlledReadableStream;"readable"===r._state&&(te(e),$e(e),Wt(r,t))}function nt(e){var t=e._controlledReadableStream._state;return"errored"===t?null:"closed"===t?0:e._strategyHWM-e._queueTotalSize}function ot(e){var t=e._controlledReadableStream._state;return!1===e._closeRequested&&"readable"===t}function it(e,t,r,n,o,i,a){t._controlledReadableStream=e,t._queue=void 0,t._queueTotalSize=void 0,te(t),t._started=!1,t._closeRequested=!1,t._pullAgain=!1,t._pulling=!1,t._strategySizeAlgorithm=a,t._strategyHWM=i,t._pullAlgorithm=n,t._cancelAlgorithm=o,e._readableStreamController=t,A(b(r()),(function(){t._started=!0,Je(t)}),(function(e){rt(t,e)}))}function at(e){return new TypeError("ReadableStreamDefaultController.prototype."+e+" can only be used on a ReadableStreamDefaultController")}var st=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},ut=function(){function e(){throw new TypeError("ReadableStreamBYOBRequest cannot be used directly")}return Object.defineProperty(e.prototype,"view",{get:function(){if(!1===ft(this))throw Et("view");return this._view},enumerable:!0,configurable:!0}),e.prototype.respond=function(e){if(!1===ft(this))throw Et("respond");if(void 0===this._associatedReadableByteStreamController)throw new TypeError("This BYOB request has been invalidated");this._view.buffer,function(e,t){if(!1===s(t=Number(t)))throw new RangeError("bytesWritten must be a finite");wt(e,t)}(this._associatedReadableByteStreamController,e)},e.prototype.respondWithNewView=function(e){if(!1===ft(this))throw Et("respond");if(void 0===this._associatedReadableByteStreamController)throw new TypeError("This BYOB request has been invalidated");if(!ArrayBuffer.isView(e))throw new TypeError("You can only respond with array buffer views");e.buffer,function(e,t){var r=e._pendingPullIntos.peek();if(r.byteOffset+r.bytesFilled!==t.byteOffset)throw new RangeError("The region specified by view does not match byobRequest");if(r.byteLength!==t.byteLength)throw new RangeError("The buffer of view has different capacity than byobRequest");r.buffer=t.buffer,wt(e,t.byteLength)}(this._associatedReadableByteStreamController,e)},e}(),ct=function(){function e(){throw new TypeError("ReadableByteStreamController constructor cannot be used directly")}return Object.defineProperty(e.prototype,"byobRequest",{get:function(){if(!1===lt(this))throw Ct("byobRequest");if(void 0===this._byobRequest&&this._pendingPullIntos.length>0){var e=this._pendingPullIntos.peek(),t=new Uint8Array(e.buffer,e.byteOffset+e.bytesFilled,e.byteLength-e.bytesFilled),r=Object.create(ut.prototype);!function(e,t,r){e._associatedReadableByteStreamController=t,e._view=r}(r,this,t),this._byobRequest=r}return this._byobRequest},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"desiredSize",{get:function(){if(!1===lt(this))throw Ct("desiredSize");return xt(this)},enumerable:!0,configurable:!0}),e.prototype.close=function(){if(!1===lt(this))throw Ct("close");if(!0===this._closeRequested)throw new TypeError("The stream has already been closed; do not close it again!");var e=this._controlledReadableByteStream._state;if("readable"!==e)throw new TypeError("The stream (in "+e+" state) is not in the readable state and cannot be closed");!function(e){var t=e._controlledReadableByteStream;if(e._queueTotalSize>0)e._closeRequested=!0;else{if(e._pendingPullIntos.length>0&&e._pendingPullIntos.peek().bytesFilled>0){var r=new TypeError("Insufficient bytes to fill elements in the given buffer");throw kt(e,r),r}St(e),Bt(t)}}(this)},e.prototype.enqueue=function(e){if(!1===lt(this))throw Ct("enqueue");if(!0===this._closeRequested)throw new TypeError("stream is closed or draining");var t=this._controlledReadableByteStream._state;if("readable"!==t)throw new TypeError("The stream (in "+t+" state) is not in the readable state and cannot be enqueued to");if(!ArrayBuffer.isView(e))throw new TypeError("You can only enqueue array buffer views when using a ReadableByteStreamController");e.buffer,function(e,t){var r=e._controlledReadableByteStream,n=t.buffer,o=t.byteOffset,i=t.byteLength,a=n;if(!0===G(r))if(0===W(r))vt(e,a,o,i);else{var s=new Uint8Array(a,o,i);B(r,s,!1)}else!0===Ot(r)?(vt(e,a,o,i),_t(e)):vt(e,a,o,i);ht(e)}(this,e)},e.prototype.error=function(e){if(!1===lt(this))throw Ct("error");kt(this,e)},e.prototype[M]=function(e){this._pendingPullIntos.length>0&&(this._pendingPullIntos.peek().bytesFilled=0),te(this);var t=this._cancelAlgorithm(e);return St(this),t},e.prototype[N]=function(){var e=this._controlledReadableByteStream;if(this._queueTotalSize>0){var t=this._queue.shift();this._queueTotalSize-=t.byteLength,mt(this);var r=void 0;try{r=new Uint8Array(t.buffer,t.byteOffset,t.byteLength)}catch(e){return _(e)}return b(C(r,!1,e._reader._forAuthorCode))}var n=this._autoAllocateChunkSize;if(void 0!==n){var o=void 0;try{o=new ArrayBuffer(n)}catch(e){return _(e)}var i={buffer:o,byteOffset:0,byteLength:n,bytesFilled:0,elementSize:1,ctor:Uint8Array,readerType:"default"};this._pendingPullIntos.push(i)}var a=q(e);return ht(this),a},e}();function lt(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_controlledReadableByteStream")}function ft(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_associatedReadableByteStreamController")}function ht(e){!1!==function(e){var t=e._controlledReadableByteStream;return"readable"===t._state&&!0!==e._closeRequested&&!1!==e._started&&(!0===G(t)&&W(t)>0||!0===Ot(t)&&Tt(t)>0||xt(e)>0)}(e)&&(!0!==e._pulling?(e._pulling=!0,A(e._pullAlgorithm(),(function(){e._pulling=!1,!0===e._pullAgain&&(e._pullAgain=!1,ht(e))}),(function(t){kt(e,t)}))):e._pullAgain=!0)}function dt(e,t){var r=!1;"closed"===e._state&&(r=!0);var n=pt(t);"default"===t.readerType?B(e,n,r):function(e,t,r){var n=e._reader;n._readIntoRequests.shift()._resolve(C(t,r,n._forAuthorCode))}(e,n,r)}function pt(e){var t=e.bytesFilled,r=e.elementSize;return new e.ctor(e.buffer,e.byteOffset,t/r)}function vt(e,t,r,n){e._queue.push({buffer:t,byteOffset:r,byteLength:n}),e._queueTotalSize+=n}function gt(e,t){var r=t.elementSize,n=t.bytesFilled-t.bytesFilled%r,o=Math.min(e._queueTotalSize,t.byteLength-t.bytesFilled),i=t.bytesFilled+o,a=i-i%r,s=o,u=!1;a>n&&(s=a-t.bytesFilled,u=!0);for(var c,l,f,h,d,p=e._queue;s>0;){var v=p.peek(),g=Math.min(s,v.byteLength),y=t.byteOffset+t.bytesFilled;c=t.buffer,l=y,f=v.buffer,h=v.byteOffset,d=g,new Uint8Array(c).set(new Uint8Array(f,h,d),l),v.byteLength===g?p.shift():(v.byteOffset+=g,v.byteLength-=g),e._queueTotalSize-=g,yt(e,g,t),s-=g}return u}function yt(e,t,r){bt(e),r.bytesFilled+=t}function mt(e){0===e._queueTotalSize&&!0===e._closeRequested?(St(e),Bt(e._controlledReadableByteStream)):ht(e)}function bt(e){void 0!==e._byobRequest&&(e._byobRequest._associatedReadableByteStreamController=void 0,e._byobRequest._view=void 0,e._byobRequest=void 0)}function _t(e){for(;e._pendingPullIntos.length>0;){if(0===e._queueTotalSize)return;var t=e._pendingPullIntos.peek();!0===gt(e,t)&&(At(e),dt(e._controlledReadableByteStream,t))}}function wt(e,t){var r=e._pendingPullIntos.peek();if("closed"===e._controlledReadableByteStream._state){if(0!==t)throw new TypeError("bytesWritten must be 0 when calling respond() on a closed stream");!function(e,t){t.buffer=t.buffer;var r=e._controlledReadableByteStream;if(!0===Ot(r))for(;Tt(r)>0;)dt(r,At(e))}(e,r)}else!function(e,t,r){if(r.bytesFilled+t>r.byteLength)throw new RangeError("bytesWritten out of range");if(yt(e,t,r),!(r.bytesFilled<r.elementSize)){At(e);var n=r.bytesFilled%r.elementSize;if(n>0){var o=r.byteOffset+r.bytesFilled,i=r.buffer.slice(o-n,o);vt(e,i,0,i.byteLength)}r.buffer=r.buffer,r.bytesFilled-=n,dt(e._controlledReadableByteStream,r),_t(e)}}(e,t,r);ht(e)}function At(e){var t=e._pendingPullIntos.shift();return bt(e),t}function St(e){e._pullAlgorithm=void 0,e._cancelAlgorithm=void 0}function kt(e,t){var r=e._controlledReadableByteStream;"readable"===r._state&&(function(e){bt(e),e._pendingPullIntos=new E}(e),te(e),St(e),Wt(r,t))}function xt(e){var t=e._controlledReadableByteStream._state;return"errored"===t?null:"closed"===t?0:e._strategyHWM-e._queueTotalSize}function Rt(e,t,r){var n=Object.create(ct.prototype),o=c(t,"pull",0,[n]),i=c(t,"cancel",1,[]),a=t.autoAllocateChunkSize;if(void 0!==a&&(a=Number(a),!1===st(a)||a<=0))throw new RangeError("autoAllocateChunkSize must be a positive integer");!function(e,t,r,n,o,i,a){t._controlledReadableByteStream=e,t._pullAgain=!1,t._pulling=!1,t._byobRequest=void 0,t._queue=t._queueTotalSize=void 0,te(t),t._closeRequested=!1,t._started=!1,t._strategyHWM=h(i),t._pullAlgorithm=n,t._cancelAlgorithm=o,t._autoAllocateChunkSize=a,t._pendingPullIntos=new E,e._readableStreamController=t,A(b(r()),(function(){t._started=!0,ht(t)}),(function(e){kt(t,e)}))}(e,n,(function(){return l(t,"start",[n])}),o,i,r,a)}function Et(e){return new TypeError("ReadableStreamBYOBRequest.prototype."+e+" can only be used on a ReadableStreamBYOBRequest")}function Ct(e){return new TypeError("ReadableByteStreamController.prototype."+e+" can only be used on a ReadableByteStreamController")}function Pt(e){return m((function(t,r){var n={_resolve:t,_reject:r};e._reader._readIntoRequests.push(n)}))}function Tt(e){return e._reader._readIntoRequests.length}function Ot(e){var t=e._reader;return void 0!==t&&!!It(t)}var Lt=function(){function e(e){if(!Nt(e))throw new TypeError("ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a byte source");if(!1===lt(e._readableStreamController))throw new TypeError("Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte source");if(Ut(e))throw new TypeError("This stream has already been locked for exclusive reading by another reader");P(this,e),this._readIntoRequests=new E}return Object.defineProperty(e.prototype,"closed",{get:function(){return It(this)?this._closedPromise:_(Ft("closed"))},enumerable:!0,configurable:!0}),e.prototype.cancel=function(e){return It(this)?void 0===this._ownerReadableStream?_(L("cancel")):T(this,e):_(Ft("cancel"))},e.prototype.read=function(e){return It(this)?void 0===this._ownerReadableStream?_(L("read from")):ArrayBuffer.isView(e)?(e.buffer,0===e.byteLength?_(new TypeError("view must have non-zero byteLength")):function(e,t){var r=e._ownerReadableStream;return r._disturbed=!0,"errored"===r._state?_(r._storedError):function(e,t){var r=e._controlledReadableByteStream,n=1;t.constructor!==DataView&&(n=t.constructor.BYTES_PER_ELEMENT);var o=t.constructor,i={buffer:t.buffer,byteOffset:t.byteOffset,byteLength:t.byteLength,bytesFilled:0,elementSize:n,ctor:o,readerType:"byob"};if(e._pendingPullIntos.length>0)return e._pendingPullIntos.push(i),Pt(r);if("closed"===r._state)return b(C(new o(i.buffer,i.byteOffset,0),!0,r._reader._forAuthorCode));if(e._queueTotalSize>0){if(!0===gt(e,i)){var a=pt(i);return mt(e),b(C(a,!1,r._reader._forAuthorCode))}if(!0===e._closeRequested){var s=new TypeError("Insufficient bytes to fill elements in the given buffer");return kt(e,s),_(s)}}e._pendingPullIntos.push(i);var u=Pt(r);return ht(e),u}(r._readableStreamController,t)}(this,e)):_(new TypeError("view must be an array buffer view")):_(Ft("read"))},e.prototype.releaseLock=function(){if(!It(this))throw Ft("releaseLock");if(void 0!==this._ownerReadableStream){if(this._readIntoRequests.length>0)throw new TypeError("Tried to release a reader lock when that reader has pending read() calls un-settled");O(this)}},e}();function It(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_readIntoRequests")}function Ft(e){return new TypeError("ReadableStreamBYOBReader.prototype."+e+" can only be used on a ReadableStreamBYOBReader")}var jt=function(){function e(e,t){void 0===e&&(e={}),void 0===t&&(t={}),Mt(this);var r=t.size,n=t.highWaterMark,o=e.type;if("bytes"===String(o)){if(void 0!==r)throw new RangeError("The strategy for a byte stream cannot have a size function");void 0===n&&(n=0),Rt(this,e,n=h(n))}else{if(void 0!==o)throw new RangeError("Invalid type is specified");var i=d(r);void 0===n&&(n=1),function(e,t,r,n){var o=Object.create(Ke.prototype),i=c(t,"pull",0,[o]),a=c(t,"cancel",1,[]);it(e,o,(function(){return l(t,"start",[o])}),i,a,r,n)}(this,e,n=h(n),i)}}return Object.defineProperty(e.prototype,"locked",{get:function(){if(!1===Nt(this))throw Gt("locked");return Ut(this)},enumerable:!0,configurable:!0}),e.prototype.cancel=function(e){return!1===Nt(this)?_(Gt("cancel")):!0===Ut(this)?_(new TypeError("Cannot cancel a stream that already has a reader")):qt(this,e)},e.prototype.getReader=function(e){var t=(void 0===e?{}:e).mode;if(!1===Nt(this))throw Gt("getReader");if(void 0===t)return U(this,!0);if("byob"===(t=String(t)))return function(e,t){void 0===t&&(t=!1);var r=new Lt(e);return r._forAuthorCode=t,r}(this,!0);throw new RangeError("Invalid mode is specified")},e.prototype.pipeThrough=function(e,t){var r=e.writable,n=e.readable,o=void 0===t?{}:t,i=o.preventClose,a=o.preventAbort,s=o.preventCancel,u=o.signal;if(!1===Nt(this))throw Gt("pipeThrough");if(!1===se(r))throw new TypeError("writable argument to pipeThrough must be a WritableStream");if(!1===Nt(n))throw new TypeError("readable argument to pipeThrough must be a ReadableStream");if(i=Boolean(i),a=Boolean(a),s=Boolean(s),void 0!==u&&!ze(u))throw new TypeError("ReadableStream.prototype.pipeThrough's signal option must be an AbortSignal");if(!0===Ut(this))throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked ReadableStream");if(!0===ue(r))throw new TypeError("ReadableStream.prototype.pipeThrough cannot be used on a locked WritableStream");return R(Ve(this,r,i,a,s,u)),n},e.prototype.pipeTo=function(e,t){var r=void 0===t?{}:t,n=r.preventClose,o=r.preventAbort,i=r.preventCancel,a=r.signal;return!1===Nt(this)?_(Gt("pipeTo")):!1===se(e)?_(new TypeError("ReadableStream.prototype.pipeTo's first argument must be a WritableStream")):(n=Boolean(n),o=Boolean(o),i=Boolean(i),void 0===a||ze(a)?!0===Ut(this)?_(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream")):!0===ue(e)?_(new TypeError("ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream")):Ve(this,e,n,o,i,a):_(new TypeError("ReadableStream.prototype.pipeTo's signal option must be an AbortSignal")))},e.prototype.tee=function(){if(!1===Nt(this))throw Gt("tee");var e=function(e,t){var r,n,o,i,s,u=U(e),c=!1,l=!1,f=!1,h=m((function(e){s=e}));function d(){return!0===c?b(void 0):(c=!0,R(x(V(u),(function(e){if(c=!1,!0===e.done)return!1===l&&et(o._readableStreamController),void(!1===f&&et(i._readableStreamController));var t=e.value,r=t,n=t;!1===l&&tt(o._readableStreamController,r),!1===f&&tt(i._readableStreamController,n)}))),b(void 0))}function p(){}return o=Dt(p,d,(function(t){if(l=!0,r=t,!0===f){var o=a([r,n]),i=qt(e,o);s(i)}return h})),i=Dt(p,d,(function(t){if(f=!0,n=t,!0===l){var o=a([r,n]),i=qt(e,o);s(i)}return h})),k(u._closedPromise,(function(e){rt(o._readableStreamController,e),rt(i._readableStreamController,e)})),[o,i]}(this);return a(e)},e.prototype.getIterator=function(e){var t=(void 0===e?{}:e).preventCancel,r=void 0!==t&&t;if(!1===Nt(this))throw Gt("getIterator");return function(e,t){void 0===t&&(t=!1);var r=U(e),n=Object.create(Q);return n._asyncIteratorReader=r,n._preventCancel=Boolean(t),n}(this,r)},e}();function Dt(e,t,r,n,o){void 0===n&&(n=1),void 0===o&&(o=function(){return 1});var i=Object.create(jt.prototype);return Mt(i),it(i,Object.create(Ke.prototype),e,t,r,n,o),i}function Mt(e){e._state="readable",e._reader=void 0,e._storedError=void 0,e._disturbed=!1}function Nt(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_readableStreamController")}function Ut(e){return void 0!==e._reader}function qt(e,t){return e._disturbed=!0,"closed"===e._state?b(void 0):"errored"===e._state?_(e._storedError):(Bt(e),x(e._readableStreamController[M](t),r))}function Bt(e){e._state="closed";var t=e._reader;void 0!==t&&(X(t)&&(t._readRequests.forEach((function(e){e._resolve(C(void 0,!0,t._forAuthorCode))})),t._readRequests=new E),D(t))}function Wt(e,t){e._state="errored",e._storedError=t;var r=e._reader;void 0!==r&&(X(r)?(r._readRequests.forEach((function(e){e._reject(t)})),r._readRequests=new E):(r._readIntoRequests.forEach((function(e){e._reject(t)})),r._readIntoRequests=new E),j(r,t))}function Gt(e){return new TypeError("ReadableStream.prototype."+e+" can only be used on a ReadableStream")}"symbol"==typeof t.asyncIterator&&Object.defineProperty(jt.prototype,t.asyncIterator,{value:jt.prototype.getIterator,enumerable:!1,writable:!0,configurable:!0});var zt=function(){function e(e){var t=e.highWaterMark;this.highWaterMark=t}return e.prototype.size=function(e){return e.byteLength},e}(),Ht=function(){function e(e){var t=e.highWaterMark;this.highWaterMark=t}return e.prototype.size=function(){return 1},e}(),Yt=function(){function e(e,t,r){void 0===e&&(e={}),void 0===t&&(t={}),void 0===r&&(r={});var n=t.size,o=t.highWaterMark,i=r.size,a=r.highWaterMark;if(void 0!==e.writableType)throw new RangeError("Invalid writable type specified");var s=d(n);if(void 0===o&&(o=1),o=h(o),void 0!==e.readableType)throw new RangeError("Invalid readable type specified");var u,p=d(i);void 0===a&&(a=0),a=h(a),function(e,t,r,n,o,i){function a(){return t}e._writable=function(e,t,r,n,o,i){void 0===o&&(o=1),void 0===i&&(i=function(){return 1});var a=Object.create(oe.prototype);return ae(a),xe(a,Object.create(ke.prototype),e,t,r,n,o,i),a}(a,(function(t){return function(e,t){var r=e._transformStreamController;return!0===e._backpressure?x(e._backpressureChangePromise,(function(){var n=e._writable;if("erroring"===n._state)throw n._storedError;return tr(r,t)})):tr(r,t)}(e,t)}),(function(){return function(e){var t=e._readable,r=e._transformStreamController,n=r._flushAlgorithm();return $t(r),x(n,(function(){if("errored"===t._state)throw t._storedError;var e=t._readableStreamController;!0===ot(e)&&et(e)}),(function(r){throw Vt(e,r),t._storedError}))}(e)}),(function(t){return function(e,t){return Vt(e,t),b(void 0)}(e,t)}),r,n),e._readable=Dt(a,(function(){return function(e){return Qt(e,!1),e._backpressureChangePromise}(e)}),(function(t){return Kt(e,t),b(void 0)}),o,i),e._backpressure=void 0,e._backpressureChangePromise=void 0,e._backpressureChangePromise_resolve=void 0,Qt(e,!0),e._transformStreamController=void 0}(this,m((function(e){u=e})),o,s,a,p),function(e,t){var r=Object.create(Jt.prototype),n=function(e){try{return er(r,e),b(void 0)}catch(e){return _(e)}},o=t.transform;if(void 0!==o){if("function"!=typeof o)throw new TypeError("transform is not a method");n=function(e){return f(o,t,[e,r])}}var i=c(t,"flush",0,[r]);!function(e,t,r,n){t._controlledTransformStream=e,e._transformStreamController=t,t._transformAlgorithm=r,t._flushAlgorithm=n}(e,r,n,i)}(this,e);var v=l(e,"start",[this._transformStreamController]);u(v)}return Object.defineProperty(e.prototype,"readable",{get:function(){if(!1===Xt(this))throw nr("readable");return this._readable},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"writable",{get:function(){if(!1===Xt(this))throw nr("writable");return this._writable},enumerable:!0,configurable:!0}),e}();function Xt(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_transformStreamController")}function Vt(e,t){rt(e._readable._readableStreamController,t),Kt(e,t)}function Kt(e,t){$t(e._transformStreamController),Pe(e._writable._writableStreamController,t),!0===e._backpressure&&Qt(e,!1)}function Qt(e,t){void 0!==e._backpressureChangePromise&&e._backpressureChangePromise_resolve(),e._backpressureChangePromise=m((function(t){e._backpressureChangePromise_resolve=t})),e._backpressure=t}var Jt=function(){function e(){throw new TypeError("TransformStreamDefaultController instances cannot be created directly")}return Object.defineProperty(e.prototype,"desiredSize",{get:function(){if(!1===Zt(this))throw rr("desiredSize");return nt(this._controlledTransformStream._readable._readableStreamController)},enumerable:!0,configurable:!0}),e.prototype.enqueue=function(e){if(!1===Zt(this))throw rr("enqueue");er(this,e)},e.prototype.error=function(e){if(!1===Zt(this))throw rr("error");var t;t=e,Vt(this._controlledTransformStream,t)},e.prototype.terminate=function(){if(!1===Zt(this))throw rr("terminate");!function(e){var t=e._controlledTransformStream,r=t._readable._readableStreamController;!0===ot(r)&&et(r);var n=new TypeError("TransformStream terminated");Kt(t,n)}(this)},e}();function Zt(e){return!!i(e)&&!!Object.prototype.hasOwnProperty.call(e,"_controlledTransformStream")}function $t(e){e._transformAlgorithm=void 0,e._flushAlgorithm=void 0}function er(e,t){var r=e._controlledTransformStream,n=r._readable._readableStreamController;if(!1===ot(n))throw new TypeError("Readable side is not in a state that permits enqueue");try{tt(n,t)}catch(e){throw Kt(r,e),r._readable._storedError}(function(e){return!0!==Ze(e)})(n)!==r._backpressure&&Qt(r,!0)}function tr(e,t){return x(e._transformAlgorithm(t),void 0,(function(t){throw Vt(e._controlledTransformStream,t),t}))}function rr(e){return new TypeError("TransformStreamDefaultController.prototype."+e+" can only be used on a TransformStreamDefaultController")}function nr(e){return new TypeError("TransformStream.prototype."+e+" can only be used on a TransformStream")}e.ByteLengthQueuingStrategy=zt,e.CountQueuingStrategy=Ht,e.ReadableStream=jt,e.TransformStream=Yt,e.WritableStream=oe,Object.defineProperty(e,"__esModule",{value:!0})}(t)},function(e,t,r){r(137),r(105),r(73),r(107);var n=r(38);e.exports=n.Map},function(e,t,r){"use strict";var n=r(138),o=r(142);e.exports=n("Map",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),o)},function(e,t,r){"use strict";var n=r(5),o=r(6),i=r(47),a=r(24),s=r(139),u=r(115),c=r(114),l=r(17),f=r(9),h=r(93),d=r(81),p=r(141);e.exports=function(e,t,r){var v=-1!==e.indexOf("Map"),g=-1!==e.indexOf("Weak"),y=v?"set":"add",m=o[e],b=m&&m.prototype,_=m,w={},A=function(e){var t=b[e];a(b,e,"add"==e?function(e){return t.call(this,0===e?0:e),this}:"delete"==e?function(e){return!(g&&!l(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return g&&!l(e)?void 0:t.call(this,0===e?0:e)}:"has"==e?function(e){return!(g&&!l(e))&&t.call(this,0===e?0:e)}:function(e,r){return t.call(this,0===e?0:e,r),this})};if(i(e,"function"!=typeof m||!(g||b.forEach&&!f((function(){(new m).entries().next()})))))_=r.getConstructor(t,e,v,y),s.REQUIRED=!0;else if(i(e,!0)){var S=new _,k=S[y](g?{}:-0,1)!=S,x=f((function(){S.has(1)})),R=h((function(e){new m(e)})),E=!g&&f((function(){for(var e=new m,t=5;t--;)e[y](t,t);return!e.has(-0)}));R||((_=t((function(t,r){c(t,_,e);var n=p(new m,t,_);return null!=r&&u(r,n[y],n,v),n}))).prototype=b,b.constructor=_),(x||E)&&(A("delete"),A("has"),v&&A("get")),(E||k)&&A(y),g&&b.clear&&delete b.clear}return w[e]=_,n({global:!0,forced:_!=m},w),d(_,e),g||r.setStrong(_,e,v),_}},function(e,t,r){var n=r(34),o=r(17),i=r(18),a=r(22).f,s=r(33),u=r(140),c=s("meta"),l=0,f=Object.isExtensible||function(){return!0},h=function(e){a(e,c,{value:{objectID:"O"+ ++l,weakData:{}}})},d=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,c)){if(!f(e))return"F";if(!t)return"E";h(e)}return e[c].objectID},getWeakData:function(e,t){if(!i(e,c)){if(!f(e))return!0;if(!t)return!1;h(e)}return e[c].weakData},onFreeze:function(e){return u&&d.REQUIRED&&f(e)&&!i(e,c)&&h(e),e}};n[c]=!0},function(e,t,r){var n=r(9);e.exports=!n((function(){return Object.isExtensible(Object.preventExtensions({}))}))},function(e,t,r){var n=r(17),o=r(83);e.exports=function(e,t,r){var i,a;return o&&"function"==typeof(i=t.constructor)&&i!==r&&n(a=i.prototype)&&a!==r.prototype&&o(e,a),e}},function(e,t,r){"use strict";var n=r(22).f,o=r(67),i=r(112),a=r(58),s=r(114),u=r(115),c=r(75),l=r(113),f=r(8),h=r(139).fastKey,d=r(28),p=d.set,v=d.getterFor;e.exports={getConstructor:function(e,t,r,c){var l=e((function(e,n){s(e,l,t),p(e,{type:t,index:o(null),first:void 0,last:void 0,size:0}),f||(e.size=0),null!=n&&u(n,e[c],e,r)})),d=v(t),g=function(e,t,r){var n,o,i=d(e),a=y(e,t);return a?a.value=r:(i.last=a={index:o=h(t,!0),key:t,value:r,previous:n=i.last,next:void 0,removed:!1},i.first||(i.first=a),n&&(n.next=a),f?i.size++:e.size++,"F"!==o&&(i.index[o]=a)),e},y=function(e,t){var r,n=d(e),o=h(t);if("F"!==o)return n.index[o];for(r=n.first;r;r=r.next)if(r.key==t)return r};return i(l.prototype,{clear:function(){for(var e=d(this),t=e.index,r=e.first;r;)r.removed=!0,r.previous&&(r.previous=r.previous.next=void 0),delete t[r.index],r=r.next;e.first=e.last=void 0,f?e.size=0:this.size=0},delete:function(e){var t=d(this),r=y(this,e);if(r){var n=r.next,o=r.previous;delete t.index[r.index],r.removed=!0,o&&(o.next=n),n&&(n.previous=o),t.first==r&&(t.first=n),t.last==r&&(t.last=o),f?t.size--:this.size--}return!!r},forEach:function(e){for(var t,r=d(this),n=a(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.next:r.first;)for(n(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!y(this,e)}}),i(l.prototype,r?{get:function(e){var t=y(this,e);return t&&t.value},set:function(e,t){return g(this,0===e?0:e,t)}}:{add:function(e){return g(this,e=0===e?0:e,e)}}),f&&n(l.prototype,"size",{get:function(){return d(this).size}}),l},setStrong:function(e,t,r){var n=t+" Iterator",o=v(t),i=v(n);c(e,t,(function(e,t){p(this,{type:n,target:e,state:o(e),kind:t,last:void 0})}),(function(){for(var e=i(this),t=e.kind,r=e.last;r&&r.removed;)r=r.previous;return e.target&&(e.last=r=r?r.next:e.state.first)?"keys"==t?{value:r.key,done:!1}:"values"==t?{value:r.value,done:!1}:{value:[r.key,r.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})}),r?"entries":"values",!r,!0),l(t)}}},function(e,t,r){r(144),r(105),r(73),r(107);var n=r(38);e.exports=n.Set},function(e,t,r){"use strict";var n=r(138),o=r(142);e.exports=n("Set",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),o)},function(e,t,r){r(105),r(146),r(107);var n=r(38);e.exports=n.WeakMap},function(e,t,r){"use strict";var n,o=r(6),i=r(112),a=r(139),s=r(138),u=r(147),c=r(17),l=r(28).enforce,f=r(29),h=!o.ActiveXObject&&"ActiveXObject"in o,d=Object.isExtensible,p=function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}},v=e.exports=s("WeakMap",p,u);if(f&&h){n=u.getConstructor(p,"WeakMap",!0),a.REQUIRED=!0;var g=v.prototype,y=g.delete,m=g.has,b=g.get,_=g.set;i(g,{delete:function(e){if(c(e)&&!d(e)){var t=l(this);return t.frozen||(t.frozen=new n),y.call(this,e)||t.frozen.delete(e)}return y.call(this,e)},has:function(e){if(c(e)&&!d(e)){var t=l(this);return t.frozen||(t.frozen=new n),m.call(this,e)||t.frozen.has(e)}return m.call(this,e)},get:function(e){if(c(e)&&!d(e)){var t=l(this);return t.frozen||(t.frozen=new n),m.call(this,e)?b.call(this,e):t.frozen.get(e)}return b.call(this,e)},set:function(e,t){if(c(e)&&!d(e)){var r=l(this);r.frozen||(r.frozen=new n),m.call(this,e)?_.call(this,e,t):r.frozen.set(e,t)}else _.call(this,e,t);return this}})}},function(e,t,r){"use strict";var n=r(112),o=r(139).getWeakData,i=r(23),a=r(17),s=r(114),u=r(115),c=r(148),l=r(18),f=r(28),h=f.set,d=f.getterFor,p=c.find,v=c.findIndex,g=0,y=function(e){return e.frozen||(e.frozen=new m)},m=function(){this.entries=[]},b=function(e,t){return p(e.entries,(function(e){return e[0]===t}))};m.prototype={get:function(e){var t=b(this,e);if(t)return t[1]},has:function(e){return!!b(this,e)},set:function(e,t){var r=b(this,e);r?r[1]=t:this.entries.push([e,t])},delete:function(e){var t=v(this.entries,(function(t){return t[0]===e}));return~t&&this.entries.splice(t,1),!!~t}},e.exports={getConstructor:function(e,t,r,c){var f=e((function(e,n){s(e,f,t),h(e,{type:t,id:g++,frozen:void 0}),null!=n&&u(n,e[c],e,r)})),p=d(t),v=function(e,t,r){var n=p(e),a=o(i(t),!0);return!0===a?y(n).set(t,r):a[n.id]=r,e};return n(f.prototype,{delete:function(e){var t=p(this);if(!a(e))return!1;var r=o(e);return!0===r?y(t).delete(e):r&&l(r,t.id)&&delete r[t.id]},has:function(e){var t=p(this);if(!a(e))return!1;var r=o(e);return!0===r?y(t).has(e):r&&l(r,t.id)}}),n(f.prototype,r?{get:function(e){var t=p(this);if(a(e)){var r=o(e);return!0===r?y(t).get(e):r?r[t.id]:void 0}},set:function(e,t){return v(this,e,t)}}:{add:function(e){return v(this,e,!0)}}),f}}},function(e,t,r){var n=r(58),o=r(13),i=r(79),a=r(42),s=r(149),u=[].push,c=function(e){var t=1==e,r=2==e,c=3==e,l=4==e,f=6==e,h=5==e||f;return function(d,p,v,g){for(var y,m,b=i(d),_=o(b),w=n(p,v,3),A=a(_.length),S=0,k=g||s,x=t?k(d,A):r?k(d,0):void 0;A>S;S++)if((h||S in _)&&(m=w(y=_[S],S,b),e))if(t)x[S]=m;else if(m)switch(e){case 3:return!0;case 5:return y;case 6:return S;case 2:u.call(x,y)}else if(l)return!1;return f?-1:c||l?l:x}};e.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6)}},function(e,t,r){var n=r(17),o=r(150),i=r(53)("species");e.exports=function(e,t){var r;return o(e)&&("function"!=typeof(r=e.constructor)||r!==Array&&!o(r.prototype)?n(r)&&null===(r=r[i])&&(r=void 0):r=void 0),new(void 0===r?Array:r)(0===t?0:t)}},function(e,t,r){var n=r(14);e.exports=Array.isArray||function(e){return"Array"==n(e)}},function(e,t,r){r(105),r(152),r(107);var n=r(38);e.exports=n.WeakSet},function(e,t,r){"use strict";r(138)("WeakSet",(function(e){return function(){return e(this,arguments.length?arguments[0]:void 0)}}),r(147))},function(e,t,r){r(154);var n=r(57);e.exports=n("String","codePointAt")},function(e,t,r){"use strict";var n=r(5),o=r(74).codeAt;n({target:"String",proto:!0},{codePointAt:function(e){return o(this,e)}})},function(e,t,r){r(156);var n=r(38);e.exports=n.String.fromCodePoint},function(e,t,r){var n=r(5),o=r(44),i=String.fromCharCode,a=String.fromCodePoint;n({target:"String",stat:!0,forced:!!a&&1!=a.length},{fromCodePoint:function(e){for(var t,r=[],n=arguments.length,a=0;n>a;){if(t=+arguments[a++],o(t,1114111)!==t)throw RangeError(t+" is not a valid code point");r.push(t<65536?i(t):i(55296+((t-=65536)>>10),t%1024+56320))}return r.join("")}})},function(e,t,r){r(158),r(105),r(160),r(164),r(165),r(166),r(167),r(168),r(169),r(170),r(171),r(172),r(173),r(174),r(175),r(176),r(177),r(178),r(179);var n=r(38);e.exports=n.Symbol},function(e,t,r){"use strict";var n=r(5),o=r(9),i=r(150),a=r(17),s=r(79),u=r(42),c=r(89),l=r(149),f=r(159),h=r(53),d=r(125),p=h("isConcatSpreadable"),v=d>=51||!o((function(){var e=[];return e[p]=!1,e.concat()[0]!==e})),g=f("concat"),y=function(e){if(!a(e))return!1;var t=e[p];return void 0!==t?!!t:i(e)};n({target:"Array",proto:!0,forced:!v||!g},{concat:function(e){var t,r,n,o,i,a=s(this),f=l(a,0),h=0;for(t=-1,n=arguments.length;t<n;t++)if(i=-1===t?a:arguments[t],y(i)){if(h+(o=u(i.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(r=0;r<o;r++,h++)r in i&&c(f,h,i[r])}else{if(h>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(f,h++,i)}return f.length=h,f}})},function(e,t,r){var n=r(9),o=r(53),i=r(125),a=o("species");e.exports=function(e){return i>=51||!n((function(){var t=[];return(t.constructor={})[a]=function(){return{foo:1}},1!==t[e](Boolean).foo}))}},function(e,t,r){"use strict";var n=r(5),o=r(6),i=r(37),a=r(32),s=r(8),u=r(54),c=r(55),l=r(9),f=r(18),h=r(150),d=r(17),p=r(23),v=r(79),g=r(12),y=r(16),m=r(11),b=r(67),_=r(69),w=r(39),A=r(161),S=r(46),k=r(7),x=r(22),R=r(10),E=r(21),C=r(24),P=r(31),T=r(30),O=r(34),L=r(33),I=r(53),F=r(162),j=r(163),D=r(81),M=r(28),N=r(148).forEach,U=T("hidden"),q=I("toPrimitive"),B=M.set,W=M.getterFor("Symbol"),G=Object.prototype,z=o.Symbol,H=i("JSON","stringify"),Y=k.f,X=x.f,V=A.f,K=R.f,Q=P("symbols"),J=P("op-symbols"),Z=P("string-to-symbol-registry"),$=P("symbol-to-string-registry"),ee=P("wks"),te=o.QObject,re=!te||!te.prototype||!te.prototype.findChild,ne=s&&l((function(){return 7!=b(X({},"a",{get:function(){return X(this,"a",{value:7}).a}})).a}))?function(e,t,r){var n=Y(G,t);n&&delete G[t],X(e,t,r),n&&e!==G&&X(G,t,n)}:X,oe=function(e,t){var r=Q[e]=b(z.prototype);return B(r,{type:"Symbol",tag:e,description:t}),s||(r.description=t),r},ie=c?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof z},ae=function(e,t,r){e===G&&ae(J,t,r),p(e);var n=y(t,!0);return p(r),f(Q,n)?(r.enumerable?(f(e,U)&&e[U][n]&&(e[U][n]=!1),r=b(r,{enumerable:m(0,!1)})):(f(e,U)||X(e,U,m(1,{})),e[U][n]=!0),ne(e,n,r)):X(e,n,r)},se=function(e,t){p(e);var r=g(t),n=_(r).concat(fe(r));return N(n,(function(t){s&&!ue.call(r,t)||ae(e,t,r[t])})),e},ue=function(e){var t=y(e,!0),r=K.call(this,t);return!(this===G&&f(Q,t)&&!f(J,t))&&(!(r||!f(this,t)||!f(Q,t)||f(this,U)&&this[U][t])||r)},ce=function(e,t){var r=g(e),n=y(t,!0);if(r!==G||!f(Q,n)||f(J,n)){var o=Y(r,n);return!o||!f(Q,n)||f(r,U)&&r[U][n]||(o.enumerable=!0),o}},le=function(e){var t=V(g(e)),r=[];return N(t,(function(e){f(Q,e)||f(O,e)||r.push(e)})),r},fe=function(e){var t=e===G,r=V(t?J:g(e)),n=[];return N(r,(function(e){!f(Q,e)||t&&!f(G,e)||n.push(Q[e])})),n};u||(C((z=function(){if(this instanceof z)throw TypeError("Symbol is not a constructor");var e=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,t=L(e),r=function(e){this===G&&r.call(J,e),f(this,U)&&f(this[U],t)&&(this[U][t]=!1),ne(this,t,m(1,e))};return s&&re&&ne(G,t,{configurable:!0,set:r}),oe(t,e)}).prototype,"toString",(function(){return W(this).tag})),C(z,"withoutSetter",(function(e){return oe(L(e),e)})),R.f=ue,x.f=ae,k.f=ce,w.f=A.f=le,S.f=fe,F.f=function(e){return oe(I(e),e)},s&&(X(z.prototype,"description",{configurable:!0,get:function(){return W(this).description}}),a||C(G,"propertyIsEnumerable",ue,{unsafe:!0}))),n({global:!0,wrap:!0,forced:!u,sham:!u},{Symbol:z}),N(_(ee),(function(e){j(e)})),n({target:"Symbol",stat:!0,forced:!u},{for:function(e){var t=String(e);if(f(Z,t))return Z[t];var r=z(t);return Z[t]=r,$[r]=t,r},keyFor:function(e){if(!ie(e))throw TypeError(e+" is not a symbol");if(f($,e))return $[e]},useSetter:function(){re=!0},useSimple:function(){re=!1}}),n({target:"Object",stat:!0,forced:!u,sham:!s},{create:function(e,t){return void 0===t?b(e):se(b(e),t)},defineProperty:ae,defineProperties:se,getOwnPropertyDescriptor:ce}),n({target:"Object",stat:!0,forced:!u},{getOwnPropertyNames:le,getOwnPropertySymbols:fe}),n({target:"Object",stat:!0,forced:l((function(){S.f(1)}))},{getOwnPropertySymbols:function(e){return S.f(v(e))}}),H&&n({target:"JSON",stat:!0,forced:!u||l((function(){var e=z();return"[null]"!=H([e])||"{}"!=H({a:e})||"{}"!=H(Object(e))}))},{stringify:function(e,t,r){for(var n,o=[e],i=1;arguments.length>i;)o.push(arguments[i++]);if(n=t,(d(t)||void 0!==e)&&!ie(e))return h(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!ie(t))return t}),o[1]=t,H.apply(null,o)}}),z.prototype[q]||E(z.prototype,q,z.prototype.valueOf),D(z,"Symbol"),O[U]=!0},function(e,t,r){var n=r(12),o=r(39).f,i={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return a&&"[object Window]"==i.call(e)?function(e){try{return o(e)}catch(e){return a.slice()}}(e):o(n(e))}},function(e,t,r){var n=r(53);t.f=n},function(e,t,r){var n=r(38),o=r(18),i=r(162),a=r(22).f;e.exports=function(e){var t=n.Symbol||(n.Symbol={});o(t,e)||a(t,e,{value:i.f(e)})}},function(e,t,r){r(163)("asyncIterator")},function(e,t,r){"use strict";var n=r(5),o=r(8),i=r(6),a=r(18),s=r(17),u=r(22).f,c=r(35),l=i.Symbol;if(o&&"function"==typeof l&&(!("description"in l.prototype)||void 0!==l().description)){var f={},h=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof h?new l(e):void 0===e?l():l(e);return""===e&&(f[t]=!0),t};c(h,l);var d=h.prototype=l.prototype;d.constructor=h;var p=d.toString,v="Symbol(test)"==String(l("test")),g=/^Symbol\((.*)\)[^)]+$/;u(d,"description",{configurable:!0,get:function(){var e=s(this)?this.valueOf():this,t=p.call(e);if(a(f,e))return"";var r=v?t.slice(7,-1):t.replace(g,"$1");return""===r?void 0:r}}),n({global:!0,forced:!0},{Symbol:h})}},function(e,t,r){r(163)("hasInstance")},function(e,t,r){r(163)("isConcatSpreadable")},function(e,t,r){r(163)("iterator")},function(e,t,r){r(163)("match")},function(e,t,r){r(163)("matchAll")},function(e,t,r){r(163)("replace")},function(e,t,r){r(163)("search")},function(e,t,r){r(163)("species")},function(e,t,r){r(163)("split")},function(e,t,r){r(163)("toPrimitive")},function(e,t,r){r(163)("toStringTag")},function(e,t,r){r(163)("unscopables")},function(e,t,r){r(81)(Math,"Math",!0)},function(e,t,r){var n=r(6);r(81)(n.JSON,"JSON",!0)},function(e,t,r){r(181);var n=r(57);e.exports=n("String","padStart")},function(e,t,r){"use strict";var n=r(5),o=r(182).start;n({target:"String",proto:!0,forced:r(184)},{padStart:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){var n=r(42),o=r(183),i=r(15),a=Math.ceil,s=function(e){return function(t,r,s){var u,c,l=String(i(t)),f=l.length,h=void 0===s?" ":String(s),d=n(r);return d<=f||""==h?l:(u=d-f,(c=o.call(h,a(u/h.length))).length>u&&(c=c.slice(0,u)),e?l+c:c+l)}};e.exports={start:s(!1),end:s(!0)}},function(e,t,r){"use strict";var n=r(43),o=r(15);e.exports="".repeat||function(e){var t=String(o(this)),r="",i=n(e);if(i<0||i==1/0)throw RangeError("Wrong number of repetitions");for(;i>0;(i>>>=1)&&(t+=t))1&i&&(r+=t);return r}},function(e,t,r){var n=r(119);e.exports=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(n)},function(e,t,r){r(186);var n=r(57);e.exports=n("String","padEnd")},function(e,t,r){"use strict";var n=r(5),o=r(182).end;n({target:"String",proto:!0,forced:r(184)},{padEnd:function(e){return o(this,e,arguments.length>1?arguments[1]:void 0)}})},function(e,t,r){r(188);var n=r(38);e.exports=n.Object.values},function(e,t,r){var n=r(5),o=r(189).values;n({target:"Object",stat:!0},{values:function(e){return o(e)}})},function(e,t,r){var n=r(8),o=r(69),i=r(12),a=r(10).f,s=function(e){return function(t){for(var r,s=i(t),u=o(s),c=u.length,l=0,f=[];c>l;)r=u[l++],n&&!a.call(s,r)||f.push(e?[r,s[r]]:s[r]);return f}};e.exports={entries:s(!0),values:s(!1)}},function(module,exports,__w_pdfjs_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getDocument=getDocument,exports.setPDFNetworkStreamFactory=setPDFNetworkStreamFactory,exports.build=exports.version=exports.PDFPageProxy=exports.PDFDocumentProxy=exports.PDFWorker=exports.PDFDataRangeTransport=exports.LoopbackPort=void 0;var _regenerator=_interopRequireDefault(__w_pdfjs_require__(191)),_util=__w_pdfjs_require__(1),_display_utils=__w_pdfjs_require__(194),_font_loader=__w_pdfjs_require__(195),_api_compatibility=__w_pdfjs_require__(196),_canvas=__w_pdfjs_require__(197),_worker_options=__w_pdfjs_require__(199),_is_node=__w_pdfjs_require__(48),_message_handler=__w_pdfjs_require__(200),_metadata=__w_pdfjs_require__(201),_transport_stream=__w_pdfjs_require__(203),_webgl=__w_pdfjs_require__(204);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],n=!0,o=!1,i=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return r}}function _arrayWithHoles(e){if(Array.isArray(e))return e}function asyncGeneratorStep(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){asyncGeneratorStep(i,n,o,a,s,"next",e)}function s(e){asyncGeneratorStep(i,n,o,a,s,"throw",e)}a(void 0)}))}}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var DEFAULT_RANGE_CHUNK_SIZE=65536,RENDERING_CANCELLED_TIMEOUT=100,createPDFNetworkStream;function setPDFNetworkStreamFactory(e){createPDFNetworkStream=e}function getDocument(e){var t,r=new PDFDocumentLoadingTask;if("string"==typeof e)t={url:e};else if((0,_util.isArrayBuffer)(e))t={data:e};else if(e instanceof PDFDataRangeTransport)t={range:e};else{if("object"!==_typeof(e))throw new Error("Invalid parameter in getDocument, need either Uint8Array, string or a parameter object");if(!e.url&&!e.data&&!e.range)throw new Error("Invalid parameter object: need either .data, .range or .url");t=e}var n=Object.create(null),o=null,i=null;for(var a in t)if("url"!==a||"undefined"==typeof window)if("range"!==a)if("worker"!==a)if("data"!==a||t[a]instanceof Uint8Array)n[a]=t[a];else{var s=t[a];if("string"==typeof s)n[a]=(0,_util.stringToBytes)(s);else if("object"!==_typeof(s)||null===s||isNaN(s.length)){if(!(0,_util.isArrayBuffer)(s))throw new Error("Invalid PDF binary data: either typed array, string or array-like object is expected in the data property.");n[a]=new Uint8Array(s)}else n[a]=new Uint8Array(s)}else i=t[a];else o=t[a];else n[a]=new URL(t[a],window.location).href;n.rangeChunkSize=n.rangeChunkSize||DEFAULT_RANGE_CHUNK_SIZE,n.CMapReaderFactory=n.CMapReaderFactory||_display_utils.DOMCMapReaderFactory,n.ignoreErrors=!0!==n.stopAtErrors,n.pdfBug=!0===n.pdfBug;var u=Object.values(_util.NativeImageDecoding);if(void 0!==n.nativeImageDecoderSupport&&u.includes(n.nativeImageDecoderSupport)||(n.nativeImageDecoderSupport=_api_compatibility.apiCompatibilityParams.nativeImageDecoderSupport||_util.NativeImageDecoding.DECODE),Number.isInteger(n.maxImageSize)||(n.maxImageSize=-1),"boolean"!=typeof n.isEvalSupported&&(n.isEvalSupported=!0),"boolean"!=typeof n.disableFontFace&&(n.disableFontFace=_api_compatibility.apiCompatibilityParams.disableFontFace||!1),"boolean"!=typeof n.disableRange&&(n.disableRange=!1),"boolean"!=typeof n.disableStream&&(n.disableStream=!1),"boolean"!=typeof n.disableAutoFetch&&(n.disableAutoFetch=!1),"boolean"!=typeof n.disableCreateObjectURL&&(n.disableCreateObjectURL=_api_compatibility.apiCompatibilityParams.disableCreateObjectURL||!1),(0,_util.setVerbosityLevel)(n.verbosity),!i){var c={verbosity:n.verbosity,port:_worker_options.GlobalWorkerOptions.workerPort};i=c.port?PDFWorker.fromPort(c):new PDFWorker(c),r._worker=i}var l=r.docId;return i.promise.then((function(){if(r.destroyed)throw new Error("Loading aborted");return _fetchDocument(i,n,o,l).then((function(e){if(r.destroyed)throw new Error("Loading aborted");var t;o?t=new _transport_stream.PDFDataTransportStream({length:n.length,initialData:n.initialData,progressiveDone:n.progressiveDone,disableRange:n.disableRange,disableStream:n.disableStream},o):n.data||(t=createPDFNetworkStream({url:n.url,length:n.length,httpHeaders:n.httpHeaders,withCredentials:n.withCredentials,rangeChunkSize:n.rangeChunkSize,disableRange:n.disableRange,disableStream:n.disableStream}));var a=new _message_handler.MessageHandler(l,e,i.port);a.postMessageTransfers=i.postMessageTransfers;var s=new WorkerTransport(a,r,t,n);r._transport=s,a.send("Ready",null)}))})).catch(r._capability.reject),r}function _fetchDocument(e,t,r,n){return e.destroyed?Promise.reject(new Error("Worker was destroyed")):(r&&(t.length=r.length,t.initialData=r.initialData,t.progressiveDone=r.progressiveDone),e.messageHandler.sendWithPromise("GetDocRequest",{docId:n,apiVersion:"2.4.456",source:{data:t.data,url:t.url,password:t.password,disableAutoFetch:t.disableAutoFetch,rangeChunkSize:t.rangeChunkSize,length:t.length},maxImageSize:t.maxImageSize,disableFontFace:t.disableFontFace,disableCreateObjectURL:t.disableCreateObjectURL,postMessageTransfers:e.postMessageTransfers,docBaseUrl:t.docBaseUrl,nativeImageDecoderSupport:t.nativeImageDecoderSupport,ignoreErrors:t.ignoreErrors,isEvalSupported:t.isEvalSupported}).then((function(t){if(e.destroyed)throw new Error("Worker was destroyed");return t})))}var PDFDocumentLoadingTask=(nextDocumentId=0,function(){function e(){_classCallCheck(this,e),this._capability=(0,_util.createPromiseCapability)(),this._transport=null,this._worker=null,this.docId="d"+nextDocumentId++,this.destroyed=!1,this.onPassword=null,this.onProgress=null,this.onUnsupportedFeature=null}return _createClass(e,[{key:"destroy",value:function(){var e=this;return this.destroyed=!0,(this._transport?this._transport.destroy():Promise.resolve()).then((function(){e._transport=null,e._worker&&(e._worker.destroy(),e._worker=null)}))}},{key:"then",value:function(e,t){throw new Error("Removed API method: PDFDocumentLoadingTask.then, use the `promise` getter instead.")}},{key:"promise",get:function(){return this._capability.promise}}]),e}()),nextDocumentId,PDFDataRangeTransport=function(){function e(t,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];_classCallCheck(this,e),this.length=t,this.initialData=r,this.progressiveDone=n,this._rangeListeners=[],this._progressListeners=[],this._progressiveReadListeners=[],this._progressiveDoneListeners=[],this._readyCapability=(0,_util.createPromiseCapability)()}return _createClass(e,[{key:"addRangeListener",value:function(e){this._rangeListeners.push(e)}},{key:"addProgressListener",value:function(e){this._progressListeners.push(e)}},{key:"addProgressiveReadListener",value:function(e){this._progressiveReadListeners.push(e)}},{key:"addProgressiveDoneListener",value:function(e){this._progressiveDoneListeners.push(e)}},{key:"onDataRange",value:function(e,t){var r=!0,n=!1,o=void 0;try{for(var i,a=this._rangeListeners[Symbol.iterator]();!(r=(i=a.next()).done);r=!0)(0,i.value)(e,t)}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}}},{key:"onDataProgress",value:function(e,t){var r=this;this._readyCapability.promise.then((function(){var n=!0,o=!1,i=void 0;try{for(var a,s=r._progressListeners[Symbol.iterator]();!(n=(a=s.next()).done);n=!0)(0,a.value)(e,t)}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}}))}},{key:"onDataProgressiveRead",value:function(e){var t=this;this._readyCapability.promise.then((function(){var r=!0,n=!1,o=void 0;try{for(var i,a=t._progressiveReadListeners[Symbol.iterator]();!(r=(i=a.next()).done);r=!0)(0,i.value)(e)}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}}))}},{key:"onDataProgressiveDone",value:function(){var e=this;this._readyCapability.promise.then((function(){var t=!0,r=!1,n=void 0;try{for(var o,i=e._progressiveDoneListeners[Symbol.iterator]();!(t=(o=i.next()).done);t=!0)(0,o.value)()}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}}))}},{key:"transportReady",value:function(){this._readyCapability.resolve()}},{key:"requestDataRange",value:function(e,t){(0,_util.unreachable)("Abstract method PDFDataRangeTransport.requestDataRange")}},{key:"abort",value:function(){}}]),e}();exports.PDFDataRangeTransport=PDFDataRangeTransport;var PDFDocumentProxy=function(){function e(t,r){_classCallCheck(this,e),this._pdfInfo=t,this._transport=r}return _createClass(e,[{key:"getPage",value:function(e){return this._transport.getPage(e)}},{key:"getPageIndex",value:function(e){return this._transport.getPageIndex(e)}},{key:"getDestinations",value:function(){return this._transport.getDestinations()}},{key:"getDestination",value:function(e){return this._transport.getDestination(e)}},{key:"getPageLabels",value:function(){return this._transport.getPageLabels()}},{key:"getPageLayout",value:function(){return this._transport.getPageLayout()}},{key:"getPageMode",value:function(){return this._transport.getPageMode()}},{key:"getViewerPreferences",value:function(){return this._transport.getViewerPreferences()}},{key:"getOpenAction",value:function(){return this._transport.getOpenAction()}},{key:"getOpenActionDestination",value:function(){return(0,_display_utils.deprecated)("getOpenActionDestination, use getOpenAction instead."),this.getOpenAction().then((function(e){return e&&e.dest?e.dest:null}))}},{key:"getAttachments",value:function(){return this._transport.getAttachments()}},{key:"getJavaScript",value:function(){return this._transport.getJavaScript()}},{key:"getOutline",value:function(){return this._transport.getOutline()}},{key:"getPermissions",value:function(){return this._transport.getPermissions()}},{key:"getMetadata",value:function(){return this._transport.getMetadata()}},{key:"getData",value:function(){return this._transport.getData()}},{key:"getDownloadInfo",value:function(){return this._transport.downloadInfoCapability.promise}},{key:"getStats",value:function(){return this._transport.getStats()}},{key:"cleanup",value:function(){return this._transport.startCleanup()}},{key:"destroy",value:function(){return this.loadingTask.destroy()}},{key:"numPages",get:function(){return this._pdfInfo.numPages}},{key:"fingerprint",get:function(){return this._pdfInfo.fingerprint}},{key:"loadingParams",get:function(){return this._transport.loadingParams}},{key:"loadingTask",get:function(){return this._transport.loadingTask}}]),e}();exports.PDFDocumentProxy=PDFDocumentProxy;var PDFPageProxy=function(){function e(t,r,n){var o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];_classCallCheck(this,e),this._pageIndex=t,this._pageInfo=r,this._transport=n,this._stats=o?new _display_utils.StatTimer:null,this._pdfBug=o,this.commonObjs=n.commonObjs,this.objs=new PDFObjects,this.cleanupAfterRender=!1,this.pendingCleanup=!1,this.intentStates=Object.create(null),this.destroyed=!1}return _createClass(e,[{key:"getViewport",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.scale,r=e.rotation,n=void 0===r?this.rotate:r,o=e.offsetX,i=void 0===o?0:o,a=e.offsetY,s=void 0===a?0:a,u=e.dontFlip,c=void 0!==u&&u;if(arguments.length>1||"number"==typeof arguments[0])throw new Error("PDFPageProxy.getViewport is called with obsolete arguments.");return new _display_utils.PageViewport({viewBox:this.view,scale:t,rotation:n,offsetX:i,offsetY:s,dontFlip:c})}},{key:"getAnnotations",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.intent,r=void 0===t?null:t;return this.annotationsPromise&&this.annotationsIntent===r||(this.annotationsPromise=this._transport.getAnnotations(this._pageIndex,r),this.annotationsIntent=r),this.annotationsPromise}},{key:"render",value:function(e){var t=this,r=e.canvasContext,n=e.viewport,o=e.intent,i=void 0===o?"display":o,a=e.enableWebGL,s=void 0!==a&&a,u=e.renderInteractiveForms,c=void 0!==u&&u,l=e.transform,f=void 0===l?null:l,h=e.imageLayer,d=void 0===h?null:h,p=e.canvasFactory,v=void 0===p?null:p,g=e.background,y=void 0===g?null:g;this._stats&&this._stats.time("Overall");var m="print"===i?"print":"display";this.pendingCleanup=!1,this.intentStates[m]||(this.intentStates[m]=Object.create(null));var b=this.intentStates[m];b.streamReaderCancelTimeout&&(clearTimeout(b.streamReaderCancelTimeout),b.streamReaderCancelTimeout=null);var _=v||new _display_utils.DOMCanvasFactory,w=new _webgl.WebGLContext({enable:s});b.displayReadyCapability||(b.displayReadyCapability=(0,_util.createPromiseCapability)(),b.operatorList={fnArray:[],argsArray:[],lastChunk:!1},this._stats&&this._stats.time("Page Request"),this._pumpOperatorList({pageIndex:this._pageIndex,intent:m,renderInteractiveForms:!0===c}));var A=function(e){var r=b.renderTasks.indexOf(S);r>=0&&b.renderTasks.splice(r,1),(t.cleanupAfterRender||"print"===m)&&(t.pendingCleanup=!0),t._tryCleanup(),e?(S.capability.reject(e),t._abortOperatorList({intentState:b,reason:e})):S.capability.resolve(),t._stats&&(t._stats.timeEnd("Rendering"),t._stats.timeEnd("Overall"))},S=new InternalRenderTask({callback:A,params:{canvasContext:r,viewport:n,transform:f,imageLayer:d,background:y},objs:this.objs,commonObjs:this.commonObjs,operatorList:b.operatorList,pageIndex:this._pageIndex,canvasFactory:_,webGLContext:w,useRequestAnimationFrame:"print"!==m,pdfBug:this._pdfBug});b.renderTasks||(b.renderTasks=[]),b.renderTasks.push(S);var k=S.task;return b.displayReadyCapability.promise.then((function(e){t.pendingCleanup?A():(t._stats&&t._stats.time("Rendering"),S.initializeGraphics(e),S.operatorListChanged())})).catch(A),k}},{key:"getOperatorList",value:function(){this.intentStates.oplist||(this.intentStates.oplist=Object.create(null));var e,t=this.intentStates.oplist;return t.opListReadCapability||((e={}).operatorListChanged=function(){if(t.operatorList.lastChunk){t.opListReadCapability.resolve(t.operatorList);var r=t.renderTasks.indexOf(e);r>=0&&t.renderTasks.splice(r,1)}},t.opListReadCapability=(0,_util.createPromiseCapability)(),t.renderTasks=[],t.renderTasks.push(e),t.operatorList={fnArray:[],argsArray:[],lastChunk:!1},this._stats&&this._stats.time("Page Request"),this._pumpOperatorList({pageIndex:this._pageIndex,intent:"oplist"})),t.opListReadCapability.promise}},{key:"streamTextContent",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.normalizeWhitespace,r=void 0!==t&&t,n=e.disableCombineTextItems,o=void 0!==n&&n,i=100;return this._transport.messageHandler.sendWithStream("GetTextContent",{pageIndex:this._pageIndex,normalizeWhitespace:!0===r,combineTextItems:!0!==o},{highWaterMark:i,size:function(e){return e.items.length}})}},{key:"getTextContent",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=this.streamTextContent(e);return new Promise((function(e,r){var n=t.getReader(),o={items:[],styles:Object.create(null)};!function t(){n.read().then((function(r){var n,i=r.value;r.done?e(o):(Object.assign(o.styles,i.styles),(n=o.items).push.apply(n,_toConsumableArray(i.items)),t())}),r)}()}))}},{key:"_destroy",value:function(){var e=this;this.destroyed=!0,this._transport.pageCache[this._pageIndex]=null;var t=[];return Object.keys(this.intentStates).forEach((function(r){var n=e.intentStates[r];e._abortOperatorList({intentState:n,reason:new Error("Page was destroyed."),force:!0}),"oplist"!==r&&n.renderTasks.forEach((function(e){var r=e.capability.promise.catch((function(){}));t.push(r),e.cancel()}))})),this.objs.clear(),this.annotationsPromise=null,this.pendingCleanup=!1,Promise.all(t)}},{key:"cleanup",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return this.pendingCleanup=!0,this._tryCleanup(e)}},{key:"_tryCleanup",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]&&arguments[0];return!(!this.pendingCleanup||Object.keys(this.intentStates).some((function(t){var r=e.intentStates[t];return 0!==r.renderTasks.length||!r.operatorList.lastChunk}))||(Object.keys(this.intentStates).forEach((function(t){delete e.intentStates[t]})),this.objs.clear(),this.annotationsPromise=null,t&&this._stats&&(this._stats=new _display_utils.StatTimer),this.pendingCleanup=!1,0))}},{key:"_startRenderPage",value:function(e,t){var r=this.intentStates[t];r&&(this._stats&&this._stats.timeEnd("Page Request"),r.displayReadyCapability&&r.displayReadyCapability.resolve(e))}},{key:"_renderPageChunk",value:function(e,t){for(var r=0,n=e.length;r<n;r++)t.operatorList.fnArray.push(e.fnArray[r]),t.operatorList.argsArray.push(e.argsArray[r]);t.operatorList.lastChunk=e.lastChunk;for(var o=0;o<t.renderTasks.length;o++)t.renderTasks[o].operatorListChanged();e.lastChunk&&this._tryCleanup()}},{key:"_pumpOperatorList",value:function(e){var t=this;(0,_util.assert)(e.intent,'PDFPageProxy._pumpOperatorList: Expected "intent" argument.');var r=this._transport.messageHandler.sendWithStream("GetOperatorList",e).getReader(),n=this.intentStates[e.intent];n.streamReader=r,function e(){r.read().then((function(r){var o=r.value;r.done?n.streamReader=null:t._transport.destroyed||(t._renderPageChunk(o,n),e())}),(function(e){if(n.streamReader=null,!t._transport.destroyed){if(n.operatorList){n.operatorList.lastChunk=!0;for(var r=0;r<n.renderTasks.length;r++)n.renderTasks[r].operatorListChanged();t._tryCleanup()}if(n.displayReadyCapability)n.displayReadyCapability.reject(e);else{if(!n.opListReadCapability)throw e;n.opListReadCapability.reject(e)}}}))}()}},{key:"_abortOperatorList",value:function(e){var t=this,r=e.intentState,n=e.reason,o=e.force,i=void 0!==o&&o;if((0,_util.assert)(n instanceof Error||"object"===_typeof(n)&&null!==n,'PDFPageProxy._abortOperatorList: Expected "reason" argument.'),r.streamReader){if(!i){if(0!==r.renderTasks.length)return;if(n instanceof _display_utils.RenderingCancelledException)return void(r.streamReaderCancelTimeout=setTimeout((function(){t._abortOperatorList({intentState:r,reason:n,force:!0}),r.streamReaderCancelTimeout=null}),RENDERING_CANCELLED_TIMEOUT))}r.streamReader.cancel(new _util.AbortException(n&&n.message)),r.streamReader=null,this._transport.destroyed||(Object.keys(this.intentStates).some((function(e){return t.intentStates[e]===r&&(delete t.intentStates[e],!0)})),this.cleanup())}}},{key:"pageNumber",get:function(){return this._pageIndex+1}},{key:"rotate",get:function(){return this._pageInfo.rotate}},{key:"ref",get:function(){return this._pageInfo.ref}},{key:"userUnit",get:function(){return this._pageInfo.userUnit}},{key:"view",get:function(){return this._pageInfo.view}},{key:"stats",get:function(){return this._stats}}]),e}();exports.PDFPageProxy=PDFPageProxy;var LoopbackPort=function(){function e(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];_classCallCheck(this,e),this._listeners=[],this._defer=t,this._deferred=Promise.resolve(void 0)}return _createClass(e,[{key:"postMessage",value:function(e,t){var r=this;if(this._defer){var n=new WeakMap,o={data:function e(r){if("object"!==_typeof(r)||null===r)return r;if(n.has(r))return n.get(r);var o,i;if((o=r.buffer)&&(0,_util.isArrayBuffer)(o))return i=t&&t.includes(o)?new r.constructor(o,r.byteOffset,r.byteLength):new r.constructor(r),n.set(r,i),i;for(var a in i=Array.isArray(r)?[]:{},n.set(r,i),r){for(var s=void 0,u=r;!(s=Object.getOwnPropertyDescriptor(u,a));)u=Object.getPrototypeOf(u);if(void 0!==s.value)if("function"!=typeof s.value)i[a]=e(s.value);else if(r.hasOwnProperty&&r.hasOwnProperty(a))throw new Error("LoopbackPort.postMessage - cannot clone: ".concat(r[a]))}return i}(e)};this._deferred.then((function(){r._listeners.forEach((function(e){e.call(r,o)}))}))}else this._listeners.forEach((function(t){t.call(r,{data:e})}))}},{key:"addEventListener",value:function(e,t){this._listeners.push(t)}},{key:"removeEventListener",value:function(e,t){var r=this._listeners.indexOf(t);this._listeners.splice(r,1)}},{key:"terminate",value:function(){this._listeners.length=0}}]),e}();exports.LoopbackPort=LoopbackPort;var PDFWorker=function PDFWorkerClosure(){var pdfWorkerPorts=new WeakMap,isWorkerDisabled=!1,fallbackWorkerSrc,nextFakeWorkerId=0,fakeWorkerCapability;if(_is_node.isNodeJS)isWorkerDisabled=!0,fallbackWorkerSrc="./pdf.worker.js";else if("object"===("undefined"==typeof document?"undefined":_typeof(document))&&"currentScript"in document){var pdfjsFilePath=document.currentScript&&document.currentScript.src;pdfjsFilePath&&(fallbackWorkerSrc=pdfjsFilePath.replace(/(\.(?:min\.)?js)(\?.*)?$/i,".worker$1$2"))}function _getWorkerSrc(){if(_worker_options.GlobalWorkerOptions.workerSrc)return _worker_options.GlobalWorkerOptions.workerSrc;if(void 0!==fallbackWorkerSrc)return _is_node.isNodeJS||(0,_display_utils.deprecated)('No "GlobalWorkerOptions.workerSrc" specified.'),fallbackWorkerSrc;throw new Error('No "GlobalWorkerOptions.workerSrc" specified.')}function getMainThreadWorkerMessageHandler(){var e;try{e=globalThis.pdfjsWorker&&globalThis.pdfjsWorker.WorkerMessageHandler}catch(e){}return e||null}function setupFakeWorkerGlobal(){if(fakeWorkerCapability)return fakeWorkerCapability.promise;fakeWorkerCapability=(0,_util.createPromiseCapability)();var loader=function(){var _ref8=_asyncToGenerator(_regenerator.default.mark((function _callee(){var mainWorkerMessageHandler,worker;return _regenerator.default.wrap((function _callee$(_context){for(;;)switch(_context.prev=_context.next){case 0:if(mainWorkerMessageHandler=getMainThreadWorkerMessageHandler(),!mainWorkerMessageHandler){_context.next=3;break}return _context.abrupt("return",mainWorkerMessageHandler);case 3:if(!_is_node.isNodeJS){_context.next=6;break}return worker=eval("require")(_getWorkerSrc()),_context.abrupt("return",worker.WorkerMessageHandler);case 6:return _context.next=8,(0,_display_utils.loadScript)(_getWorkerSrc());case 8:return _context.abrupt("return",window.pdfjsWorker.WorkerMessageHandler);case 9:case"end":return _context.stop()}}),_callee)})));return function(){return _ref8.apply(this,arguments)}}();return loader().then(fakeWorkerCapability.resolve,fakeWorkerCapability.reject),fakeWorkerCapability.promise}function createCDNWrapper(e){var t="importScripts('"+e+"');";return URL.createObjectURL(new Blob([t]))}var PDFWorker=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=t.name,n=void 0===r?null:r,o=t.port,i=void 0===o?null:o,a=t.verbosity,s=void 0===a?(0,_util.getVerbosityLevel)():a;if(_classCallCheck(this,e),i&&pdfWorkerPorts.has(i))throw new Error("Cannot use more than one PDFWorker per port");if(this.name=n,this.destroyed=!1,this.postMessageTransfers=!0,this.verbosity=s,this._readyCapability=(0,_util.createPromiseCapability)(),this._port=null,this._webWorker=null,this._messageHandler=null,i)return pdfWorkerPorts.set(i,this),void this._initializeFromPort(i);this._initialize()}return _createClass(e,[{key:"_initializeFromPort",value:function(e){this._port=e,this._messageHandler=new _message_handler.MessageHandler("main","worker",e),this._messageHandler.on("ready",(function(){})),this._readyCapability.resolve()}},{key:"_initialize",value:function(){var e=this;if("undefined"!=typeof Worker&&!isWorkerDisabled&&!getMainThreadWorkerMessageHandler()){var t=_getWorkerSrc();try{(0,_util.isSameOrigin)(window.location.href,t)||(t=createCDNWrapper(new URL(t,window.location).href));var r=new Worker(t),n=new _message_handler.MessageHandler("main","worker",r),o=function(){r.removeEventListener("error",i),n.destroy(),r.terminate(),e.destroyed?e._readyCapability.reject(new Error("Worker was destroyed")):e._setupFakeWorker()},i=function(){e._webWorker||o()};r.addEventListener("error",i),n.on("test",(function(t){r.removeEventListener("error",i),e.destroyed?o():t?(e._messageHandler=n,e._port=r,e._webWorker=r,t.supportTransfers||(e.postMessageTransfers=!1),e._readyCapability.resolve(),n.send("configure",{verbosity:e.verbosity})):(e._setupFakeWorker(),n.destroy(),r.terminate())})),n.on("ready",(function(t){if(r.removeEventListener("error",i),e.destroyed)o();else try{a()}catch(t){e._setupFakeWorker()}}));var a=function(){var t=new Uint8Array([e.postMessageTransfers?255:0]);try{n.send("test",t,[t.buffer])}catch(e){(0,_util.warn)("Cannot use postMessage transfers."),t[0]=0,n.send("test",t)}};return void a()}catch(e){(0,_util.info)("The worker has been disabled.")}}this._setupFakeWorker()}},{key:"_setupFakeWorker",value:function(){var e=this;isWorkerDisabled||((0,_util.warn)("Setting up fake worker."),isWorkerDisabled=!0),setupFakeWorkerGlobal().then((function(t){if(e.destroyed)e._readyCapability.reject(new Error("Worker was destroyed"));else{var r=new LoopbackPort;e._port=r;var n="fake"+nextFakeWorkerId++,o=new _message_handler.MessageHandler(n+"_worker",n,r);t.setup(o,r);var i=new _message_handler.MessageHandler(n,n+"_worker",r);e._messageHandler=i,e._readyCapability.resolve(),i.send("configure",{verbosity:e.verbosity})}})).catch((function(t){e._readyCapability.reject(new Error('Setting up fake worker failed: "'.concat(t.message,'".')))}))}},{key:"destroy",value:function(){this.destroyed=!0,this._webWorker&&(this._webWorker.terminate(),this._webWorker=null),pdfWorkerPorts.delete(this._port),this._port=null,this._messageHandler&&(this._messageHandler.destroy(),this._messageHandler=null)}},{key:"promise",get:function(){return this._readyCapability.promise}},{key:"port",get:function(){return this._port}},{key:"messageHandler",get:function(){return this._messageHandler}}],[{key:"fromPort",value:function(t){if(!t||!t.port)throw new Error("PDFWorker.fromPort - invalid method signature.");return pdfWorkerPorts.has(t.port)?pdfWorkerPorts.get(t.port):new e(t)}},{key:"getWorkerSrc",value:function(){return _getWorkerSrc()}}]),e}();return PDFWorker}();exports.PDFWorker=PDFWorker;var WorkerTransport=function(){function e(t,r,n,o){_classCallCheck(this,e),this.messageHandler=t,this.loadingTask=r,this.commonObjs=new PDFObjects,this.fontLoader=new _font_loader.FontLoader({docId:r.docId,onUnsupportedFeature:this._onUnsupportedFeature.bind(this)}),this._params=o,this.CMapReaderFactory=new o.CMapReaderFactory({baseUrl:o.cMapUrl,isCompressed:o.cMapPacked}),this.destroyed=!1,this.destroyCapability=null,this._passwordCapability=null,this._networkStream=n,this._fullReader=null,this._lastProgress=null,this.pageCache=[],this.pagePromises=[],this.downloadInfoCapability=(0,_util.createPromiseCapability)(),this.setupMessageHandler()}return _createClass(e,[{key:"destroy",value:function(){var e=this;if(this.destroyCapability)return this.destroyCapability.promise;this.destroyed=!0,this.destroyCapability=(0,_util.createPromiseCapability)(),this._passwordCapability&&this._passwordCapability.reject(new Error("Worker was destroyed during onPassword callback"));var t=[];this.pageCache.forEach((function(e){e&&t.push(e._destroy())})),this.pageCache.length=0,this.pagePromises.length=0;var r=this.messageHandler.sendWithPromise("Terminate",null);return t.push(r),Promise.all(t).then((function(){e.fontLoader.clear(),e._networkStream&&e._networkStream.cancelAllRequests(new _util.AbortException("Worker was terminated.")),e.messageHandler&&(e.messageHandler.destroy(),e.messageHandler=null),e.destroyCapability.resolve()}),this.destroyCapability.reject),this.destroyCapability.promise}},{key:"setupMessageHandler",value:function(){var e=this,t=this.messageHandler,r=this.loadingTask;t.on("GetReader",(function(t,r){(0,_util.assert)(e._networkStream),e._fullReader=e._networkStream.getFullReader(),e._fullReader.onProgress=function(t){e._lastProgress={loaded:t.loaded,total:t.total}},r.onPull=function(){e._fullReader.read().then((function(e){var t=e.value;e.done?r.close():((0,_util.assert)((0,_util.isArrayBuffer)(t)),r.enqueue(new Uint8Array(t),1,[t]))})).catch((function(e){r.error(e)}))},r.onCancel=function(t){e._fullReader.cancel(t)}})),t.on("ReaderHeadersReady",(function(t){var n=(0,_util.createPromiseCapability)(),o=e._fullReader;return o.headersReady.then((function(){o.isStreamingSupported&&o.isRangeSupported||(e._lastProgress&&r.onProgress&&r.onProgress(e._lastProgress),o.onProgress=function(e){r.onProgress&&r.onProgress({loaded:e.loaded,total:e.total})}),n.resolve({isStreamingSupported:o.isStreamingSupported,isRangeSupported:o.isRangeSupported,contentLength:o.contentLength})}),n.reject),n.promise})),t.on("GetRangeReader",(function(t,r){(0,_util.assert)(e._networkStream);var n=e._networkStream.getRangeReader(t.begin,t.end);n?(r.onPull=function(){n.read().then((function(e){var t=e.value;e.done?r.close():((0,_util.assert)((0,_util.isArrayBuffer)(t)),r.enqueue(new Uint8Array(t),1,[t]))})).catch((function(e){r.error(e)}))},r.onCancel=function(e){n.cancel(e)}):r.close()})),t.on("GetDoc",(function(t){var n=t.pdfInfo;e._numPages=n.numPages,r._capability.resolve(new PDFDocumentProxy(n,e))})),t.on("DocException",(function(e){var t;switch(e.name){case"PasswordException":t=new _util.PasswordException(e.message,e.code);break;case"InvalidPDFException":t=new _util.InvalidPDFException(e.message);break;case"MissingPDFException":t=new _util.MissingPDFException(e.message);break;case"UnexpectedResponseException":t=new _util.UnexpectedResponseException(e.message,e.status);break;case"UnknownErrorException":t=new _util.UnknownErrorException(e.message,e.details)}r._capability.reject(t)})),t.on("PasswordRequest",(function(t){if(e._passwordCapability=(0,_util.createPromiseCapability)(),r.onPassword)try{r.onPassword((function(t){e._passwordCapability.resolve({password:t})}),t.code)}catch(t){e._passwordCapability.reject(t)}else e._passwordCapability.reject(new _util.PasswordException(t.message,t.code));return e._passwordCapability.promise})),t.on("DataLoaded",(function(t){r.onProgress&&r.onProgress({loaded:t.length,total:t.length}),e.downloadInfoCapability.resolve(t)})),t.on("StartRenderPage",(function(t){e.destroyed||e.pageCache[t.pageIndex]._startRenderPage(t.transparency,t.intent)})),t.on("commonobj",(function(r){if(!e.destroyed){var n=_slicedToArray(r,3),o=n[0],i=n[1],a=n[2];if(!e.commonObjs.has(o))switch(i){case"Font":var s=e._params;if("error"in a){var u=a.error;(0,_util.warn)("Error during font loading: ".concat(u)),e.commonObjs.resolve(o,u);break}var c=null;s.pdfBug&&globalThis.FontInspector&&globalThis.FontInspector.enabled&&(c={registerFont:function(e,t){globalThis.FontInspector.fontAdded(e,t)}});var l=new _font_loader.FontFaceObject(a,{isEvalSupported:s.isEvalSupported,disableFontFace:s.disableFontFace,ignoreErrors:s.ignoreErrors,onUnsupportedFeature:e._onUnsupportedFeature.bind(e),fontRegistry:c});e.fontLoader.bind(l).then((function(){e.commonObjs.resolve(o,l)}),(function(r){t.sendWithPromise("FontFallback",{id:o}).finally((function(){e.commonObjs.resolve(o,l)}))}));break;case"FontPath":case"FontType3Res":e.commonObjs.resolve(o,a);break;default:throw new Error("Got unknown common object type ".concat(i))}}})),t.on("obj",(function(t){if(!e.destroyed){var r=_slicedToArray(t,4),n=r[0],o=r[1],i=r[2],a=r[3],s=e.pageCache[o];if(!s.objs.has(n))switch(i){case"JpegStream":return new Promise((function(e,t){var r=new Image;r.onload=function(){e(r)},r.onerror=function(){t(new Error("Error during JPEG image loading")),(0,_display_utils.releaseImageResources)(r)},r.src=a})).then((function(e){s.objs.resolve(n,e)}));case"Image":s.objs.resolve(n,a),a&&"data"in a&&a.data.length>8e6&&(s.cleanupAfterRender=!0);break;default:throw new Error("Got unknown object type ".concat(i))}}})),t.on("DocProgress",(function(t){e.destroyed||r.onProgress&&r.onProgress({loaded:t.loaded,total:t.total})})),t.on("UnsupportedFeature",this._onUnsupportedFeature.bind(this)),t.on("JpegDecode",(function(t){if(e.destroyed)return Promise.reject(new Error("Worker was destroyed"));if("undefined"==typeof document)return Promise.reject(new Error('"document" is not defined.'));var r=_slicedToArray(t,2),n=r[0],o=r[1];return 3!==o&&1!==o?Promise.reject(new Error("Only 3 components or 1 component can be returned")):new Promise((function(e,t){var r=new Image;r.onload=function(){var t=r.width,n=r.height,i=t*n,a=4*i,s=new Uint8ClampedArray(i*o),u=document.createElement("canvas");u.width=t,u.height=n;var c=u.getContext("2d");c.drawImage(r,0,0);var l=c.getImageData(0,0,t,n).data;if(3===o)for(var f=0,h=0;f<a;f+=4,h+=3)s[h]=l[f],s[h+1]=l[f+1],s[h+2]=l[f+2];else if(1===o)for(var d=0,p=0;d<a;d+=4,p++)s[p]=l[d];e({data:s,width:t,height:n}),(0,_display_utils.releaseImageResources)(r),u.width=0,u.height=0,u=null,c=null},r.onerror=function(){t(new Error("JpegDecode failed to load image")),(0,_display_utils.releaseImageResources)(r)},r.src=n}))})),t.on("FetchBuiltInCMap",(function(t,r){if(e.destroyed)r.error(new Error("Worker was destroyed"));else{var n=!1;r.onPull=function(){n?r.close():(n=!0,e.CMapReaderFactory.fetch(t).then((function(e){r.enqueue(e,1,[e.cMapData.buffer])})).catch((function(e){r.error(e)})))}}}))}},{key:"_onUnsupportedFeature",value:function(e){var t=e.featureId;this.destroyed||this.loadingTask.onUnsupportedFeature&&this.loadingTask.onUnsupportedFeature(t)}},{key:"getData",value:function(){return this.messageHandler.sendWithPromise("GetData",null)}},{key:"getPage",value:function(e){var t=this;if(!Number.isInteger(e)||e<=0||e>this._numPages)return Promise.reject(new Error("Invalid page request"));var r=e-1;if(r in this.pagePromises)return this.pagePromises[r];var n=this.messageHandler.sendWithPromise("GetPage",{pageIndex:r}).then((function(e){if(t.destroyed)throw new Error("Transport destroyed");var n=new PDFPageProxy(r,e,t,t._params.pdfBug);return t.pageCache[r]=n,n}));return this.pagePromises[r]=n,n}},{key:"getPageIndex",value:function(e){return this.messageHandler.sendWithPromise("GetPageIndex",{ref:e}).catch((function(e){return Promise.reject(new Error(e))}))}},{key:"getAnnotations",value:function(e,t){return this.messageHandler.sendWithPromise("GetAnnotations",{pageIndex:e,intent:t})}},{key:"getDestinations",value:function(){return this.messageHandler.sendWithPromise("GetDestinations",null)}},{key:"getDestination",value:function(e){return"string"!=typeof e?Promise.reject(new Error("Invalid destination request.")):this.messageHandler.sendWithPromise("GetDestination",{id:e})}},{key:"getPageLabels",value:function(){return this.messageHandler.sendWithPromise("GetPageLabels",null)}},{key:"getPageLayout",value:function(){return this.messageHandler.sendWithPromise("GetPageLayout",null)}},{key:"getPageMode",value:function(){return this.messageHandler.sendWithPromise("GetPageMode",null)}},{key:"getViewerPreferences",value:function(){return this.messageHandler.sendWithPromise("GetViewerPreferences",null)}},{key:"getOpenAction",value:function(){return this.messageHandler.sendWithPromise("GetOpenAction",null)}},{key:"getAttachments",value:function(){return this.messageHandler.sendWithPromise("GetAttachments",null)}},{key:"getJavaScript",value:function(){return this.messageHandler.sendWithPromise("GetJavaScript",null)}},{key:"getOutline",value:function(){return this.messageHandler.sendWithPromise("GetOutline",null)}},{key:"getPermissions",value:function(){return this.messageHandler.sendWithPromise("GetPermissions",null)}},{key:"getMetadata",value:function(){var e=this;return this.messageHandler.sendWithPromise("GetMetadata",null).then((function(t){return{info:t[0],metadata:t[1]?new _metadata.Metadata(t[1]):null,contentDispositionFilename:e._fullReader?e._fullReader.filename:null}}))}},{key:"getStats",value:function(){return this.messageHandler.sendWithPromise("GetStats",null)}},{key:"startCleanup",value:function(){var e=this;return this.messageHandler.sendWithPromise("Cleanup",null).then((function(){for(var t=0,r=e.pageCache.length;t<r;t++){var n=e.pageCache[t];if(n&&!n.cleanup())throw new Error("startCleanup: Page ".concat(t+1," is currently rendering."))}e.commonObjs.clear(),e.fontLoader.clear()}))}},{key:"loadingParams",get:function(){var e=this._params;return(0,_util.shadow)(this,"loadingParams",{disableAutoFetch:e.disableAutoFetch,disableCreateObjectURL:e.disableCreateObjectURL,disableFontFace:e.disableFontFace,nativeImageDecoderSupport:e.nativeImageDecoderSupport})}}]),e}(),PDFObjects=function(){function e(){_classCallCheck(this,e),this._objs=Object.create(null)}return _createClass(e,[{key:"_ensureObj",value:function(e){return this._objs[e]?this._objs[e]:this._objs[e]={capability:(0,_util.createPromiseCapability)(),data:null,resolved:!1}}},{key:"get",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(t)return this._ensureObj(e).capability.promise.then(t),null;var r=this._objs[e];if(!r||!r.resolved)throw new Error("Requesting object that isn't resolved yet ".concat(e,"."));return r.data}},{key:"has",value:function(e){var t=this._objs[e];return!!t&&t.resolved}},{key:"resolve",value:function(e,t){var r=this._ensureObj(e);r.resolved=!0,r.data=t,r.capability.resolve(t)}},{key:"clear",value:function(){for(var e in this._objs){var t=this._objs[e].data;"undefined"!=typeof Image&&t instanceof Image&&(0,_display_utils.releaseImageResources)(t)}this._objs=Object.create(null)}}]),e}(),RenderTask=function(){function e(t){_classCallCheck(this,e),this._internalRenderTask=t,this.onContinue=null}return _createClass(e,[{key:"cancel",value:function(){this._internalRenderTask.cancel()}},{key:"then",value:function(e,t){throw new Error("Removed API method: RenderTask.then, use the `promise` getter instead.")}},{key:"promise",get:function(){return this._internalRenderTask.capability.promise}}]),e}(),InternalRenderTask=(canvasInRendering=new WeakSet,function(){function e(t){var r=t.callback,n=t.params,o=t.objs,i=t.commonObjs,a=t.operatorList,s=t.pageIndex,u=t.canvasFactory,c=t.webGLContext,l=t.useRequestAnimationFrame,f=void 0!==l&&l,h=t.pdfBug,d=void 0!==h&&h;_classCallCheck(this,e),this.callback=r,this.params=n,this.objs=o,this.commonObjs=i,this.operatorListIdx=null,this.operatorList=a,this._pageIndex=s,this.canvasFactory=u,this.webGLContext=c,this._pdfBug=d,this.running=!1,this.graphicsReadyCallback=null,this.graphicsReady=!1,this._useRequestAnimationFrame=!0===f&&"undefined"!=typeof window,this.cancelled=!1,this.capability=(0,_util.createPromiseCapability)(),this.task=new RenderTask(this),this._continueBound=this._continue.bind(this),this._scheduleNextBound=this._scheduleNext.bind(this),this._nextBound=this._next.bind(this),this._canvas=n.canvasContext.canvas}var t;return _createClass(e,[{key:"initializeGraphics",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(!this.cancelled){if(this._canvas){if(canvasInRendering.has(this._canvas))throw new Error("Cannot use the same canvas during multiple render() operations. Use different canvas or ensure previous operations were cancelled or completed.");canvasInRendering.add(this._canvas)}this._pdfBug&&globalThis.StepperManager&&globalThis.StepperManager.enabled&&(this.stepper=globalThis.StepperManager.create(this._pageIndex),this.stepper.init(this.operatorList),this.stepper.nextBreakPoint=this.stepper.getNextBreakPoint());var t=this.params,r=t.canvasContext,n=t.viewport,o=t.transform,i=t.imageLayer,a=t.background;this.gfx=new _canvas.CanvasGraphics(r,this.commonObjs,this.objs,this.canvasFactory,this.webGLContext,i),this.gfx.beginDrawing({transform:o,viewport:n,transparency:e,background:a}),this.operatorListIdx=0,this.graphicsReady=!0,this.graphicsReadyCallback&&this.graphicsReadyCallback()}}},{key:"cancel",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.running=!1,this.cancelled=!0,this.gfx&&this.gfx.endDrawing(),this._canvas&&canvasInRendering.delete(this._canvas),this.callback(e||new _display_utils.RenderingCancelledException("Rendering cancelled, page ".concat(this._pageIndex+1),"canvas"))}},{key:"operatorListChanged",value:function(){this.graphicsReady?(this.stepper&&this.stepper.updateOperatorList(this.operatorList),this.running||this._continue()):this.graphicsReadyCallback||(this.graphicsReadyCallback=this._continueBound)}},{key:"_continue",value:function(){this.running=!0,this.cancelled||(this.task.onContinue?this.task.onContinue(this._scheduleNextBound):this._scheduleNext())}},{key:"_scheduleNext",value:function(){var e=this;this._useRequestAnimationFrame?window.requestAnimationFrame((function(){e._nextBound().catch(e.cancel.bind(e))})):Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this))}},{key:"_next",value:(t=_asyncToGenerator(_regenerator.default.mark((function e(){return _regenerator.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.cancelled){e.next=2;break}return e.abrupt("return");case 2:this.operatorListIdx=this.gfx.executeOperatorList(this.operatorList,this.operatorListIdx,this._continueBound,this.stepper),this.operatorListIdx===this.operatorList.argsArray.length&&(this.running=!1,this.operatorList.lastChunk&&(this.gfx.endDrawing(),this._canvas&&canvasInRendering.delete(this._canvas),this.callback()));case 4:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})}]),e}()),canvasInRendering,version="2.4.456";exports.version=version;var build="228a591c";exports.build=build},function(e,t,r){"use strict";e.exports=r(192)},function(e,t,r){"use strict";(function(e){function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=function(e){var r=Object.prototype,n=r.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",a=o.asyncIterator||"@@asyncIterator",s=o.toStringTag||"@@toStringTag";function u(e,t,r,n){var o=t&&t.prototype instanceof f?t:f,i=Object.create(o.prototype),a=new S(n||[]);return i._invoke=function(e,t,r){var n="suspendedStart";return function(o,i){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw i;return{value:void 0,done:!0}}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var s=_(a,r);if(s){if(s===l)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var u=c(e,t,r);if("normal"===u.type){if(n=r.done?"completed":"suspendedYield",u.arg===l)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n="completed",r.method="throw",r.arg=u.arg)}}}(e,r,a),i}function c(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var l={};function f(){}function h(){}function d(){}var p={};p[i]=function(){return this};var v=Object.getPrototypeOf,g=v&&v(v(k([])));g&&g!==r&&n.call(g,i)&&(p=g);var y=d.prototype=f.prototype=Object.create(p);function m(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function b(e,r){var o;this._invoke=function(i,a){function s(){return new r((function(o,s){!function o(i,a,s,u){var l=c(e[i],e,a);if("throw"!==l.type){var f=l.arg,h=f.value;return h&&"object"===t(h)&&n.call(h,"__await")?r.resolve(h.__await).then((function(e){o("next",e,s,u)}),(function(e){o("throw",e,s,u)})):r.resolve(h).then((function(e){f.value=e,s(f)}),(function(e){return o("throw",e,s,u)}))}u(l.arg)}(i,a,o,s)}))}return o=o?o.then(s,s):s()}}function _(e,t){var r=e.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,_(e,t),"throw"===t.method))return l;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return l}var n=c(r,e.iterator,t.arg);if("throw"===n.type)return t.method="throw",t.arg=n.arg,t.delegate=null,l;var o=n.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,l):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,l)}function w(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function A(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function S(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(w,this),this.reset(!0)}function k(e){if(e){var t=e[i];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,o=function t(){for(;++r<e.length;)if(n.call(e,r))return t.value=e[r],t.done=!1,t;return t.value=void 0,t.done=!0,t};return o.next=o}}return{next:x}}function x(){return{value:void 0,done:!0}}return h.prototype=y.constructor=d,d.constructor=h,d[s]=h.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===h||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,d):(e.__proto__=d,s in e||(e[s]="GeneratorFunction")),e.prototype=Object.create(y),e},e.awrap=function(e){return{__await:e}},m(b.prototype),b.prototype[a]=function(){return this},e.AsyncIterator=b,e.async=function(t,r,n,o,i){void 0===i&&(i=Promise);var a=new b(u(t,r,n,o),i);return e.isGeneratorFunction(r)?a:a.next().then((function(e){return e.done?e.value:a.next()}))},m(y),y[s]="Generator",y[i]=function(){return this},y.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=k,S.prototype={constructor:S,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(A),!e)for(var t in this)"t"===t.charAt(0)&&n.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function r(r,n){return a.type="throw",a.arg=e,t.next=r,n&&(t.method="next",t.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return r("end");if(i.tryLoc<=this.prev){var s=n.call(i,"catchLoc"),u=n.call(i,"finallyLoc");if(s&&u){if(this.prev<i.catchLoc)return r(i.catchLoc,!0);if(this.prev<i.finallyLoc)return r(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return r(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return r(i.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,l):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),l},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),A(r),l}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;A(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:k(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),l}},e}("object"===t(e)?e.exports:{});try{regeneratorRuntime=r}catch(e){Function("r","regeneratorRuntime = r")(r)}}).call(this,r(193)(e))},function(e,t,r){"use strict";e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addLinkAttributes=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.url,n=t.target,o=t.rel,a=t.enabled,s=void 0===a||a;(0,i.assert)(r&&"string"==typeof r,'addLinkAttributes: A valid "url" parameter must provided.');var u=(0,i.removeNullCharacters)(r);s?e.href=e.title=u:(e.href="",e.title="Disabled: ".concat(u),e.onclick=function(){return!1});var c="";switch(n){case w.NONE:break;case w.SELF:c="_self";break;case w.BLANK:c="_blank";break;case w.PARENT:c="_parent";break;case w.TOP:c="_top"}e.target=c,e.rel="string"==typeof o?o:"noopener noreferrer nofollow"},t.getFilenameFromUrl=function(e){var t=e.indexOf("#"),r=e.indexOf("?"),n=Math.min(t>0?t:e.length,r>0?r:e.length);return e.substring(e.lastIndexOf("/",n)+1,n)},t.isFetchSupported=k,t.isValidFetchUrl=x,t.loadScript=function(e){return new Promise((function(t,r){var n=document.createElement("script");n.src=e,n.onload=t,n.onerror=function(){r(new Error("Cannot load script at: ".concat(n.src)))},(document.head||document.documentElement).appendChild(n)}))},t.deprecated=function(e){console.log("Deprecated API usage: "+e)},t.releaseImageResources=function(e){(0,i.assert)(e instanceof Image,"Invalid `img` parameter.");var t=e.src;"string"==typeof t&&t.startsWith("blob:")&&URL.revokeObjectURL&&URL.revokeObjectURL(t),e.removeAttribute("src")},t.PDFDateString=t.StatTimer=t.DOMSVGFactory=t.DOMCMapReaderFactory=t.DOMCanvasFactory=t.DEFAULT_LINK_REL=t.LinkTarget=t.RenderingCancelledException=t.PageViewport=void 0;var n,o=(n=r(191))&&n.__esModule?n:{default:n},i=r(1);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function f(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){l(i,n,o,a,s,"next",e)}function s(e){l(i,n,o,a,s,"throw",e)}a(void 0)}))}}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function d(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function p(e,t,r){return t&&d(e.prototype,t),r&&d(e,r),e}t.DEFAULT_LINK_REL="noopener noreferrer nofollow";var v="http://www.w3.org/2000/svg",g=function(){function e(){h(this,e)}return p(e,[{key:"create",value:function(e,t){if(e<=0||t<=0)throw new Error("Invalid canvas size");var r=document.createElement("canvas"),n=r.getContext("2d");return r.width=e,r.height=t,{canvas:r,context:n}}},{key:"reset",value:function(e,t,r){if(!e.canvas)throw new Error("Canvas is not specified");if(t<=0||r<=0)throw new Error("Invalid canvas size");e.canvas.width=t,e.canvas.height=r}},{key:"destroy",value:function(e){if(!e.canvas)throw new Error("Canvas is not specified");e.canvas.width=0,e.canvas.height=0,e.canvas=null,e.context=null}}]),e}();t.DOMCanvasFactory=g;var y=function(){function e(t){var r=t.baseUrl,n=void 0===r?null:r,o=t.isCompressed,i=void 0!==o&&o;h(this,e),this.baseUrl=n,this.isCompressed=i}return p(e,[{key:"fetch",value:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}(function(){var e=f(o.default.mark((function e(t){var r,n,a,s=this;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.name,this.baseUrl){e.next=3;break}throw new Error('The CMap "baseUrl" parameter must be specified, ensure that the "cMapUrl" and "cMapPacked" API parameters are provided.');case 3:if(r){e.next=5;break}throw new Error("CMap name must be specified.");case 5:if(n=this.baseUrl+r+(this.isCompressed?".bcmap":""),a=this.isCompressed?i.CMapCompressionType.BINARY:i.CMapCompressionType.NONE,!k()||!x(n,document.baseURI)){e.next=9;break}return e.abrupt("return",fetch(n).then(function(){var e=f(o.default.mark((function e(t){var r;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t.ok){e.next=2;break}throw new Error(t.statusText);case 2:if(!s.isCompressed){e.next=10;break}return e.t0=Uint8Array,e.next=6,t.arrayBuffer();case 6:e.t1=e.sent,r=new e.t0(e.t1),e.next=15;break;case 10:return e.t2=i.stringToBytes,e.next=13,t.text();case 13:e.t3=e.sent,r=(0,e.t2)(e.t3);case 15:return e.abrupt("return",{cMapData:r,compressionType:a});case 16:case"end":return e.stop()}}),e)})));return function(t){return e.apply(this,arguments)}}()).catch((function(e){throw new Error("Unable to load ".concat(s.isCompressed?"binary ":"")+"CMap at: ".concat(n))})));case 9:return e.abrupt("return",new Promise((function(e,t){var r=new XMLHttpRequest;r.open("GET",n,!0),s.isCompressed&&(r.responseType="arraybuffer"),r.onreadystatechange=function(){if(r.readyState===XMLHttpRequest.DONE){var n;if((200===r.status||0===r.status)&&(s.isCompressed&&r.response?n=new Uint8Array(r.response):!s.isCompressed&&r.responseText&&(n=(0,i.stringToBytes)(r.responseText)),n))return void e({cMapData:n,compressionType:a});t(new Error(r.statusText))}},r.send(null)})).catch((function(e){throw new Error("Unable to load ".concat(s.isCompressed?"binary ":"")+"CMap at: ".concat(n))})));case 10:case"end":return e.stop()}}),e,this)})));return function(t){return e.apply(this,arguments)}}())}]),e}();t.DOMCMapReaderFactory=y;var m=function(){function e(){h(this,e)}return p(e,[{key:"create",value:function(e,t){(0,i.assert)(e>0&&t>0,"Invalid SVG dimensions");var r=document.createElementNS(v,"svg:svg");return r.setAttribute("version","1.1"),r.setAttribute("width",e+"px"),r.setAttribute("height",t+"px"),r.setAttribute("preserveAspectRatio","none"),r.setAttribute("viewBox","0 0 "+e+" "+t),r}},{key:"createElement",value:function(e){return(0,i.assert)("string"==typeof e,"Invalid SVG element type"),document.createElementNS(v,e)}}]),e}();t.DOMSVGFactory=m;var b=function(){function e(t){var r=t.viewBox,n=t.scale,o=t.rotation,i=t.offsetX,a=void 0===i?0:i,s=t.offsetY,u=void 0===s?0:s,c=t.dontFlip,l=void 0!==c&&c;h(this,e),this.viewBox=r,this.scale=n,this.rotation=o,this.offsetX=a,this.offsetY=u;var f,d,p,v,g,y,m,b,_=(r[2]+r[0])/2,w=(r[3]+r[1])/2;switch(o=(o%=360)<0?o+360:o){case 180:f=-1,d=0,p=0,v=1;break;case 90:f=0,d=1,p=1,v=0;break;case 270:f=0,d=-1,p=-1,v=0;break;default:f=1,d=0,p=0,v=-1}l&&(p=-p,v=-v),0===f?(g=Math.abs(w-r[1])*n+a,y=Math.abs(_-r[0])*n+u,m=Math.abs(r[3]-r[1])*n,b=Math.abs(r[2]-r[0])*n):(g=Math.abs(_-r[0])*n+a,y=Math.abs(w-r[1])*n+u,m=Math.abs(r[2]-r[0])*n,b=Math.abs(r[3]-r[1])*n),this.transform=[f*n,d*n,p*n,v*n,g-f*n*_-p*n*w,y-d*n*_-v*n*w],this.width=m,this.height=b}return p(e,[{key:"clone",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=t.scale,n=void 0===r?this.scale:r,o=t.rotation,i=void 0===o?this.rotation:o,a=t.offsetX,s=void 0===a?this.offsetX:a,u=t.offsetY,c=void 0===u?this.offsetY:u,l=t.dontFlip,f=void 0!==l&&l;return new e({viewBox:this.viewBox.slice(),scale:n,rotation:i,offsetX:s,offsetY:c,dontFlip:f})}},{key:"convertToViewportPoint",value:function(e,t){return i.Util.applyTransform([e,t],this.transform)}},{key:"convertToViewportRectangle",value:function(e){var t=i.Util.applyTransform([e[0],e[1]],this.transform),r=i.Util.applyTransform([e[2],e[3]],this.transform);return[t[0],t[1],r[0],r[1]]}},{key:"convertToPdfPoint",value:function(e,t){return i.Util.applyInverseTransform([e,t],this.transform)}}]),e}();t.PageViewport=b;var _=function(e){function t(e,r){var n;return h(this,t),(n=s(this,u(t).call(this,e))).type=r,n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(t,e),t}(i.BaseException);t.RenderingCancelledException=_;var w={NONE:0,SELF:1,BLANK:2,PARENT:3,TOP:4};t.LinkTarget=w;var A,S=function(){function e(){h(this,e),this.started=Object.create(null),this.times=[]}return p(e,[{key:"time",value:function(e){e in this.started&&(0,i.warn)("Timer is already running for ".concat(e)),this.started[e]=Date.now()}},{key:"timeEnd",value:function(e){e in this.started||(0,i.warn)("Timer has not been started for ".concat(e)),this.times.push({name:e,start:this.started[e],end:Date.now()}),delete this.started[e]}},{key:"toString",value:function(){var e=[],t=0,r=!0,n=!1,o=void 0;try{for(var i,a=this.times[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){var s=i.value.name;s.length>t&&(t=s.length)}}catch(e){n=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(n)throw o}}var u=!0,c=!1,l=void 0;try{for(var f,h=this.times[Symbol.iterator]();!(u=(f=h.next()).done);u=!0){var d=f.value,p=d.end-d.start;e.push("".concat(d.name.padEnd(t)," ").concat(p,"ms\n"))}}catch(e){c=!0,l=e}finally{try{u||null==h.return||h.return()}finally{if(c)throw l}}return e.join("")}}]),e}();function k(){return"undefined"!=typeof fetch&&"undefined"!=typeof Response&&"body"in Response.prototype&&"undefined"!=typeof ReadableStream}function x(e,t){try{var r=(t?new URL(e,t):new URL(e)).protocol;return"http:"===r||"https:"===r}catch(e){return!1}}t.StatTimer=S;var R=function(){function e(){h(this,e)}return p(e,null,[{key:"toDateObject",value:function(e){if(!e||!(0,i.isString)(e))return null;A||(A=new RegExp("^D:(\\d{4})(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?(\\d{2})?([Z|+|-])?(\\d{2})?'?(\\d{2})?'?"));var t=A.exec(e);if(!t)return null;var r=parseInt(t[1],10),n=parseInt(t[2],10);n=n>=1&&n<=12?n-1:0;var o=parseInt(t[3],10);o=o>=1&&o<=31?o:1;var a=parseInt(t[4],10);a=a>=0&&a<=23?a:0;var s=parseInt(t[5],10);s=s>=0&&s<=59?s:0;var u=parseInt(t[6],10);u=u>=0&&u<=59?u:0;var c=t[7]||"Z",l=parseInt(t[8],10);l=l>=0&&l<=23?l:0;var f=parseInt(t[9],10)||0;return f=f>=0&&f<=59?f:0,"-"===c?(a+=l,s+=f):"+"===c&&(a-=l,s-=f),new Date(Date.UTC(r,n,o,a,s,u))}}]),e}();t.PDFDateString=R},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FontLoader=t.FontFaceObject=void 0;var n,o=(n=r(191))&&n.__esModule?n:{default:n},i=r(1);function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function l(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function f(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function h(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function d(e,t,r){return t&&h(e.prototype,t),r&&h(e,r),e}var p,v=function(){function e(t){var r=t.docId,n=t.onUnsupportedFeature;f(this,e),this.constructor===e&&(0,i.unreachable)("Cannot initialize BaseFontLoader."),this.docId=r,this._onUnsupportedFeature=n,this.nativeFontFaces=[],this.styleElement=null}var t,r;return d(e,[{key:"addNativeFontFace",value:function(e){this.nativeFontFaces.push(e),document.fonts.add(e)}},{key:"insertRule",value:function(e){var t=this.styleElement;t||((t=this.styleElement=document.createElement("style")).id="PDFJS_FONT_STYLE_TAG_".concat(this.docId),document.documentElement.getElementsByTagName("head")[0].appendChild(t));var r=t.sheet;r.insertRule(e,r.cssRules.length)}},{key:"clear",value:function(){this.nativeFontFaces.forEach((function(e){document.fonts.delete(e)})),this.nativeFontFaces.length=0,this.styleElement&&(this.styleElement.remove(),this.styleElement=null)}},{key:"bind",value:(t=o.default.mark((function e(t){var r,n,a=this;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!t.attached&&!t.missingFile){e.next=2;break}return e.abrupt("return");case 2:if(t.attached=!0,!this.isFontLoadingAPISupported){e.next=19;break}if(!(r=t.createNativeFontFace())){e.next=18;break}return this.addNativeFontFace(r),e.prev=7,e.next=10,r.loaded;case 10:e.next=18;break;case 12:throw e.prev=12,e.t0=e.catch(7),this._onUnsupportedFeature({featureId:i.UNSUPPORTED_FEATURES.font}),(0,i.warn)("Failed to load font '".concat(r.family,"': '").concat(e.t0,"'.")),t.disableFontFace=!0,e.t0;case 18:return e.abrupt("return");case 19:if(!(n=t.createFontFaceRule())){e.next=26;break}if(this.insertRule(n),!this.isSyncFontLoadingSupported){e.next=24;break}return e.abrupt("return");case 24:return e.next=26,new Promise((function(e){var r=a._queueLoadingCallback(e);a._prepareFontLoadEvent([n],[t],r)}));case 26:case"end":return e.stop()}}),e,this,[[7,12]])})),r=function(){var e=this,r=arguments;return new Promise((function(n,o){var i=t.apply(e,r);function a(e){l(i,n,o,a,s,"next",e)}function s(e){l(i,n,o,a,s,"throw",e)}a(void 0)}))},function(e){return r.apply(this,arguments)})},{key:"_queueLoadingCallback",value:function(e){(0,i.unreachable)("Abstract method `_queueLoadingCallback`.")}},{key:"_prepareFontLoadEvent",value:function(e,t,r){(0,i.unreachable)("Abstract method `_prepareFontLoadEvent`.")}},{key:"isFontLoadingAPISupported",get:function(){var e="undefined"!=typeof document&&!!document.fonts;return(0,i.shadow)(this,"isFontLoadingAPISupported",e)}},{key:"isSyncFontLoadingSupported",get:function(){(0,i.unreachable)("Abstract method `isSyncFontLoadingSupported`.")}},{key:"_loadTestFont",get:function(){(0,i.unreachable)("Abstract method `_loadTestFont`.")}}]),e}();t.FontLoader=p,t.FontLoader=p=function(e){function t(e){var r;return f(this,t),(r=s(this,u(t).call(this,e))).loadingContext={requests:[],nextRequestId:0},r.loadTestFontId=0,r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(t,e),d(t,[{key:"_queueLoadingCallback",value:function(e){var t=this.loadingContext,r={id:"pdfjs-font-loading-".concat(t.nextRequestId++),done:!1,complete:function(){for((0,i.assert)(!r.done,"completeRequest() cannot be called twice."),r.done=!0;t.requests.length>0&&t.requests[0].done;){var e=t.requests.shift();setTimeout(e.callback,0)}},callback:e};return t.requests.push(r),r}},{key:"_prepareFontLoadEvent",value:function(e,t,r){function n(e,t){return e.charCodeAt(t)<<24|e.charCodeAt(t+1)<<16|e.charCodeAt(t+2)<<8|255&e.charCodeAt(t+3)}function o(e,t,r,n){return e.substring(0,t)+n+e.substring(t+r)}var a,s,u=document.createElement("canvas");u.width=1,u.height=1;var c=u.getContext("2d"),l=0,f="lt".concat(Date.now()).concat(this.loadTestFontId++),h=this._loadTestFont,d=n(h=o(h,976,f.length,f),16);for(a=0,s=f.length-3;a<s;a+=4)d=d-1482184792+n(f,a)|0;a<f.length&&(d=d-1482184792+n(f+"XXX",a)|0),h=o(h,16,4,(0,i.string32)(d));var p="url(data:font/opentype;base64,".concat(btoa(h),");"),v='@font-face {font-family:"'.concat(f,'";src:').concat(p,"}");this.insertRule(v);var g=[];for(a=0,s=t.length;a<s;a++)g.push(t[a].loadedName);g.push(f);var y=document.createElement("div");for(y.style.visibility="hidden",y.style.width=y.style.height="10px",y.style.position="absolute",y.style.top=y.style.left="0px",a=0,s=g.length;a<s;++a){var m=document.createElement("span");m.textContent="Hi",m.style.fontFamily=g[a],y.appendChild(m)}document.body.appendChild(y),function e(t,r){if(++l>30)return(0,i.warn)("Load test font never loaded."),void r();c.font="30px "+t,c.fillText(".",0,20),c.getImageData(0,0,1,1).data[3]>0?r():setTimeout(e.bind(null,t,r))}(f,(function(){document.body.removeChild(y),r.complete()}))}},{key:"isSyncFontLoadingSupported",get:function(){var e=!1;if("undefined"==typeof navigator)e=!0;else{var t=/Mozilla\/5.0.*?rv:(\d+).*? Gecko/.exec(navigator.userAgent);t&&t[1]>=14&&(e=!0)}return(0,i.shadow)(this,"isSyncFontLoadingSupported",e)}},{key:"_loadTestFont",get:function(){return(0,i.shadow)(this,"_loadTestFont",atob("T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQAFQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAAALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgAAAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACMAooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4DIP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAAAAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUAAQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgABAAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABYAAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAAAC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAAAAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQACAQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTjFQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA=="))}}]),t}(v);var g=function(){function e(t,r){var n=r.isEvalSupported,o=void 0===n||n,i=r.disableFontFace,a=void 0!==i&&i,s=r.ignoreErrors,u=void 0!==s&&s,c=r.onUnsupportedFeature,l=void 0===c?null:c,h=r.fontRegistry,d=void 0===h?null:h;for(var p in f(this,e),this.compiledGlyphs=Object.create(null),t)this[p]=t[p];this.isEvalSupported=!1!==o,this.disableFontFace=!0===a,this.ignoreErrors=!0===u,this._onUnsupportedFeature=l,this.fontRegistry=d}return d(e,[{key:"createNativeFontFace",value:function(){if(!this.data||this.disableFontFace)return null;var e=new FontFace(this.loadedName,this.data,{});return this.fontRegistry&&this.fontRegistry.registerFont(this),e}},{key:"createFontFaceRule",value:function(){if(!this.data||this.disableFontFace)return null;var e=(0,i.bytesToString)(new Uint8Array(this.data)),t="url(data:".concat(this.mimetype,";base64,").concat(btoa(e),");"),r='@font-face {font-family:"'.concat(this.loadedName,'";src:').concat(t,"}");return this.fontRegistry&&this.fontRegistry.registerFont(this,t),r}},{key:"getPathGenerator",value:function(e,t){if(void 0!==this.compiledGlyphs[t])return this.compiledGlyphs[t];var r,n;try{r=e.get(this.loadedName+"_path_"+t)}catch(e){if(!this.ignoreErrors)throw e;return this._onUnsupportedFeature&&this._onUnsupportedFeature({featureId:i.UNSUPPORTED_FEATURES.font}),(0,i.warn)('getPathGenerator - ignoring character: "'.concat(e,'".')),this.compiledGlyphs[t]=function(e,t){}}if(this.isEvalSupported&&i.IsEvalSupportedCached.value){for(var o,a="",s=0,u=r.length;s<u;s++)o=void 0!==(n=r[s]).args?n.args.join(","):"",a+="c."+n.cmd+"("+o+");\n";return this.compiledGlyphs[t]=new Function("c","size",a)}return this.compiledGlyphs[t]=function(e,t){for(var o=0,i=r.length;o<i;o++)"scale"===(n=r[o]).cmd&&(n.args=[t,-t]),e[n.cmd].apply(e,n.args)}}}]),e}();t.FontFaceObject=g},function(e,t,r){"use strict";var n=Object.create(null),o=r(48).isNodeJS,i="undefined"!=typeof navigator&&navigator.userAgent||"",a=/Trident/.test(i),s=/CriOS/.test(i);(a||s)&&(n.disableCreateObjectURL=!0),o&&(n.disableFontFace=!0,n.nativeImageDecoderSupport="none"),t.apiCompatibilityParams=Object.freeze(n)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.CanvasGraphics=void 0;var n=r(1),o=r(198);function i(e){e.mozCurrentTransform||(e._originalSave=e.save,e._originalRestore=e.restore,e._originalRotate=e.rotate,e._originalScale=e.scale,e._originalTranslate=e.translate,e._originalTransform=e.transform,e._originalSetTransform=e.setTransform,e._transformMatrix=e._transformMatrix||[1,0,0,1,0,0],e._transformStack=[],Object.defineProperty(e,"mozCurrentTransform",{get:function(){return this._transformMatrix}}),Object.defineProperty(e,"mozCurrentTransformInverse",{get:function(){var e=this._transformMatrix,t=e[0],r=e[1],n=e[2],o=e[3],i=e[4],a=e[5],s=t*o-r*n,u=r*n-t*o;return[o/s,r/u,n/u,t/s,(o*i-n*a)/u,(r*i-t*a)/s]}}),e.save=function(){var e=this._transformMatrix;this._transformStack.push(e),this._transformMatrix=e.slice(0,6),this._originalSave()},e.restore=function(){var e=this._transformStack.pop();e&&(this._transformMatrix=e,this._originalRestore())},e.translate=function(e,t){var r=this._transformMatrix;r[4]=r[0]*e+r[2]*t+r[4],r[5]=r[1]*e+r[3]*t+r[5],this._originalTranslate(e,t)},e.scale=function(e,t){var r=this._transformMatrix;r[0]=r[0]*e,r[1]=r[1]*e,r[2]=r[2]*t,r[3]=r[3]*t,this._originalScale(e,t)},e.transform=function(t,r,n,o,i,a){var s=this._transformMatrix;this._transformMatrix=[s[0]*t+s[2]*r,s[1]*t+s[3]*r,s[0]*n+s[2]*o,s[1]*n+s[3]*o,s[0]*i+s[2]*a+s[4],s[1]*i+s[3]*a+s[5]],e._originalTransform(t,r,n,o,i,a)},e.setTransform=function(t,r,n,o,i,a){this._transformMatrix=[t,r,n,o,i,a],e._originalSetTransform(t,r,n,o,i,a)},e.rotate=function(e){var t=Math.cos(e),r=Math.sin(e),n=this._transformMatrix;this._transformMatrix=[n[0]*t+n[2]*r,n[1]*t+n[3]*r,n[0]*-r+n[2]*t,n[1]*-r+n[3]*t,n[4],n[5]],this._originalRotate(e)})}var a=function(){function e(e){this.canvasFactory=e,this.cache=Object.create(null)}return e.prototype={getCanvas:function(e,t,r,n){var o;return void 0!==this.cache[e]?(o=this.cache[e],this.canvasFactory.reset(o,t,r),o.context.setTransform(1,0,0,1,0,0)):(o=this.canvasFactory.create(t,r),this.cache[e]=o),n&&i(o.context),o},clear:function(){for(var e in this.cache){var t=this.cache[e];this.canvasFactory.destroy(t),delete this.cache[e]}}},e}(),s=function(){function e(){this.alphaIsShape=!1,this.fontSize=0,this.fontSizeScale=1,this.textMatrix=n.IDENTITY_MATRIX,this.textMatrixScale=1,this.fontMatrix=n.FONT_IDENTITY_MATRIX,this.leading=0,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRenderingMode=n.TextRenderingMode.FILL,this.textRise=0,this.fillColor="#000000",this.strokeColor="#000000",this.patternFill=!1,this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.activeSMask=null,this.resumeSMaskCtx=null}return e.prototype={clone:function(){return Object.create(this)},setCurrentPoint:function(e,t){this.x=e,this.y=t}},e}(),u=function(){function e(e,t,r,n,o,u){this.ctx=e,this.current=new s,this.stateStack=[],this.pendingClip=null,this.pendingEOFill=!1,this.res=null,this.xobjs=null,this.commonObjs=t,this.objs=r,this.canvasFactory=n,this.webGLContext=o,this.imageLayer=u,this.groupStack=[],this.processingType3=null,this.baseTransform=null,this.baseTransformStack=[],this.groupLevel=0,this.smaskStack=[],this.smaskCounter=0,this.tempSMask=null,this.cachedCanvases=new a(this.canvasFactory),e&&i(e),this._cachedGetSinglePixelWidth=null}function t(e,t){if("undefined"!=typeof ImageData&&t instanceof ImageData)e.putImageData(t,0,0);else{var r,o,i,a,s,u=t.height,c=t.width,l=u%16,f=(u-l)/16,h=0===l?f:f+1,d=e.createImageData(c,16),p=0,v=t.data,g=d.data;if(t.kind===n.ImageKind.GRAYSCALE_1BPP){var y=v.byteLength,m=new Uint32Array(g.buffer,0,g.byteLength>>2),b=m.length,_=c+7>>3,w=4294967295,A=n.IsLittleEndianCached.value?4278190080:255;for(o=0;o<h;o++){for(a=o<f?16:l,r=0,i=0;i<a;i++){for(var S=y-p,k=0,x=S>_?c:8*S-7,R=-8&x,E=0,C=0;k<R;k+=8)C=v[p++],m[r++]=128&C?w:A,m[r++]=64&C?w:A,m[r++]=32&C?w:A,m[r++]=16&C?w:A,m[r++]=8&C?w:A,m[r++]=4&C?w:A,m[r++]=2&C?w:A,m[r++]=1&C?w:A;for(;k<x;k++)0===E&&(C=v[p++],E=128),m[r++]=C&E?w:A,E>>=1}for(;r<b;)m[r++]=0;e.putImageData(d,0,16*o)}}else if(t.kind===n.ImageKind.RGBA_32BPP){for(i=0,s=16*c*4,o=0;o<f;o++)g.set(v.subarray(p,p+s)),p+=s,e.putImageData(d,0,i),i+=16;o<h&&(s=c*l*4,g.set(v.subarray(p,p+s)),e.putImageData(d,0,i))}else{if(t.kind!==n.ImageKind.RGB_24BPP)throw new Error("bad image kind: ".concat(t.kind));for(s=c*(a=16),o=0;o<h;o++){for(o>=f&&(s=c*(a=l)),r=0,i=s;i--;)g[r++]=v[p++],g[r++]=v[p++],g[r++]=v[p++],g[r++]=255;e.putImageData(d,0,16*o)}}}}function r(e,t){for(var r=t.height,n=t.width,o=r%16,i=(r-o)/16,a=0===o?i:i+1,s=e.createImageData(n,16),u=0,c=t.data,l=s.data,f=0;f<a;f++){for(var h=f<i?16:o,d=3,p=0;p<h;p++)for(var v=0,g=0;g<n;g++){if(!v){var y=c[u++];v=128}l[d]=y&v?0:255,d+=4,v>>=1}e.putImageData(s,0,16*f)}}function u(e,t){for(var r=["strokeStyle","fillStyle","fillRule","globalAlpha","lineWidth","lineCap","lineJoin","miterLimit","globalCompositeOperation","font"],n=0,o=r.length;n<o;n++){var i=r[n];void 0!==e[i]&&(t[i]=e[i])}void 0!==e.setLineDash&&(t.setLineDash(e.getLineDash()),t.lineDashOffset=e.lineDashOffset)}function c(e){e.strokeStyle="#000000",e.fillStyle="#000000",e.fillRule="nonzero",e.globalAlpha=1,e.lineWidth=1,e.lineCap="butt",e.lineJoin="miter",e.miterLimit=10,e.globalCompositeOperation="source-over",e.font="10px sans-serif",void 0!==e.setLineDash&&(e.setLineDash([]),e.lineDashOffset=0)}function l(e,t,r,n){for(var o=e.length,i=3;i<o;i+=4){var a=e[i];if(0===a)e[i-3]=t,e[i-2]=r,e[i-1]=n;else if(a<255){var s=255-a;e[i-3]=e[i-3]*a+t*s>>8,e[i-2]=e[i-2]*a+r*s>>8,e[i-1]=e[i-1]*a+n*s>>8}}}function f(e,t,r){for(var n=e.length,o=3;o<n;o+=4){var i=r?r[e[o]]:e[o];t[o]=t[o]*i*(1/255)|0}}function h(e,t,r){for(var n=e.length,o=3;o<n;o+=4){var i=77*e[o-3]+152*e[o-2]+28*e[o-1];t[o]=r?t[o]*r[i>>8]>>8:t[o]*i>>16}}function d(e,t,r,n){var o=t.canvas,i=t.context;e.setTransform(t.scaleX,0,0,t.scaleY,t.offsetX,t.offsetY);var a=t.backdrop||null;if(!t.transferMap&&n.isEnabled){var s=n.composeSMask({layer:r.canvas,mask:o,properties:{subtype:t.subtype,backdrop:a}});return e.setTransform(1,0,0,1,0,0),void e.drawImage(s,t.offsetX,t.offsetY)}!function(e,t,r,n,o,i,a){var s,u=!!i,c=u?i[0]:0,d=u?i[1]:0,p=u?i[2]:0;s="Luminosity"===o?h:f;for(var v=Math.min(n,Math.ceil(1048576/r)),g=0;g<n;g+=v){var y=Math.min(v,n-g),m=e.getImageData(0,g,r,y),b=t.getImageData(0,g,r,y);u&&l(m.data,c,d,p),s(m.data,b.data,a),e.putImageData(b,0,g)}}(i,r,o.width,o.height,t.subtype,a,t.transferMap),e.drawImage(o,0,0)}var p=["butt","round","square"],v=["miter","round","bevel"],g={},y={};for(var m in e.prototype={beginDrawing:function(e){var t=e.transform,r=e.viewport,n=e.transparency,o=void 0!==n&&n,i=e.background,a=void 0===i?null:i,s=this.ctx.canvas.width,u=this.ctx.canvas.height;if(this.ctx.save(),this.ctx.fillStyle=a||"rgb(255, 255, 255)",this.ctx.fillRect(0,0,s,u),this.ctx.restore(),o){var l=this.cachedCanvases.getCanvas("transparent",s,u,!0);this.compositeCtx=this.ctx,this.transparentCanvas=l.canvas,this.ctx=l.context,this.ctx.save(),this.ctx.transform.apply(this.ctx,this.compositeCtx.mozCurrentTransform)}this.ctx.save(),c(this.ctx),t&&this.ctx.transform.apply(this.ctx,t),this.ctx.transform.apply(this.ctx,r.transform),this.baseTransform=this.ctx.mozCurrentTransform.slice(),this.imageLayer&&this.imageLayer.beginLayout()},executeOperatorList:function(e,t,r,o){var i=e.argsArray,a=e.fnArray,s=t||0,u=i.length;if(u===s)return s;for(var c,l=u-s>10&&"function"==typeof r,f=l?Date.now()+15:0,h=0,d=this.commonObjs,p=this.objs;;){if(void 0!==o&&s===o.nextBreakPoint)return o.breakIt(s,r),s;if((c=a[s])!==n.OPS.dependency)this[c].apply(this,i[s]);else{var v=!0,g=!1,y=void 0;try{for(var m,b=i[s][Symbol.iterator]();!(v=(m=b.next()).done);v=!0){var _=m.value,w=_.startsWith("g_")?d:p;if(!w.has(_))return w.get(_,r),s}}catch(e){g=!0,y=e}finally{try{v||null==b.return||b.return()}finally{if(g)throw y}}}if(++s===u)return s;if(l&&++h>10){if(Date.now()>f)return r(),s;h=0}}},endDrawing:function(){null!==this.current.activeSMask&&this.endSMaskGroup(),this.ctx.restore(),this.transparentCanvas&&(this.ctx=this.compositeCtx,this.ctx.save(),this.ctx.setTransform(1,0,0,1,0,0),this.ctx.drawImage(this.transparentCanvas,0,0),this.ctx.restore(),this.transparentCanvas=null),this.cachedCanvases.clear(),this.webGLContext.clear(),this.imageLayer&&this.imageLayer.endLayout()},setLineWidth:function(e){this.current.lineWidth=e,this.ctx.lineWidth=e},setLineCap:function(e){this.ctx.lineCap=p[e]},setLineJoin:function(e){this.ctx.lineJoin=v[e]},setMiterLimit:function(e){this.ctx.miterLimit=e},setDash:function(e,t){var r=this.ctx;void 0!==r.setLineDash&&(r.setLineDash(e),r.lineDashOffset=t)},setRenderingIntent:function(e){},setFlatness:function(e){},setGState:function(e){for(var t=0,r=e.length;t<r;t++){var n=e[t],o=n[0],i=n[1];switch(o){case"LW":this.setLineWidth(i);break;case"LC":this.setLineCap(i);break;case"LJ":this.setLineJoin(i);break;case"ML":this.setMiterLimit(i);break;case"D":this.setDash(i[0],i[1]);break;case"RI":this.setRenderingIntent(i);break;case"FL":this.setFlatness(i);break;case"Font":this.setFont(i[0],i[1]);break;case"CA":this.current.strokeAlpha=n[1];break;case"ca":this.current.fillAlpha=n[1],this.ctx.globalAlpha=n[1];break;case"BM":this.ctx.globalCompositeOperation=i;break;case"SMask":this.current.activeSMask&&(this.stateStack.length>0&&this.stateStack[this.stateStack.length-1].activeSMask===this.current.activeSMask?this.suspendSMaskGroup():this.endSMaskGroup()),this.current.activeSMask=i?this.tempSMask:null,this.current.activeSMask&&this.beginSMaskGroup(),this.tempSMask=null}}},beginSMaskGroup:function(){var e=this.current.activeSMask,t=e.canvas.width,r=e.canvas.height,n="smaskGroupAt"+this.groupLevel,o=this.cachedCanvases.getCanvas(n,t,r,!0),i=this.ctx,a=i.mozCurrentTransform;this.ctx.save();var s=o.context;s.scale(1/e.scaleX,1/e.scaleY),s.translate(-e.offsetX,-e.offsetY),s.transform.apply(s,a),e.startTransformInverse=s.mozCurrentTransformInverse,u(i,s),this.ctx=s,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(i),this.groupLevel++},suspendSMaskGroup:function(){var e=this.ctx;this.groupLevel--,this.ctx=this.groupStack.pop(),d(this.ctx,this.current.activeSMask,e,this.webGLContext),this.ctx.restore(),this.ctx.save(),u(e,this.ctx),this.current.resumeSMaskCtx=e;var t=n.Util.transform(this.current.activeSMask.startTransformInverse,e.mozCurrentTransform);this.ctx.transform.apply(this.ctx,t),e.save(),e.setTransform(1,0,0,1,0,0),e.clearRect(0,0,e.canvas.width,e.canvas.height),e.restore()},resumeSMaskGroup:function(){var e=this.current.resumeSMaskCtx,t=this.ctx;this.ctx=e,this.groupStack.push(t),this.groupLevel++},endSMaskGroup:function(){var e=this.ctx;this.groupLevel--,this.ctx=this.groupStack.pop(),d(this.ctx,this.current.activeSMask,e,this.webGLContext),this.ctx.restore(),u(e,this.ctx);var t=n.Util.transform(this.current.activeSMask.startTransformInverse,e.mozCurrentTransform);this.ctx.transform.apply(this.ctx,t)},save:function(){this.ctx.save();var e=this.current;this.stateStack.push(e),this.current=e.clone(),this.current.resumeSMaskCtx=null},restore:function(){this.current.resumeSMaskCtx&&this.resumeSMaskGroup(),null===this.current.activeSMask||0!==this.stateStack.length&&this.stateStack[this.stateStack.length-1].activeSMask===this.current.activeSMask||this.endSMaskGroup(),0!==this.stateStack.length&&(this.current=this.stateStack.pop(),this.ctx.restore(),this.pendingClip=null,this._cachedGetSinglePixelWidth=null)},transform:function(e,t,r,n,o,i){this.ctx.transform(e,t,r,n,o,i),this._cachedGetSinglePixelWidth=null},constructPath:function(e,t){for(var r=this.ctx,o=this.current,i=o.x,a=o.y,s=0,u=0,c=e.length;s<c;s++)switch(0|e[s]){case n.OPS.rectangle:i=t[u++],a=t[u++];var l=t[u++],f=t[u++];0===l&&(l=this.getSinglePixelWidth()),0===f&&(f=this.getSinglePixelWidth());var h=i+l,d=a+f;this.ctx.moveTo(i,a),this.ctx.lineTo(h,a),this.ctx.lineTo(h,d),this.ctx.lineTo(i,d),this.ctx.lineTo(i,a),this.ctx.closePath();break;case n.OPS.moveTo:i=t[u++],a=t[u++],r.moveTo(i,a);break;case n.OPS.lineTo:i=t[u++],a=t[u++],r.lineTo(i,a);break;case n.OPS.curveTo:i=t[u+4],a=t[u+5],r.bezierCurveTo(t[u],t[u+1],t[u+2],t[u+3],i,a),u+=6;break;case n.OPS.curveTo2:r.bezierCurveTo(i,a,t[u],t[u+1],t[u+2],t[u+3]),i=t[u+2],a=t[u+3],u+=4;break;case n.OPS.curveTo3:i=t[u+2],a=t[u+3],r.bezierCurveTo(t[u],t[u+1],i,a,i,a),u+=4;break;case n.OPS.closePath:r.closePath()}o.setCurrentPoint(i,a)},closePath:function(){this.ctx.closePath()},stroke:function(e){e=void 0===e||e;var t=this.ctx,r=this.current.strokeColor;if(t.globalAlpha=this.current.strokeAlpha,r&&r.hasOwnProperty("type")&&"Pattern"===r.type){t.save();var o=t.mozCurrentTransform,i=n.Util.singularValueDecompose2dScale(o)[0];t.strokeStyle=r.getPattern(t,this),t.lineWidth=Math.max(.65*this.getSinglePixelWidth(),this.current.lineWidth*i),t.stroke(),t.restore()}else t.lineWidth=Math.max(.65*this.getSinglePixelWidth(),this.current.lineWidth),t.stroke();e&&this.consumePath(),t.globalAlpha=this.current.fillAlpha},closeStroke:function(){this.closePath(),this.stroke()},fill:function(e){e=void 0===e||e;var t=this.ctx,r=this.current.fillColor,n=!1;this.current.patternFill&&(t.save(),this.baseTransform&&t.setTransform.apply(t,this.baseTransform),t.fillStyle=r.getPattern(t,this),n=!0),this.pendingEOFill?(t.fill("evenodd"),this.pendingEOFill=!1):t.fill(),n&&t.restore(),e&&this.consumePath()},eoFill:function(){this.pendingEOFill=!0,this.fill()},fillStroke:function(){this.fill(!1),this.stroke(!1),this.consumePath()},eoFillStroke:function(){this.pendingEOFill=!0,this.fillStroke()},closeFillStroke:function(){this.closePath(),this.fillStroke()},closeEOFillStroke:function(){this.pendingEOFill=!0,this.closePath(),this.fillStroke()},endPath:function(){this.consumePath()},clip:function(){this.pendingClip=g},eoClip:function(){this.pendingClip=y},beginText:function(){this.current.textMatrix=n.IDENTITY_MATRIX,this.current.textMatrixScale=1,this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0},endText:function(){var e=this.pendingTextPaths,t=this.ctx;if(void 0!==e){t.save(),t.beginPath();for(var r=0;r<e.length;r++){var n=e[r];t.setTransform.apply(t,n.transform),t.translate(n.x,n.y),n.addToPath(t,n.fontSize)}t.restore(),t.clip(),t.beginPath(),delete this.pendingTextPaths}else t.beginPath()},setCharSpacing:function(e){this.current.charSpacing=e},setWordSpacing:function(e){this.current.wordSpacing=e},setHScale:function(e){this.current.textHScale=e/100},setLeading:function(e){this.current.leading=-e},setFont:function(e,t){var r=this.commonObjs.get(e),o=this.current;if(!r)throw new Error("Can't find font for ".concat(e));if(o.fontMatrix=r.fontMatrix?r.fontMatrix:n.FONT_IDENTITY_MATRIX,0!==o.fontMatrix[0]&&0!==o.fontMatrix[3]||(0,n.warn)("Invalid font matrix for font "+e),t<0?(t=-t,o.fontDirection=-1):o.fontDirection=1,this.current.font=r,this.current.fontSize=t,!r.isType3Font){var i=r.loadedName||"sans-serif",a="normal";r.black?a="900":r.bold&&(a="bold");var s=r.italic?"italic":"normal",u='"'.concat(i,'", ').concat(r.fallbackName),c=t;t<16?c=16:t>100&&(c=100),this.current.fontSizeScale=t/c,this.ctx.font="".concat(s," ").concat(a," ").concat(c,"px ").concat(u)}},setTextRenderingMode:function(e){this.current.textRenderingMode=e},setTextRise:function(e){this.current.textRise=e},moveText:function(e,t){this.current.x=this.current.lineX+=e,this.current.y=this.current.lineY+=t},setLeadingMoveText:function(e,t){this.setLeading(-t),this.moveText(e,t)},setTextMatrix:function(e,t,r,n,o,i){this.current.textMatrix=[e,t,r,n,o,i],this.current.textMatrixScale=Math.sqrt(e*e+t*t),this.current.x=this.current.lineX=0,this.current.y=this.current.lineY=0},nextLine:function(){this.moveText(0,this.current.leading)},paintChar:function(e,t,r,o){var i,a=this.ctx,s=this.current,u=s.font,c=s.textRenderingMode,l=s.fontSize/s.fontSizeScale,f=c&n.TextRenderingMode.FILL_STROKE_MASK,h=!!(c&n.TextRenderingMode.ADD_TO_PATH_FLAG),d=s.patternFill&&u.data;(u.disableFontFace||h||d)&&(i=u.getPathGenerator(this.commonObjs,e)),u.disableFontFace||d?(a.save(),a.translate(t,r),a.beginPath(),i(a,l),o&&a.setTransform.apply(a,o),f!==n.TextRenderingMode.FILL&&f!==n.TextRenderingMode.FILL_STROKE||a.fill(),f!==n.TextRenderingMode.STROKE&&f!==n.TextRenderingMode.FILL_STROKE||a.stroke(),a.restore()):(f!==n.TextRenderingMode.FILL&&f!==n.TextRenderingMode.FILL_STROKE||a.fillText(e,t,r),f!==n.TextRenderingMode.STROKE&&f!==n.TextRenderingMode.FILL_STROKE||a.strokeText(e,t,r)),h&&(this.pendingTextPaths||(this.pendingTextPaths=[])).push({transform:a.mozCurrentTransform,x:t,y:r,fontSize:l,addToPath:i})},get isFontSubpixelAAEnabled(){var e=this.cachedCanvases.getCanvas("isFontSubpixelAAEnabled",10,10).context;e.scale(1.5,1),e.fillText("I",0,10);for(var t=e.getImageData(0,0,10,10).data,r=!1,o=3;o<t.length;o+=4)if(t[o]>0&&t[o]<255){r=!0;break}return(0,n.shadow)(this,"isFontSubpixelAAEnabled",r)},showText:function(e){var t=this.current,r=t.font;if(r.isType3Font)return this.showType3Text(e);var o=t.fontSize;if(0!==o){var i,a=this.ctx,s=t.fontSizeScale,u=t.charSpacing,c=t.wordSpacing,l=t.fontDirection,f=t.textHScale*l,h=e.length,d=r.vertical,p=d?1:-1,v=r.defaultVMetrics,g=o*t.fontMatrix[0],y=t.textRenderingMode===n.TextRenderingMode.FILL&&!r.disableFontFace&&!t.patternFill;if(a.save(),t.patternFill){a.save();var m=t.fillColor.getPattern(a,this);i=a.mozCurrentTransform,a.restore(),a.fillStyle=m}a.transform.apply(a,t.textMatrix),a.translate(t.x,t.y+t.textRise),l>0?a.scale(f,-1):a.scale(f,1);var b=t.lineWidth,_=t.textMatrixScale;if(0===_||0===b){var w=t.textRenderingMode&n.TextRenderingMode.FILL_STROKE_MASK;w!==n.TextRenderingMode.STROKE&&w!==n.TextRenderingMode.FILL_STROKE||(this._cachedGetSinglePixelWidth=null,b=.65*this.getSinglePixelWidth())}else b/=_;1!==s&&(a.scale(s,s),b/=s),a.lineWidth=b;var A,S=0;for(A=0;A<h;++A){var k=e[A];if((0,n.isNum)(k))S+=p*k*o/1e3;else{var x,R,E,C,P,T,O,L=!1,I=(k.isSpace?c:0)+u,F=k.fontChar,j=k.accent,D=k.width;if(d?(P=k.vmetric||v,T=-(T=k.vmetric?P[1]:.5*D)*g,O=P[2]*g,D=P?-P[0]:D,x=T/s,R=(S+O)/s):(x=S/s,R=0),r.remeasure&&D>0){var M=1e3*a.measureText(F).width/o*s;if(D<M&&this.isFontSubpixelAAEnabled){var N=D/M;L=!0,a.save(),a.scale(N,1),x/=N}else D!==M&&(x+=(D-M)/2e3*o/s)}(k.isInFont||r.missingFile)&&(y&&!j?a.fillText(F,x,R):(this.paintChar(F,x,R,i),j&&(E=x+j.offset.x/s,C=R-j.offset.y/s,this.paintChar(j.fontChar,E,C,i)))),S+=d?D*g-I*l:D*g+I*l,L&&a.restore()}}d?t.y-=S:t.x+=S*f,a.restore()}},showType3Text:function(e){var t,r,o,i,a=this.ctx,s=this.current,u=s.font,c=s.fontSize,l=s.fontDirection,f=u.vertical?1:-1,h=s.charSpacing,d=s.wordSpacing,p=s.textHScale*l,v=s.fontMatrix||n.FONT_IDENTITY_MATRIX,g=e.length;if(s.textRenderingMode!==n.TextRenderingMode.INVISIBLE&&0!==c){for(this._cachedGetSinglePixelWidth=null,a.save(),a.transform.apply(a,s.textMatrix),a.translate(s.x,s.y),a.scale(p,l),t=0;t<g;++t)if(r=e[t],(0,n.isNum)(r))i=f*r*c/1e3,this.ctx.translate(i,0),s.x+=i*p;else{var y=(r.isSpace?d:0)+h,m=u.charProcOperatorList[r.operatorListId];m?(this.processingType3=r,this.save(),a.scale(c,c),a.transform.apply(a,v),this.executeOperatorList(m),this.restore(),o=n.Util.applyTransform([r.width,0],v)[0]*c+y,a.translate(o,0),s.x+=o*p):(0,n.warn)('Type3 character "'.concat(r.operatorListId,'" is not available.'))}a.restore(),this.processingType3=null}},setCharWidth:function(e,t){},setCharWidthAndBounds:function(e,t,r,n,o,i){this.ctx.rect(r,n,o-r,i-n),this.clip(),this.endPath()},getColorN_Pattern:function(t){var r,n=this;if("TilingPattern"===t[0]){var i=t[1],a=this.baseTransform||this.ctx.mozCurrentTransform.slice(),s={createCanvasGraphics:function(t){return new e(t,n.commonObjs,n.objs,n.canvasFactory,n.webGLContext)}};r=new o.TilingPattern(t,i,this.ctx,s,a)}else r=(0,o.getShadingPatternFromIR)(t);return r},setStrokeColorN:function(){this.current.strokeColor=this.getColorN_Pattern(arguments)},setFillColorN:function(){this.current.fillColor=this.getColorN_Pattern(arguments),this.current.patternFill=!0},setStrokeRGBColor:function(e,t,r){var o=n.Util.makeCssRgb(e,t,r);this.ctx.strokeStyle=o,this.current.strokeColor=o},setFillRGBColor:function(e,t,r){var o=n.Util.makeCssRgb(e,t,r);this.ctx.fillStyle=o,this.current.fillColor=o,this.current.patternFill=!1},shadingFill:function(e){var t=this.ctx;this.save();var r=(0,o.getShadingPatternFromIR)(e);t.fillStyle=r.getPattern(t,this,!0);var i=t.mozCurrentTransformInverse;if(i){var a=t.canvas,s=a.width,u=a.height,c=n.Util.applyTransform([0,0],i),l=n.Util.applyTransform([0,u],i),f=n.Util.applyTransform([s,0],i),h=n.Util.applyTransform([s,u],i),d=Math.min(c[0],l[0],f[0],h[0]),p=Math.min(c[1],l[1],f[1],h[1]),v=Math.max(c[0],l[0],f[0],h[0]),g=Math.max(c[1],l[1],f[1],h[1]);this.ctx.fillRect(d,p,v-d,g-p)}else this.ctx.fillRect(-1e10,-1e10,2e10,2e10);this.restore()},beginInlineImage:function(){(0,n.unreachable)("Should not call beginInlineImage")},beginImageData:function(){(0,n.unreachable)("Should not call beginImageData")},paintFormXObjectBegin:function(e,t){if(this.save(),this.baseTransformStack.push(this.baseTransform),Array.isArray(e)&&6===e.length&&this.transform.apply(this,e),this.baseTransform=this.ctx.mozCurrentTransform,t){var r=t[2]-t[0],n=t[3]-t[1];this.ctx.rect(t[0],t[1],r,n),this.clip(),this.endPath()}},paintFormXObjectEnd:function(){this.restore(),this.baseTransform=this.baseTransformStack.pop()},beginGroup:function(e){this.save();var t=this.ctx;e.isolated||(0,n.info)("TODO: Support non-isolated groups."),e.knockout&&(0,n.warn)("Knockout groups not supported.");var r=t.mozCurrentTransform;if(e.matrix&&t.transform.apply(t,e.matrix),!e.bbox)throw new Error("Bounding box is required.");var o=n.Util.getAxialAlignedBoundingBox(e.bbox,t.mozCurrentTransform),i=[0,0,t.canvas.width,t.canvas.height];o=n.Util.intersect(o,i)||[0,0,0,0];var a=Math.floor(o[0]),s=Math.floor(o[1]),c=Math.max(Math.ceil(o[2])-a,1),l=Math.max(Math.ceil(o[3])-s,1),f=1,h=1;c>4096&&(f=c/4096,c=4096),l>4096&&(h=l/4096,l=4096);var d="groupAt"+this.groupLevel;e.smask&&(d+="_smask_"+this.smaskCounter++%2);var p=this.cachedCanvases.getCanvas(d,c,l,!0),v=p.context;v.scale(1/f,1/h),v.translate(-a,-s),v.transform.apply(v,r),e.smask?this.smaskStack.push({canvas:p.canvas,context:v,offsetX:a,offsetY:s,scaleX:f,scaleY:h,subtype:e.smask.subtype,backdrop:e.smask.backdrop,transferMap:e.smask.transferMap||null,startTransformInverse:null}):(t.setTransform(1,0,0,1,0,0),t.translate(a,s),t.scale(f,h)),u(t,v),this.ctx=v,this.setGState([["BM","source-over"],["ca",1],["CA",1]]),this.groupStack.push(t),this.groupLevel++,this.current.activeSMask=null},endGroup:function(e){this.groupLevel--;var t=this.ctx;this.ctx=this.groupStack.pop(),void 0!==this.ctx.imageSmoothingEnabled?this.ctx.imageSmoothingEnabled=!1:this.ctx.mozImageSmoothingEnabled=!1,e.smask?this.tempSMask=this.smaskStack.pop():this.ctx.drawImage(t.canvas,0,0),this.restore()},beginAnnotations:function(){this.save(),this.baseTransform&&this.ctx.setTransform.apply(this.ctx,this.baseTransform)},endAnnotations:function(){this.restore()},beginAnnotation:function(e,t,r){if(this.save(),c(this.ctx),this.current=new s,Array.isArray(e)&&4===e.length){var n=e[2]-e[0],o=e[3]-e[1];this.ctx.rect(e[0],e[1],n,o),this.clip(),this.endPath()}this.transform.apply(this,t),this.transform.apply(this,r)},endAnnotation:function(){this.restore()},paintJpegXObject:function(e,t,r){var o=this.processingType3?this.commonObjs.get(e):this.objs.get(e);if(o){this.save();var i=this.ctx;if(i.scale(1/t,-1/r),i.drawImage(o,0,0,o.width,o.height,0,-r,t,r),this.imageLayer){var a=i.mozCurrentTransformInverse,s=this.getCanvasPosition(0,0);this.imageLayer.appendImage({objId:e,left:s[0],top:s[1],width:t/a[0],height:r/a[3]})}this.restore()}else(0,n.warn)("Dependent image isn't ready yet")},paintImageMaskXObject:function(e){var t=this.ctx,n=e.width,o=e.height,i=this.current.fillColor,a=this.current.patternFill,s=this.processingType3;if(s&&void 0===s.compiled&&(s.compiled=n<=1e3&&o<=1e3?function(e){var t,r,n,o,i=e.width,a=e.height,s=i+1,u=new Uint8Array(s*(a+1)),c=new Uint8Array([0,2,4,0,1,0,5,4,8,10,0,8,0,2,1,0]),l=i+7&-8,f=e.data,h=new Uint8Array(l*a),d=0;for(t=0,o=f.length;t<o;t++)for(var p=128,v=f[t];p>0;)h[d++]=v&p?0:255,p>>=1;var g=0;for(0!==h[d=0]&&(u[0]=1,++g),r=1;r<i;r++)h[d]!==h[d+1]&&(u[r]=h[d]?2:1,++g),d++;for(0!==h[d]&&(u[r]=2,++g),t=1;t<a;t++){n=t*s,h[(d=t*l)-l]!==h[d]&&(u[n]=h[d]?1:8,++g);var y=(h[d]?4:0)+(h[d-l]?8:0);for(r=1;r<i;r++)c[y=(y>>2)+(h[d+1]?4:0)+(h[d-l+1]?8:0)]&&(u[n+r]=c[y],++g),d++;if(h[d-l]!==h[d]&&(u[n+r]=h[d]?2:4,++g),g>1e3)return null}for(n=t*s,0!==h[d=l*(a-1)]&&(u[n]=8,++g),r=1;r<i;r++)h[d]!==h[d+1]&&(u[n+r]=h[d]?4:8,++g),d++;if(0!==h[d]&&(u[n+r]=4,++g),g>1e3)return null;var m=new Int32Array([0,s,-1,0,-s,0,0,0,1]),b=[];for(t=0;g&&t<=a;t++){for(var _=t*s,w=_+i;_<w&&!u[_];)_++;if(_!==w){var A,S=[_%s,t],k=u[_],x=_;do{var R=m[k];do{_+=R}while(!u[_]);5!==(A=u[_])&&10!==A?(k=A,u[_]=0):(k=A&51*k>>4,u[_]&=k>>2|k<<2),S.push(_%s),S.push(_/s|0),u[_]||--g}while(x!==_);b.push(S),--t}}return function(e){e.save(),e.scale(1/i,-1/a),e.translate(0,-a),e.beginPath();for(var t=0,r=b.length;t<r;t++){var n=b[t];e.moveTo(n[0],n[1]);for(var o=2,s=n.length;o<s;o+=2)e.lineTo(n[o],n[o+1])}e.fill(),e.beginPath(),e.restore()}}({data:e.data,width:n,height:o}):null),s&&s.compiled)s.compiled(t);else{var u=this.cachedCanvases.getCanvas("maskCanvas",n,o),c=u.context;c.save(),r(c,e),c.globalCompositeOperation="source-in",c.fillStyle=a?i.getPattern(c,this):i,c.fillRect(0,0,n,o),c.restore(),this.paintInlineImageXObject(u.canvas)}},paintImageMaskXObjectRepeat:function(e,t,n,o){var i=e.width,a=e.height,s=this.current.fillColor,u=this.current.patternFill,c=this.cachedCanvases.getCanvas("maskCanvas",i,a),l=c.context;l.save(),r(l,e),l.globalCompositeOperation="source-in",l.fillStyle=u?s.getPattern(l,this):s,l.fillRect(0,0,i,a),l.restore();for(var f=this.ctx,h=0,d=o.length;h<d;h+=2)f.save(),f.transform(t,0,0,n,o[h],o[h+1]),f.scale(1,-1),f.drawImage(c.canvas,0,0,i,a,0,-1,1,1),f.restore()},paintImageMaskXObjectGroup:function(e){for(var t=this.ctx,n=this.current.fillColor,o=this.current.patternFill,i=0,a=e.length;i<a;i++){var s=e[i],u=s.width,c=s.height,l=this.cachedCanvases.getCanvas("maskCanvas",u,c),f=l.context;f.save(),r(f,s),f.globalCompositeOperation="source-in",f.fillStyle=o?n.getPattern(f,this):n,f.fillRect(0,0,u,c),f.restore(),t.save(),t.transform.apply(t,s.transform),t.scale(1,-1),t.drawImage(l.canvas,0,0,u,c,0,-1,1,1),t.restore()}},paintImageXObject:function(e){var t=this.processingType3?this.commonObjs.get(e):this.objs.get(e);t?this.paintInlineImageXObject(t):(0,n.warn)("Dependent image isn't ready yet")},paintImageXObjectRepeat:function(e,t,r,o){var i=this.processingType3?this.commonObjs.get(e):this.objs.get(e);if(i){for(var a=i.width,s=i.height,u=[],c=0,l=o.length;c<l;c+=2)u.push({transform:[t,0,0,r,o[c],o[c+1]],x:0,y:0,w:a,h:s});this.paintInlineImageXObjectGroup(i,u)}else(0,n.warn)("Dependent image isn't ready yet")},paintInlineImageXObject:function(e){var r=e.width,n=e.height,o=this.ctx;this.save(),o.scale(1/r,-1/n);var i,a,s=o.mozCurrentTransformInverse,u=s[0],c=s[1],l=Math.max(Math.sqrt(u*u+c*c),1),f=s[2],h=s[3],d=Math.max(Math.sqrt(f*f+h*h),1);if("function"==typeof HTMLElement&&e instanceof HTMLElement||!e.data)i=e;else{var p=(a=this.cachedCanvases.getCanvas("inlineImage",r,n)).context;t(p,e),i=a.canvas}for(var v=r,g=n,y="prescale1";l>2&&v>1||d>2&&g>1;){var m=v,b=g;l>2&&v>1&&(l/=v/(m=Math.ceil(v/2))),d>2&&g>1&&(d/=g/(b=Math.ceil(g/2))),(p=(a=this.cachedCanvases.getCanvas(y,m,b)).context).clearRect(0,0,m,b),p.drawImage(i,0,0,v,g,0,0,m,b),i=a.canvas,v=m,g=b,y="prescale1"===y?"prescale2":"prescale1"}if(o.drawImage(i,0,0,v,g,0,-n,r,n),this.imageLayer){var _=this.getCanvasPosition(0,-n);this.imageLayer.appendImage({imgData:e,left:_[0],top:_[1],width:r/s[0],height:n/s[3]})}this.restore()},paintInlineImageXObjectGroup:function(e,r){var n=this.ctx,o=e.width,i=e.height,a=this.cachedCanvases.getCanvas("inlineImage",o,i);t(a.context,e);for(var s=0,u=r.length;s<u;s++){var c=r[s];if(n.save(),n.transform.apply(n,c.transform),n.scale(1,-1),n.drawImage(a.canvas,c.x,c.y,c.w,c.h,0,-1,1,1),this.imageLayer){var l=this.getCanvasPosition(c.x,c.y);this.imageLayer.appendImage({imgData:e,left:l[0],top:l[1],width:o,height:i})}n.restore()}},paintSolidColorImageMask:function(){this.ctx.fillRect(0,0,1,1)},paintXObject:function(){(0,n.warn)("Unsupported 'paintXObject' command.")},markPoint:function(e){},markPointProps:function(e,t){},beginMarkedContent:function(e){},beginMarkedContentProps:function(e,t){},endMarkedContent:function(){},beginCompat:function(){},endCompat:function(){},consumePath:function(){var e=this.ctx;this.pendingClip&&(this.pendingClip===y?e.clip("evenodd"):e.clip(),this.pendingClip=null),e.beginPath()},getSinglePixelWidth:function(e){if(null===this._cachedGetSinglePixelWidth){var t=this.ctx.mozCurrentTransformInverse;this._cachedGetSinglePixelWidth=Math.sqrt(Math.max(t[0]*t[0]+t[1]*t[1],t[2]*t[2]+t[3]*t[3]))}return this._cachedGetSinglePixelWidth},getCanvasPosition:function(e,t){var r=this.ctx.mozCurrentTransform;return[r[0]*e+r[2]*t+r[4],r[1]*e+r[3]*t+r[5]]}},n.OPS)e.prototype[n.OPS[m]]=e.prototype[m];return e}();t.CanvasGraphics=u},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getShadingPatternFromIR=function(e){var t=o[e[0]];if(!t)throw new Error("Unknown IR type: ".concat(e[0]));return t.fromIR(e)},t.TilingPattern=void 0;var n=r(1),o={};function i(e,t){if(t&&"undefined"!=typeof Path2D){var r=t[2]-t[0],n=t[3]-t[1],o=new Path2D;o.rect(t[0],t[1],r,n),e.clip(o)}}o.RadialAxial={fromIR:function(e){var t=e[1],r=e[2],n=e[3],o=e[4],a=e[5],s=e[6],u=e[7];return{type:"Pattern",getPattern:function(e){var c;i(e,r),"axial"===t?c=e.createLinearGradient(o[0],o[1],a[0],a[1]):"radial"===t&&(c=e.createRadialGradient(o[0],o[1],s,a[0],a[1],u));for(var l=0,f=n.length;l<f;++l){var h=n[l];c.addColorStop(h[0],h[1])}return c}}}};var a=function(){function e(e,t,r,n,o,i,a,s){var u,c=t.coords,l=t.colors,f=e.data,h=4*e.width;c[r+1]>c[n+1]&&(u=r,r=n,n=u,u=i,i=a,a=u),c[n+1]>c[o+1]&&(u=n,n=o,o=u,u=a,a=s,s=u),c[r+1]>c[n+1]&&(u=r,r=n,n=u,u=i,i=a,a=u);var d=(c[r]+t.offsetX)*t.scaleX,p=(c[r+1]+t.offsetY)*t.scaleY,v=(c[n]+t.offsetX)*t.scaleX,g=(c[n+1]+t.offsetY)*t.scaleY,y=(c[o]+t.offsetX)*t.scaleX,m=(c[o+1]+t.offsetY)*t.scaleY;if(!(p>=m))for(var b,_,w,A,S,k,x,R,E=l[i],C=l[i+1],P=l[i+2],T=l[a],O=l[a+1],L=l[a+2],I=l[s],F=l[s+1],j=l[s+2],D=Math.round(p),M=Math.round(m),N=D;N<=M;N++){if(N<g){var U=void 0;b=d-(d-v)*(U=N<p?0:p===g?1:(p-N)/(p-g)),_=E-(E-T)*U,w=C-(C-O)*U,A=P-(P-L)*U}else{var q=void 0;b=v-(v-y)*(q=N>m?1:g===m?0:(g-N)/(g-m)),_=T-(T-I)*q,w=O-(O-F)*q,A=L-(L-j)*q}var B=void 0;S=d-(d-y)*(B=N<p?0:N>m?1:(p-N)/(p-m)),k=E-(E-I)*B,x=C-(C-F)*B,R=P-(P-j)*B;for(var W=Math.round(Math.min(b,S)),G=Math.round(Math.max(b,S)),z=h*N+4*W,H=W;H<=G;H++){var Y=(b-H)/(b-S);Y<0?Y=0:Y>1&&(Y=1),f[z++]=_-(_-k)*Y|0,f[z++]=w-(w-x)*Y|0,f[z++]=A-(A-R)*Y|0,f[z++]=255}}}function t(t,r,n){var o,i,a=r.coords,s=r.colors;switch(r.type){case"lattice":var u=r.verticesPerRow,c=Math.floor(a.length/u)-1,l=u-1;for(o=0;o<c;o++)for(var f=o*u,h=0;h<l;h++,f++)e(t,n,a[f],a[f+1],a[f+u],s[f],s[f+1],s[f+u]),e(t,n,a[f+u+1],a[f+1],a[f+u],s[f+u+1],s[f+1],s[f+u]);break;case"triangles":for(o=0,i=a.length;o<i;o+=3)e(t,n,a[o],a[o+1],a[o+2],s[o],s[o+1],s[o+2]);break;default:throw new Error("illegal figure")}}return function(e,r,n,o,i,a,s,u){var c,l,f,h,d=Math.floor(e[0]),p=Math.floor(e[1]),v=Math.ceil(e[2])-d,g=Math.ceil(e[3])-p,y=Math.min(Math.ceil(Math.abs(v*r[0]*1.1)),3e3),m=Math.min(Math.ceil(Math.abs(g*r[1]*1.1)),3e3),b=v/y,_=g/m,w={coords:n,colors:o,offsetX:-d,offsetY:-p,scaleX:1/b,scaleY:1/_},A=y+4,S=m+4;if(u.isEnabled)c=u.drawFigures({width:y,height:m,backgroundColor:a,figures:i,context:w}),(l=s.getCanvas("mesh",A,S,!1)).context.drawImage(c,2,2),c=l.canvas;else{var k=(l=s.getCanvas("mesh",A,S,!1)).context,x=k.createImageData(y,m);if(a){var R=x.data;for(f=0,h=R.length;f<h;f+=4)R[f]=a[0],R[f+1]=a[1],R[f+2]=a[2],R[f+3]=255}for(f=0;f<i.length;f++)t(x,i[f],w);k.putImageData(x,2,2),c=l.canvas}return{canvas:c,offsetX:d-2*b,offsetY:p-2*_,scaleX:b,scaleY:_}}}();o.Mesh={fromIR:function(e){var t=e[2],r=e[3],o=e[4],s=e[5],u=e[6],c=e[7],l=e[8];return{type:"Pattern",getPattern:function(e,f,h){var d;if(i(e,c),h)d=n.Util.singularValueDecompose2dScale(e.mozCurrentTransform);else if(d=n.Util.singularValueDecompose2dScale(f.baseTransform),u){var p=n.Util.singularValueDecompose2dScale(u);d=[d[0]*p[0],d[1]*p[1]]}var v=a(s,d,t,r,o,h?null:l,f.cachedCanvases,f.webGLContext);return h||(e.setTransform.apply(e,f.baseTransform),u&&e.transform.apply(e,u)),e.translate(v.offsetX,v.offsetY),e.scale(v.scaleX,v.scaleY),e.createPattern(v.canvas,"no-repeat")}}}},o.Dummy={fromIR:function(){return{type:"Pattern",getPattern:function(){return"hotpink"}}}};var s=function(){var e=1,t=2;function r(e,t,r,n,o){this.operatorList=e[2],this.matrix=e[3]||[1,0,0,1,0,0],this.bbox=e[4],this.xstep=e[5],this.ystep=e[6],this.paintType=e[7],this.tilingType=e[8],this.color=t,this.canvasGraphicsFactory=n,this.baseTransform=o,this.type="Pattern",this.ctx=r}return r.prototype={createPatternCanvas:function(e){var t=this.operatorList,r=this.bbox,o=this.xstep,i=this.ystep,a=this.paintType,s=this.tilingType,u=this.color,c=this.canvasGraphicsFactory;(0,n.info)("TilingType: "+s);var l=r[0],f=r[1],h=r[2],d=r[3],p=n.Util.singularValueDecompose2dScale(this.matrix),v=n.Util.singularValueDecompose2dScale(this.baseTransform),g=[p[0]*v[0],p[1]*v[1]],y=this.getSizeAndScale(o,this.ctx.canvas.width,g[0]),m=this.getSizeAndScale(i,this.ctx.canvas.height,g[1]),b=e.cachedCanvases.getCanvas("pattern",y.size,m.size,!0),_=b.context,w=c.createCanvasGraphics(_);return w.groupLevel=e.groupLevel,this.setFillAndStrokeStyleToContext(w,a,u),w.transform(y.scale,0,0,m.scale,0,0),w.transform(1,0,0,1,-l,-f),this.clipBbox(w,r,l,f,h,d),w.executeOperatorList(t),this.ctx.transform(1,0,0,1,l,f),this.ctx.scale(1/y.scale,1/m.scale),b.canvas},getSizeAndScale:function(e,t,r){e=Math.abs(e);var n=Math.max(3e3,t),o=Math.ceil(e*r);return o>=n?o=n:r=o/e,{scale:r,size:o}},clipBbox:function(e,t,r,n,o,i){if(Array.isArray(t)&&4===t.length){var a=o-r,s=i-n;e.ctx.rect(r,n,a,s),e.clip(),e.endPath()}},setFillAndStrokeStyleToContext:function(r,o,i){var a=r.ctx,s=r.current;switch(o){case e:var u=this.ctx;a.fillStyle=u.fillStyle,a.strokeStyle=u.strokeStyle,s.fillColor=u.fillStyle,s.strokeColor=u.strokeStyle;break;case t:var c=n.Util.makeCssRgb(i[0],i[1],i[2]);a.fillStyle=c,a.strokeStyle=c,s.fillColor=c,s.strokeColor=c;break;default:throw new n.FormatError("Unsupported paint type: ".concat(o))}},getPattern:function(e,t){(e=this.ctx).setTransform.apply(e,this.baseTransform),e.transform.apply(e,this.matrix);var r=this.createPatternCanvas(t);return e.createPattern(r,"repeat")}},r}();t.TilingPattern=s},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GlobalWorkerOptions=void 0;var n=Object.create(null);t.GlobalWorkerOptions=n,n.workerPort=void 0===n.workerPort?null:n.workerPort,n.workerSrc=void 0===n.workerSrc?"":n.workerSrc},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MessageHandler=void 0;var n,o=(n=r(191))&&n.__esModule?n:{default:n},i=r(1);function a(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var c=1,l=2,f=1,h=2,d=3,p=4,v=5,g=6,y=7,m=8;function b(e){if("object"!==u(e)||null===e)return e;switch(e.name){case"AbortException":return new i.AbortException(e.message);case"MissingPDFException":return new i.MissingPDFException(e.message);case"UnexpectedResponseException":return new i.UnexpectedResponseException(e.message,e.status);case"UnknownErrorException":return new i.UnknownErrorException(e.message,e.details);default:return new i.UnknownErrorException(e.message,e.toString())}}var _=function(){function e(t,r,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.sourceName=t,this.targetName=r,this.comObj=n,this.callbackId=1,this.streamId=1,this.postMessageTransfers=!0,this.streamSinks=Object.create(null),this.streamControllers=Object.create(null),this.callbackCapabilities=Object.create(null),this.actionHandler=Object.create(null),this._onComObjOnMessage=function(e){var t=e.data;if(t.targetName===o.sourceName)if(t.stream)o._processStreamMessage(t);else if(t.callback){var r=t.callbackId,i=o.callbackCapabilities[r];if(!i)throw new Error("Cannot resolve callback ".concat(r));if(delete o.callbackCapabilities[r],t.callback===c)i.resolve(t.data);else{if(t.callback!==l)throw new Error("Unexpected callback case");i.reject(b(t.reason))}}else{var a=o.actionHandler[t.action];if(!a)throw new Error("Unknown action from worker: ".concat(t.action));if(t.callbackId){var s=o.sourceName,u=t.sourceName;new Promise((function(e){e(a(t.data))})).then((function(e){n.postMessage({sourceName:s,targetName:u,callback:c,callbackId:t.callbackId,data:e})}),(function(e){n.postMessage({sourceName:s,targetName:u,callback:l,callbackId:t.callbackId,reason:b(e)})}))}else t.streamId?o._createStreamSink(t):a(t.data)}},n.addEventListener("message",this._onComObjOnMessage)}var t,r,n,u,_;return t=e,(r=[{key:"on",value:function(e,t){var r=this.actionHandler;if(r[e])throw new Error('There is already an actionName called "'.concat(e,'"'));r[e]=t}},{key:"send",value:function(e,t,r){this._postMessage({sourceName:this.sourceName,targetName:this.targetName,action:e,data:t},r)}},{key:"sendWithPromise",value:function(e,t,r){var n=this.callbackId++,o=(0,i.createPromiseCapability)();this.callbackCapabilities[n]=o;try{this._postMessage({sourceName:this.sourceName,targetName:this.targetName,action:e,callbackId:n,data:t},r)}catch(e){o.reject(e)}return o.promise}},{key:"sendWithStream",value:function(e,t,r,n){var o=this,a=this.streamId++,s=this.sourceName,u=this.targetName,c=this.comObj;return new ReadableStream({start:function(r){var c=(0,i.createPromiseCapability)();return o.streamControllers[a]={controller:r,startCall:c,pullCall:null,cancelCall:null,isClosed:!1},o._postMessage({sourceName:s,targetName:u,action:e,streamId:a,data:t,desiredSize:r.desiredSize},n),c.promise},pull:function(e){var t=(0,i.createPromiseCapability)();return o.streamControllers[a].pullCall=t,c.postMessage({sourceName:s,targetName:u,stream:g,streamId:a,desiredSize:e.desiredSize}),t.promise},cancel:function(e){(0,i.assert)(e instanceof Error,"cancel must have a valid reason");var t=(0,i.createPromiseCapability)();return o.streamControllers[a].cancelCall=t,o.streamControllers[a].isClosed=!0,c.postMessage({sourceName:s,targetName:u,stream:f,streamId:a,reason:b(e)}),t.promise}},r)}},{key:"_createStreamSink",value:function(e){var t=this,r=this.actionHandler[e.action],n=e.streamId,o=this.sourceName,a=e.sourceName,s=this.comObj,u={enqueue:function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,s=arguments.length>2?arguments[2]:void 0;if(!this.isCancelled){var u=this.desiredSize;this.desiredSize-=r,u>0&&this.desiredSize<=0&&(this.sinkCapability=(0,i.createPromiseCapability)(),this.ready=this.sinkCapability.promise),t._postMessage({sourceName:o,targetName:a,stream:p,streamId:n,chunk:e},s)}},close:function(){this.isCancelled||(this.isCancelled=!0,s.postMessage({sourceName:o,targetName:a,stream:d,streamId:n}),delete t.streamSinks[n])},error:function(e){(0,i.assert)(e instanceof Error,"error must have a valid reason"),this.isCancelled||(this.isCancelled=!0,s.postMessage({sourceName:o,targetName:a,stream:v,streamId:n,reason:b(e)}))},sinkCapability:(0,i.createPromiseCapability)(),onPull:null,onCancel:null,isCancelled:!1,desiredSize:e.desiredSize,ready:null};u.sinkCapability.resolve(),u.ready=u.sinkCapability.promise,this.streamSinks[n]=u,new Promise((function(t){t(r(e.data,u))})).then((function(){s.postMessage({sourceName:o,targetName:a,stream:m,streamId:n,success:!0})}),(function(e){s.postMessage({sourceName:o,targetName:a,stream:m,streamId:n,reason:b(e)})}))}},{key:"_processStreamMessage",value:function(e){var t=e.streamId,r=this.sourceName,n=e.sourceName,o=this.comObj;switch(e.stream){case m:e.success?this.streamControllers[t].startCall.resolve():this.streamControllers[t].startCall.reject(b(e.reason));break;case y:e.success?this.streamControllers[t].pullCall.resolve():this.streamControllers[t].pullCall.reject(b(e.reason));break;case g:if(!this.streamSinks[t]){o.postMessage({sourceName:r,targetName:n,stream:y,streamId:t,success:!0});break}this.streamSinks[t].desiredSize<=0&&e.desiredSize>0&&this.streamSinks[t].sinkCapability.resolve(),this.streamSinks[t].desiredSize=e.desiredSize;var a=this.streamSinks[e.streamId].onPull;new Promise((function(e){e(a&&a())})).then((function(){o.postMessage({sourceName:r,targetName:n,stream:y,streamId:t,success:!0})}),(function(e){o.postMessage({sourceName:r,targetName:n,stream:y,streamId:t,reason:b(e)})}));break;case p:if((0,i.assert)(this.streamControllers[t],"enqueue should have stream controller"),this.streamControllers[t].isClosed)break;this.streamControllers[t].controller.enqueue(e.chunk);break;case d:if((0,i.assert)(this.streamControllers[t],"close should have stream controller"),this.streamControllers[t].isClosed)break;this.streamControllers[t].isClosed=!0,this.streamControllers[t].controller.close(),this._deleteStreamController(t);break;case v:(0,i.assert)(this.streamControllers[t],"error should have stream controller"),this.streamControllers[t].controller.error(b(e.reason)),this._deleteStreamController(t);break;case h:e.success?this.streamControllers[t].cancelCall.resolve():this.streamControllers[t].cancelCall.reject(b(e.reason)),this._deleteStreamController(t);break;case f:if(!this.streamSinks[t])break;var s=this.streamSinks[e.streamId].onCancel;new Promise((function(t){t(s&&s(b(e.reason)))})).then((function(){o.postMessage({sourceName:r,targetName:n,stream:h,streamId:t,success:!0})}),(function(e){o.postMessage({sourceName:r,targetName:n,stream:h,streamId:t,reason:b(e)})})),this.streamSinks[t].sinkCapability.reject(b(e.reason)),this.streamSinks[t].isCancelled=!0,delete this.streamSinks[t];break;default:throw new Error("Unexpected stream case")}}},{key:"_deleteStreamController",value:(u=o.default.mark((function e(t){return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.allSettled([this.streamControllers[t].startCall,this.streamControllers[t].pullCall,this.streamControllers[t].cancelCall].map((function(e){return e&&e.promise})));case 2:delete this.streamControllers[t];case 3:case"end":return e.stop()}}),e,this)})),_=function(){var e=this,t=arguments;return new Promise((function(r,n){var o=u.apply(e,t);function i(e){a(o,r,n,i,s,"next",e)}function s(e){a(o,r,n,i,s,"throw",e)}i(void 0)}))},function(e){return _.apply(this,arguments)})},{key:"_postMessage",value:function(e,t){t&&this.postMessageTransfers?this.comObj.postMessage(e,t):this.comObj.postMessage(e)}},{key:"destroy",value:function(){this.comObj.removeEventListener("message",this._onComObjOnMessage)}}])&&s(t.prototype,r),n&&s(t,n),e}();t.MessageHandler=_},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Metadata=void 0;var n=r(1),o=r(202);function i(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],n=!0,o=!1,i=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return r}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var s=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),(0,n.assert)("string"==typeof t,"Metadata: input is not a string"),t=this._repair(t);var r=(new o.SimpleXMLParser).parseFromString(t);this._metadataMap=new Map,r&&this._parse(r)}var t,r,s;return t=e,(r=[{key:"_repair",value:function(e){return e.replace(/^[^<]+/,"").replace(/>\\376\\377([^<]+)/g,(function(e,t){for(var r=t.replace(/\\([0-3])([0-7])([0-7])/g,(function(e,t,r,n){return String.fromCharCode(64*t+8*r+1*n)})).replace(/&(amp|apos|gt|lt|quot);/g,(function(e,t){switch(t){case"amp":return"&";case"apos":return"'";case"gt":return">";case"lt":return"<";case"quot":return'"'}throw new Error("_repair: ".concat(t," isn't defined."))})),n="",o=0,i=r.length;o<i;o+=2){var a=256*r.charCodeAt(o)+r.charCodeAt(o+1);n+=a>=32&&a<127&&60!==a&&62!==a&&38!==a?String.fromCharCode(a):"&#x"+(65536+a).toString(16).substring(1)+";"}return">"+n}))}},{key:"_parse",value:function(e){var t=e.documentElement;if("rdf:rdf"!==t.nodeName.toLowerCase())for(t=t.firstChild;t&&"rdf:rdf"!==t.nodeName.toLowerCase();)t=t.nextSibling;var r=t?t.nodeName.toLowerCase():null;if(t&&"rdf:rdf"===r&&t.hasChildNodes())for(var n=t.childNodes,o=0,i=n.length;o<i;o++){var a=n[o];if("rdf:description"===a.nodeName.toLowerCase())for(var s=0,u=a.childNodes.length;s<u;s++)if("#text"!==a.childNodes[s].nodeName.toLowerCase()){var c=a.childNodes[s],l=c.nodeName.toLowerCase();this._metadataMap.set(l,c.textContent.trim())}}}},{key:"get",value:function(e){return this._metadataMap.has(e)?this._metadataMap.get(e):null}},{key:"getAll",value:function(){var e=Object.create(null),t=!0,r=!1,n=void 0;try{for(var o,a=this._metadataMap[Symbol.iterator]();!(t=(o=a.next()).done);t=!0){var s=i(o.value,2),u=s[0],c=s[1];e[u]=c}}catch(e){r=!0,n=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw n}}return e}},{key:"has",value:function(e){return this._metadataMap.has(e)}}])&&a(t.prototype,r),s&&a(t,s),e}();t.Metadata=s},function(e,t,r){"use strict";function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],n=!0,o=!1,i=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return r}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function i(e,t){return!t||"object"!==n(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function a(e,t,r){return(a="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(r):o.value}})(e,t,r||e)}function s(e){return(s=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function u(e,t){return(u=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function f(e,t,r){return t&&l(e.prototype,t),r&&l(e,r),e}Object.defineProperty(t,"__esModule",{value:!0}),t.SimpleXMLParser=void 0;var h=0,d=-2,p=-3,v=-4,g=-5,y=-6,m=-9;function b(e,t){var r=e[t];return" "===r||"\n"===r||"\r"===r||"\t"===r}var _=function(){function e(){c(this,e)}return f(e,[{key:"_resolveEntities",value:function(e){var t=this;return e.replace(/&([^;]+);/g,(function(e,r){if("#x"===r.substring(0,2))return String.fromCharCode(parseInt(r.substring(2),16));if("#"===r.substring(0,1))return String.fromCharCode(parseInt(r.substring(1),10));switch(r){case"lt":return"<";case"gt":return">";case"amp":return"&";case"quot":return'"'}return t.onResolveEntity(r)}))}},{key:"_parseContent",value:function(e,t){var r=[],n=t;function o(){for(;n<e.length&&b(e,n);)++n}for(;n<e.length&&!b(e,n)&&">"!==e[n]&&"/"!==e[n];)++n;var i=e.substring(t,n);for(o();n<e.length&&">"!==e[n]&&"/"!==e[n]&&"?"!==e[n];){o();for(var a,s="";n<e.length&&!b(e,n)&&"="!==e[n];)s+=e[n],++n;if(o(),"="!==e[n])return null;++n,o();var u=e[n];if('"'!==u&&"'"!==u)return null;var c=e.indexOf(u,++n);if(c<0)return null;a=e.substring(n,c),r.push({name:s,value:this._resolveEntities(a)}),n=c+1,o()}return{name:i,attributes:r,parsed:n-t}}},{key:"_parseProcessingInstruction",value:function(e,t){for(var r=t;r<e.length&&!b(e,r)&&">"!==e[r]&&"/"!==e[r];)++r;var n=e.substring(t,r);!function(){for(;r<e.length&&b(e,r);)++r}();for(var o=r;r<e.length&&("?"!==e[r]||">"!==e[r+1]);)++r;return{name:n,value:e.substring(o,r),parsed:r-t}}},{key:"parseXml",value:function(e){for(var t=0;t<e.length;){var r=t;if("<"===e[t]){var n=void 0;switch(e[++r]){case"/":if(++r,(n=e.indexOf(">",r))<0)return void this.onError(m);this.onEndElement(e.substring(r,n)),r=n+1;break;case"?":++r;var o=this._parseProcessingInstruction(e,r);if("?>"!==e.substring(r+o.parsed,r+o.parsed+2))return void this.onError(p);this.onPi(o.name,o.value),r+=o.parsed+2;break;case"!":if("--"===e.substring(r+1,r+3)){if((n=e.indexOf("--\x3e",r+3))<0)return void this.onError(g);this.onComment(e.substring(r+3,n)),r=n+3}else if("[CDATA["===e.substring(r+1,r+8)){if((n=e.indexOf("]]>",r+8))<0)return void this.onError(d);this.onCdata(e.substring(r+8,n)),r=n+3}else{if("DOCTYPE"!==e.substring(r+1,r+8))return void this.onError(y);var i=e.indexOf("[",r+8),a=!1;if((n=e.indexOf(">",r+8))<0)return void this.onError(v);if(i>0&&n>i){if((n=e.indexOf("]>",r+8))<0)return void this.onError(v);a=!0}var s=e.substring(r+8,n+(a?1:0));this.onDoctype(s),r=n+(a?2:1)}break;default:var u=this._parseContent(e,r);if(null===u)return void this.onError(y);var c=!1;if("/>"===e.substring(r+u.parsed,r+u.parsed+2))c=!0;else if(">"!==e.substring(r+u.parsed,r+u.parsed+1))return void this.onError(m);this.onBeginElement(u.name,u.attributes,c),r+=u.parsed+(c?2:1)}}else{for(;r<e.length&&"<"!==e[r];)r++;var l=e.substring(t,r);this.onText(this._resolveEntities(l))}t=r}}},{key:"onResolveEntity",value:function(e){return"&".concat(e,";")}},{key:"onPi",value:function(e,t){}},{key:"onComment",value:function(e){}},{key:"onCdata",value:function(e){}},{key:"onDoctype",value:function(e){}},{key:"onText",value:function(e){}},{key:"onBeginElement",value:function(e,t,r){}},{key:"onEndElement",value:function(e){}},{key:"onError",value:function(e){}}]),e}(),w=function(){function e(t,r){c(this,e),this.nodeName=t,this.nodeValue=r,Object.defineProperty(this,"parentNode",{value:null,writable:!0})}return f(e,[{key:"hasChildNodes",value:function(){return this.childNodes&&this.childNodes.length>0}},{key:"firstChild",get:function(){return this.childNodes&&this.childNodes[0]}},{key:"nextSibling",get:function(){var e=this.parentNode.childNodes;if(e){var t=e.indexOf(this);if(-1!==t)return e[t+1]}}},{key:"textContent",get:function(){return this.childNodes?this.childNodes.map((function(e){return e.textContent})).join(""):this.nodeValue||""}}]),e}(),A=function(e){function t(){var e;return c(this,t),(e=i(this,s(t).call(this)))._currentFragment=null,e._stack=null,e._errorCode=h,e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&u(e,t)}(t,e),f(t,[{key:"parseFromString",value:function(e){if(this._currentFragment=[],this._stack=[],this._errorCode=h,this.parseXml(e),this._errorCode===h){var t=o(this._currentFragment,1)[0];if(t)return{documentElement:t}}}},{key:"onResolveEntity",value:function(e){switch(e){case"apos":return"'"}return a(s(t.prototype),"onResolveEntity",this).call(this,e)}},{key:"onText",value:function(e){if(!function(e){for(var t=0,r=e.length;t<r;t++)if(!b(e,t))return!1;return!0}(e)){var t=new w("#text",e);this._currentFragment.push(t)}}},{key:"onCdata",value:function(e){var t=new w("#text",e);this._currentFragment.push(t)}},{key:"onBeginElement",value:function(e,t,r){var n=new w(e);n.childNodes=[],this._currentFragment.push(n),r||(this._stack.push(this._currentFragment),this._currentFragment=n.childNodes)}},{key:"onEndElement",value:function(e){this._currentFragment=this._stack.pop()||[];var t=this._currentFragment[this._currentFragment.length-1];if(t)for(var r=0,n=t.childNodes.length;r<n;r++)t.childNodes[r].parentNode=t}},{key:"onError",value:function(e){this._errorCode=e}}]),t}(_);t.SimpleXMLParser=A},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PDFDataTransportStream=void 0;var n,o=(n=r(191))&&n.__esModule?n:{default:n},i=r(1);function a(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function s(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function s(e){a(i,n,o,s,u,"next",e)}function u(e){a(i,n,o,s,u,"throw",e)}s(void 0)}))}}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function l(e,t,r){return t&&c(e.prototype,t),r&&c(e,r),e}var f=function(){function e(t,r){var n=this;u(this,e),(0,i.assert)(r),this._queuedChunks=[],this._progressiveDone=t.progressiveDone||!1;var o=t.initialData;if(o&&o.length>0){var a=new Uint8Array(o).buffer;this._queuedChunks.push(a)}this._pdfDataRangeTransport=r,this._isStreamingSupported=!t.disableStream,this._isRangeSupported=!t.disableRange,this._contentLength=t.length,this._fullRequestReader=null,this._rangeReaders=[],this._pdfDataRangeTransport.addRangeListener((function(e,t){n._onReceiveData({begin:e,chunk:t})})),this._pdfDataRangeTransport.addProgressListener((function(e,t){n._onProgress({loaded:e,total:t})})),this._pdfDataRangeTransport.addProgressiveReadListener((function(e){n._onReceiveData({chunk:e})})),this._pdfDataRangeTransport.addProgressiveDoneListener((function(){n._onProgressiveDone()})),this._pdfDataRangeTransport.transportReady()}return l(e,[{key:"_onReceiveData",value:function(e){var t=new Uint8Array(e.chunk).buffer;if(void 0===e.begin)this._fullRequestReader?this._fullRequestReader._enqueue(t):this._queuedChunks.push(t);else{var r=this._rangeReaders.some((function(r){return r._begin===e.begin&&(r._enqueue(t),!0)}));(0,i.assert)(r)}}},{key:"_onProgress",value:function(e){if(void 0===e.total){var t=this._rangeReaders[0];t&&t.onProgress&&t.onProgress({loaded:e.loaded})}else{var r=this._fullRequestReader;r&&r.onProgress&&r.onProgress({loaded:e.loaded,total:e.total})}}},{key:"_onProgressiveDone",value:function(){this._fullRequestReader&&this._fullRequestReader.progressiveDone(),this._progressiveDone=!0}},{key:"_removeRangeReader",value:function(e){var t=this._rangeReaders.indexOf(e);t>=0&&this._rangeReaders.splice(t,1)}},{key:"getFullReader",value:function(){(0,i.assert)(!this._fullRequestReader);var e=this._queuedChunks;return this._queuedChunks=null,new h(this,e,this._progressiveDone)}},{key:"getRangeReader",value:function(e,t){if(t<=this._progressiveDataLength)return null;var r=new d(this,e,t);return this._pdfDataRangeTransport.requestDataRange(e,t),this._rangeReaders.push(r),r}},{key:"cancelAllRequests",value:function(e){this._fullRequestReader&&this._fullRequestReader.cancel(e),this._rangeReaders.slice(0).forEach((function(t){t.cancel(e)})),this._pdfDataRangeTransport.abort()}},{key:"_progressiveDataLength",get:function(){return this._fullRequestReader?this._fullRequestReader._loaded:0}}]),e}();t.PDFDataTransportStream=f;var h=function(){function e(t,r){var n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];u(this,e),this._stream=t,this._done=n||!1,this._filename=null,this._queuedChunks=r||[],this._loaded=0;var o=!0,i=!1,a=void 0;try{for(var s,c=this._queuedChunks[Symbol.iterator]();!(o=(s=c.next()).done);o=!0){var l=s.value;this._loaded+=l.byteLength}}catch(e){i=!0,a=e}finally{try{o||null==c.return||c.return()}finally{if(i)throw a}}this._requests=[],this._headersReady=Promise.resolve(),t._fullRequestReader=this,this.onProgress=null}var t;return l(e,[{key:"_enqueue",value:function(e){this._done||(this._requests.length>0?this._requests.shift().resolve({value:e,done:!1}):this._queuedChunks.push(e),this._loaded+=e.byteLength)}},{key:"read",value:(t=s(o.default.mark((function e(){var t,r;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!(this._queuedChunks.length>0)){e.next=3;break}return t=this._queuedChunks.shift(),e.abrupt("return",{value:t,done:!1});case 3:if(!this._done){e.next=5;break}return e.abrupt("return",{value:void 0,done:!0});case 5:return r=(0,i.createPromiseCapability)(),this._requests.push(r),e.abrupt("return",r.promise);case 8:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"cancel",value:function(e){this._done=!0,this._requests.forEach((function(e){e.resolve({value:void 0,done:!0})})),this._requests=[]}},{key:"progressiveDone",value:function(){this._done||(this._done=!0)}},{key:"headersReady",get:function(){return this._headersReady}},{key:"filename",get:function(){return this._filename}},{key:"isRangeSupported",get:function(){return this._stream._isRangeSupported}},{key:"isStreamingSupported",get:function(){return this._stream._isStreamingSupported}},{key:"contentLength",get:function(){return this._stream._contentLength}}]),e}(),d=function(){function e(t,r,n){u(this,e),this._stream=t,this._begin=r,this._end=n,this._queuedChunk=null,this._requests=[],this._done=!1,this.onProgress=null}var t;return l(e,[{key:"_enqueue",value:function(e){this._done||(0===this._requests.length?this._queuedChunk=e:(this._requests.shift().resolve({value:e,done:!1}),this._requests.forEach((function(e){e.resolve({value:void 0,done:!0})})),this._requests=[]),this._done=!0,this._stream._removeRangeReader(this))}},{key:"read",value:(t=s(o.default.mark((function e(){var t,r;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this._queuedChunk){e.next=4;break}return t=this._queuedChunk,this._queuedChunk=null,e.abrupt("return",{value:t,done:!1});case 4:if(!this._done){e.next=6;break}return e.abrupt("return",{value:void 0,done:!0});case 6:return r=(0,i.createPromiseCapability)(),this._requests.push(r),e.abrupt("return",r.promise);case 9:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"cancel",value:function(e){this._done=!0,this._requests.forEach((function(e){e.resolve({value:void 0,done:!0})})),this._requests=[],this._stream._removeRangeReader(this)}},{key:"isStreamingSupported",get:function(){return!1}}]),e}()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.WebGLContext=void 0;var n=r(1);function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var i=function(){function e(t){var r=t.enable,n=void 0!==r&&r;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._enabled=!0===n}var t,r,i;return t=e,(r=[{key:"composeSMask",value:function(e){var t=e.layer,r=e.mask,n=e.properties;return a.composeSMask(t,r,n)}},{key:"drawFigures",value:function(e){var t=e.width,r=e.height,n=e.backgroundColor,o=e.figures,i=e.context;return a.drawFigures(t,r,n,o,i)}},{key:"clear",value:function(){a.cleanup()}},{key:"isEnabled",get:function(){var e=this._enabled;return e&&(e=a.tryInitGL()),(0,n.shadow)(this,"isEnabled",e)}}])&&o(t.prototype,r),i&&o(t,i),e}();t.WebGLContext=i;var a=function(){function e(e,t,r){var n=e.createShader(r);if(e.shaderSource(n,t),e.compileShader(n),!e.getShaderParameter(n,e.COMPILE_STATUS)){var o=e.getShaderInfoLog(n);throw new Error("Error during shader compilation: "+o)}return n}function t(t,r){return e(t,r,t.VERTEX_SHADER)}function r(t,r){return e(t,r,t.FRAGMENT_SHADER)}function n(e,t){for(var r=e.createProgram(),n=0,o=t.length;n<o;++n)e.attachShader(r,t[n]);if(e.linkProgram(r),!e.getProgramParameter(r,e.LINK_STATUS)){var i=e.getProgramInfoLog(r);throw new Error("Error during program linking: "+i)}return r}function o(e,t,r){e.activeTexture(r);var n=e.createTexture();return e.bindTexture(e.TEXTURE_2D,n),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,t),n}var i,a;function s(){i||(a=document.createElement("canvas"),i=a.getContext("webgl",{premultipliedalpha:!1}))}var u=null,c=null;return{tryInitGL:function(){try{return s(),!!i}catch(e){}return!1},composeSMask:function(e,c,l){var f=e.width,h=e.height;u||function(){var e,o;s(),e=a,a=null,o=i,i=null;var c=n(o,[t(o,"  attribute vec2 a_position;                                      attribute vec2 a_texCoord;                                                                                                      uniform vec2 u_resolution;                                                                                                      varying vec2 v_texCoord;                                                                                                        void main() {                                                     vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;       gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);                                                                              v_texCoord = a_texCoord;                                      }                                                             "),r(o,"  precision mediump float;                                                                                                        uniform vec4 u_backdrop;                                        uniform int u_subtype;                                          uniform sampler2D u_image;                                      uniform sampler2D u_mask;                                                                                                       varying vec2 v_texCoord;                                                                                                        void main() {                                                     vec4 imageColor = texture2D(u_image, v_texCoord);               vec4 maskColor = texture2D(u_mask, v_texCoord);                 if (u_backdrop.a > 0.0) {                                         maskColor.rgb = maskColor.rgb * maskColor.a +                                   u_backdrop.rgb * (1.0 - maskColor.a);         }                                                               float lum;                                                      if (u_subtype == 0) {                                             lum = maskColor.a;                                            } else {                                                          lum = maskColor.r * 0.3 + maskColor.g * 0.59 +                        maskColor.b * 0.11;                                     }                                                               imageColor.a *= lum;                                            imageColor.rgb *= imageColor.a;                                 gl_FragColor = imageColor;                                    }                                                             ")]);o.useProgram(c);var l={};l.gl=o,l.canvas=e,l.resolutionLocation=o.getUniformLocation(c,"u_resolution"),l.positionLocation=o.getAttribLocation(c,"a_position"),l.backdropLocation=o.getUniformLocation(c,"u_backdrop"),l.subtypeLocation=o.getUniformLocation(c,"u_subtype");var f=o.getAttribLocation(c,"a_texCoord"),h=o.getUniformLocation(c,"u_image"),d=o.getUniformLocation(c,"u_mask"),p=o.createBuffer();o.bindBuffer(o.ARRAY_BUFFER,p),o.bufferData(o.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),o.STATIC_DRAW),o.enableVertexAttribArray(f),o.vertexAttribPointer(f,2,o.FLOAT,!1,0,0),o.uniform1i(h,0),o.uniform1i(d,1),u=l}();var d=u,p=d.canvas,v=d.gl;p.width=f,p.height=h,v.viewport(0,0,v.drawingBufferWidth,v.drawingBufferHeight),v.uniform2f(d.resolutionLocation,f,h),l.backdrop?v.uniform4f(d.resolutionLocation,l.backdrop[0],l.backdrop[1],l.backdrop[2],1):v.uniform4f(d.resolutionLocation,0,0,0,0),v.uniform1i(d.subtypeLocation,"Luminosity"===l.subtype?1:0);var g=o(v,e,v.TEXTURE0),y=o(v,c,v.TEXTURE1),m=v.createBuffer();return v.bindBuffer(v.ARRAY_BUFFER,m),v.bufferData(v.ARRAY_BUFFER,new Float32Array([0,0,f,0,0,h,0,h,f,0,f,h]),v.STATIC_DRAW),v.enableVertexAttribArray(d.positionLocation),v.vertexAttribPointer(d.positionLocation,2,v.FLOAT,!1,0,0),v.clearColor(0,0,0,0),v.enable(v.BLEND),v.blendFunc(v.ONE,v.ONE_MINUS_SRC_ALPHA),v.clear(v.COLOR_BUFFER_BIT),v.drawArrays(v.TRIANGLES,0,6),v.flush(),v.deleteTexture(g),v.deleteTexture(y),v.deleteBuffer(m),p},drawFigures:function(e,o,u,l,f){c||function(){var e,o;s(),e=a,a=null,o=i,i=null;var u=n(o,[t(o,"  attribute vec2 a_position;                                      attribute vec3 a_color;                                                                                                         uniform vec2 u_resolution;                                      uniform vec2 u_scale;                                           uniform vec2 u_offset;                                                                                                          varying vec4 v_color;                                                                                                           void main() {                                                     vec2 position = (a_position + u_offset) * u_scale;              vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;         gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);                                                                              v_color = vec4(a_color / 255.0, 1.0);                         }                                                             "),r(o,"  precision mediump float;                                                                                                        varying vec4 v_color;                                                                                                           void main() {                                                     gl_FragColor = v_color;                                       }                                                             ")]);o.useProgram(u);var l={};l.gl=o,l.canvas=e,l.resolutionLocation=o.getUniformLocation(u,"u_resolution"),l.scaleLocation=o.getUniformLocation(u,"u_scale"),l.offsetLocation=o.getUniformLocation(u,"u_offset"),l.positionLocation=o.getAttribLocation(u,"a_position"),l.colorLocation=o.getAttribLocation(u,"a_color"),c=l}();var h=c,d=h.canvas,p=h.gl;d.width=e,d.height=o,p.viewport(0,0,p.drawingBufferWidth,p.drawingBufferHeight),p.uniform2f(h.resolutionLocation,e,o);var v,g,y,m=0;for(v=0,g=l.length;v<g;v++)switch(l[v].type){case"lattice":m+=((y=l[v].coords.length/l[v].verticesPerRow|0)-1)*(l[v].verticesPerRow-1)*6;break;case"triangles":m+=l[v].coords.length}var b=new Float32Array(2*m),_=new Uint8Array(3*m),w=f.coords,A=f.colors,S=0,k=0;for(v=0,g=l.length;v<g;v++){var x=l[v],R=x.coords,E=x.colors;switch(x.type){case"lattice":var C=x.verticesPerRow;y=R.length/C|0;for(var P=1;P<y;P++)for(var T=P*C+1,O=1;O<C;O++,T++)b[S]=w[R[T-C-1]],b[S+1]=w[R[T-C-1]+1],b[S+2]=w[R[T-C]],b[S+3]=w[R[T-C]+1],b[S+4]=w[R[T-1]],b[S+5]=w[R[T-1]+1],_[k]=A[E[T-C-1]],_[k+1]=A[E[T-C-1]+1],_[k+2]=A[E[T-C-1]+2],_[k+3]=A[E[T-C]],_[k+4]=A[E[T-C]+1],_[k+5]=A[E[T-C]+2],_[k+6]=A[E[T-1]],_[k+7]=A[E[T-1]+1],_[k+8]=A[E[T-1]+2],b[S+6]=b[S+2],b[S+7]=b[S+3],b[S+8]=b[S+4],b[S+9]=b[S+5],b[S+10]=w[R[T]],b[S+11]=w[R[T]+1],_[k+9]=_[k+3],_[k+10]=_[k+4],_[k+11]=_[k+5],_[k+12]=_[k+6],_[k+13]=_[k+7],_[k+14]=_[k+8],_[k+15]=A[E[T]],_[k+16]=A[E[T]+1],_[k+17]=A[E[T]+2],S+=12,k+=18;break;case"triangles":for(var L=0,I=R.length;L<I;L++)b[S]=w[R[L]],b[S+1]=w[R[L]+1],_[k]=A[E[L]],_[k+1]=A[E[L]+1],_[k+2]=A[E[L]+2],S+=2,k+=3}}u?p.clearColor(u[0]/255,u[1]/255,u[2]/255,1):p.clearColor(0,0,0,0),p.clear(p.COLOR_BUFFER_BIT);var F=p.createBuffer();p.bindBuffer(p.ARRAY_BUFFER,F),p.bufferData(p.ARRAY_BUFFER,b,p.STATIC_DRAW),p.enableVertexAttribArray(h.positionLocation),p.vertexAttribPointer(h.positionLocation,2,p.FLOAT,!1,0,0);var j=p.createBuffer();return p.bindBuffer(p.ARRAY_BUFFER,j),p.bufferData(p.ARRAY_BUFFER,_,p.STATIC_DRAW),p.enableVertexAttribArray(h.colorLocation),p.vertexAttribPointer(h.colorLocation,3,p.UNSIGNED_BYTE,!1,0,0),p.uniform2f(h.scaleLocation,f.scaleX,f.scaleY),p.uniform2f(h.offsetLocation,f.offsetX,f.offsetY),p.drawArrays(p.TRIANGLES,0,m),p.flush(),p.deleteBuffer(F),p.deleteBuffer(j),d},cleanup:function(){u&&u.canvas&&(u.canvas.width=0,u.canvas.height=0),c&&c.canvas&&(c.canvas.width=0,c.canvas.height=0),u=null,c=null}}}()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.renderTextLayer=void 0;var n=r(1),o=function(){var e=/\S/;function t(t,r,o){var i,a=document.createElement("span"),s={angle:0,canvasWidth:0,isWhitespace:!1,originalTransform:null,paddingBottom:0,paddingLeft:0,paddingRight:0,paddingTop:0,scale:1};if(t._textDivs.push(a),i=r.str,!e.test(i))return s.isWhitespace=!0,void t._textDivProperties.set(a,s);var u=n.Util.transform(t._viewport.transform,r.transform),c=Math.atan2(u[1],u[0]),l=o[r.fontName];l.vertical&&(c+=Math.PI/2);var f,h,d=Math.sqrt(u[2]*u[2]+u[3]*u[3]),p=d;if(l.ascent?p=l.ascent*p:l.descent&&(p=(1+l.descent)*p),0===c?(f=u[4],h=u[5]-p):(f=u[4]+p*Math.sin(c),h=u[5]-p*Math.cos(c)),a.style.left="".concat(f,"px"),a.style.top="".concat(h,"px"),a.style.fontSize="".concat(d,"px"),a.style.fontFamily=l.fontFamily,a.textContent=r.str,t._fontInspectorEnabled&&(a.dataset.fontName=r.fontName),0!==c&&(s.angle=c*(180/Math.PI)),r.str.length>1&&(l.vertical?s.canvasWidth=r.height*t._viewport.scale:s.canvasWidth=r.width*t._viewport.scale),t._textDivProperties.set(a,s),t._textContentStream&&t._layoutText(a),t._enhanceTextSelection){var v=1,g=0;0!==c&&(v=Math.cos(c),g=Math.sin(c));var y,m,b=(l.vertical?r.height:r.width)*t._viewport.scale,_=d;0!==c?(y=[v,g,-g,v,f,h],m=n.Util.getAxialAlignedBoundingBox([0,0,b,_],y)):m=[f,h,f+b,h+_],t._bounds.push({left:m[0],top:m[1],right:m[2],bottom:m[3],div:a,size:[b,_],m:y})}}function r(e){if(!e._canceled){var t=e._textDivs,r=e._capability,n=t.length;if(n>1e5)return e._renderingDone=!0,void r.resolve();if(!e._textContentStream)for(var o=0;o<n;o++)e._layoutText(t[o]);e._renderingDone=!0,r.resolve()}}function o(e){for(var t=e._bounds,r=e._viewport,o=function(e,t,r){var n=r.map((function(e,t){return{x1:e.left,y1:e.top,x2:e.right,y2:e.bottom,index:t,x1New:void 0,x2New:void 0}}));i(e,n);var o=new Array(r.length);return n.forEach((function(e){var t=e.index;o[t]={left:e.x1New,top:0,right:e.x2New,bottom:0}})),r.map((function(t,r){var i=o[r],a=n[r];a.x1=t.top,a.y1=e-i.right,a.x2=t.bottom,a.y2=e-i.left,a.index=r,a.x1New=void 0,a.x2New=void 0})),i(t,n),n.forEach((function(e){var t=e.index;o[t].top=e.x1New,o[t].bottom=e.x2New})),o}(r.width,r.height,t),a=0;a<o.length;a++){var s=t[a].div,u=e._textDivProperties.get(s);if(0!==u.angle){var c=o[a],l=t[a],f=l.m,h=f[0],d=f[1],p=[[0,0],[0,l.size[1]],[l.size[0],0],l.size],v=new Float64Array(64);p.forEach((function(e,t){var r=n.Util.applyTransform(e,f);v[t+0]=h&&(c.left-r[0])/h,v[t+4]=d&&(c.top-r[1])/d,v[t+8]=h&&(c.right-r[0])/h,v[t+12]=d&&(c.bottom-r[1])/d,v[t+16]=d&&(c.left-r[0])/-d,v[t+20]=h&&(c.top-r[1])/h,v[t+24]=d&&(c.right-r[0])/-d,v[t+28]=h&&(c.bottom-r[1])/h,v[t+32]=h&&(c.left-r[0])/-h,v[t+36]=d&&(c.top-r[1])/-d,v[t+40]=h&&(c.right-r[0])/-h,v[t+44]=d&&(c.bottom-r[1])/-d,v[t+48]=d&&(c.left-r[0])/d,v[t+52]=h&&(c.top-r[1])/-h,v[t+56]=d&&(c.right-r[0])/d,v[t+60]=h&&(c.bottom-r[1])/-h}));var g=function(e,t,r){for(var n=0,o=0;o<r;o++){var i=e[t++];i>0&&(n=n?Math.min(i,n):i)}return n},y=1+Math.min(Math.abs(h),Math.abs(d));u.paddingLeft=g(v,32,16)/y,u.paddingTop=g(v,48,16)/y,u.paddingRight=g(v,0,16)/y,u.paddingBottom=g(v,16,16)/y,e._textDivProperties.set(s,u)}else u.paddingLeft=t[a].left-o[a].left,u.paddingTop=t[a].top-o[a].top,u.paddingRight=o[a].right-t[a].right,u.paddingBottom=o[a].bottom-t[a].bottom,e._textDivProperties.set(s,u)}}function i(e,t){t.sort((function(e,t){return e.x1-t.x1||e.index-t.index}));var r=[{start:-1/0,end:1/0,boundary:{x1:-1/0,y1:-1/0,x2:0,y2:1/0,index:-1,x1New:0,x2New:0}}];t.forEach((function(e){for(var t=0;t<r.length&&r[t].end<=e.y1;)t++;for(var n,o,i=r.length-1;i>=0&&r[i].start>=e.y2;)i--;var a,s,u=-1/0;for(a=t;a<=i;a++){var c;(c=(o=(n=r[a]).boundary).x2>e.x1?o.index>e.index?o.x1New:e.x1:void 0===o.x2New?(o.x2+e.x1)/2:o.x2New)>u&&(u=c)}for(e.x1New=u,a=t;a<=i;a++)void 0===(o=(n=r[a]).boundary).x2New?o.x2>e.x1?o.index>e.index&&(o.x2New=o.x2):o.x2New=u:o.x2New>u&&(o.x2New=Math.max(u,o.x2));var l=[],f=null;for(a=t;a<=i;a++){var h=(o=(n=r[a]).boundary).x2>e.x2?o:e;f===h?l[l.length-1].end=n.end:(l.push({start:n.start,end:n.end,boundary:h}),f=h)}for(r[t].start<e.y1&&(l[0].start=e.y1,l.unshift({start:r[t].start,end:e.y1,boundary:r[t].boundary})),e.y2<r[i].end&&(l[l.length-1].end=e.y2,l.push({start:e.y2,end:r[i].end,boundary:r[i].boundary})),a=t;a<=i;a++)if(void 0===(o=(n=r[a]).boundary).x2New){var d=!1;for(s=t-1;!d&&s>=0&&r[s].start>=o.y1;s--)d=r[s].boundary===o;for(s=i+1;!d&&s<r.length&&r[s].end<=o.y2;s++)d=r[s].boundary===o;for(s=0;!d&&s<l.length;s++)d=l[s].boundary===o;d||(o.x2New=u)}Array.prototype.splice.apply(r,[t,i-t+1].concat(l))})),r.forEach((function(t){var r=t.boundary;void 0===r.x2New&&(r.x2New=Math.max(e,r.x2))}))}function a(e){var t=this,r=e.textContent,o=e.textContentStream,i=e.container,a=e.viewport,s=e.textDivs,u=e.textContentItemsStr,c=e.enhanceTextSelection;this._textContent=r,this._textContentStream=o,this._container=i,this._viewport=a,this._textDivs=s||[],this._textContentItemsStr=u||[],this._enhanceTextSelection=!!c,this._fontInspectorEnabled=!(!globalThis.FontInspector||!globalThis.FontInspector.enabled),this._reader=null,this._layoutTextLastFontSize=null,this._layoutTextLastFontFamily=null,this._layoutTextCtx=null,this._textDivProperties=new WeakMap,this._renderingDone=!1,this._canceled=!1,this._capability=(0,n.createPromiseCapability)(),this._renderTimer=null,this._bounds=[],this._capability.promise.finally((function(){t._layoutTextCtx&&(t._layoutTextCtx.canvas.width=0,t._layoutTextCtx.canvas.height=0,t._layoutTextCtx=null)})).catch((function(){}))}return a.prototype={get promise(){return this._capability.promise},cancel:function(){this._canceled=!0,this._reader&&(this._reader.cancel(new n.AbortException("TextLayer task cancelled.")),this._reader=null),null!==this._renderTimer&&(clearTimeout(this._renderTimer),this._renderTimer=null),this._capability.reject(new Error("TextLayer task cancelled."))},_processItems:function(e,r){for(var n=0,o=e.length;n<o;n++)this._textContentItemsStr.push(e[n].str),t(this,e[n],r)},_layoutText:function(e){var t=this._textDivProperties.get(e);if(!t.isWhitespace){var r="";if(0!==t.canvasWidth){var n=e.style,o=n.fontSize,i=n.fontFamily;o===this._layoutTextLastFontSize&&i===this._layoutTextLastFontFamily||(this._layoutTextCtx.font="".concat(o," ").concat(i),this._layoutTextLastFontSize=o,this._layoutTextLastFontFamily=i);var a=this._layoutTextCtx.measureText(e.textContent).width;a>0&&(t.scale=t.canvasWidth/a,r="scaleX(".concat(t.scale,")"))}0!==t.angle&&(r="rotate(".concat(t.angle,"deg) ").concat(r)),r.length>0&&(this._enhanceTextSelection&&(t.originalTransform=r),e.style.transform=r),this._textDivProperties.set(e,t),this._container.appendChild(e)}},_render:function(e){var t=this,o=(0,n.createPromiseCapability)(),i=Object.create(null),a=document.createElement("canvas");if(a.mozOpaque=!0,this._layoutTextCtx=a.getContext("2d",{alpha:!1}),this._textContent){var s=this._textContent.items,u=this._textContent.styles;this._processItems(s,u),o.resolve()}else{if(!this._textContentStream)throw new Error('Neither "textContent" nor "textContentStream" parameters specified.');this._reader=this._textContentStream.getReader(),function e(){t._reader.read().then((function(r){var n=r.value;r.done?o.resolve():(Object.assign(i,n.styles),t._processItems(n.items,i),e())}),o.reject)}()}o.promise.then((function(){i=null,e?t._renderTimer=setTimeout((function(){r(t),t._renderTimer=null}),e):r(t)}),this._capability.reject)},expandTextDivs:function(e){if(this._enhanceTextSelection&&this._renderingDone){null!==this._bounds&&(o(this),this._bounds=null);for(var t=[],r=[],n=0,i=this._textDivs.length;n<i;n++){var a=this._textDivs[n],s=this._textDivProperties.get(a);s.isWhitespace||(e?(t.length=0,r.length=0,s.originalTransform&&t.push(s.originalTransform),s.paddingTop>0?(r.push("".concat(s.paddingTop,"px")),t.push("translateY(".concat(-s.paddingTop,"px)"))):r.push(0),s.paddingRight>0?r.push("".concat(s.paddingRight/s.scale,"px")):r.push(0),s.paddingBottom>0?r.push("".concat(s.paddingBottom,"px")):r.push(0),s.paddingLeft>0?(r.push("".concat(s.paddingLeft/s.scale,"px")),t.push("translateX(".concat(-s.paddingLeft/s.scale,"px)"))):r.push(0),a.style.padding=r.join(" "),t.length&&(a.style.transform=t.join(" "))):(a.style.padding=null,a.style.transform=s.originalTransform))}}}},function(e){var t=new a({textContent:e.textContent,textContentStream:e.textContentStream,container:e.container,viewport:e.viewport,textDivs:e.textDivs,textContentItemsStr:e.textContentItemsStr,enhanceTextSelection:e.enhanceTextSelection});return t._render(e.timeout),t}}();t.renderTextLayer=o},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AnnotationLayer=void 0;var n=r(194),o=r(1);function i(e,t,r){return(i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=c(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(r):o.value}})(e,t,r||e)}function a(e){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(e,t){return!t||"object"!==a(t)&&"function"!=typeof t?u(e):t}function u(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function d(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function p(e,t,r){return t&&d(e.prototype,t),r&&d(e,r),e}var v=function(){function e(){h(this,e)}return p(e,null,[{key:"create",value:function(e){switch(e.data.annotationType){case o.AnnotationType.LINK:return new y(e);case o.AnnotationType.TEXT:return new m(e);case o.AnnotationType.WIDGET:switch(e.data.fieldType){case"Tx":return new _(e);case"Btn":return e.data.radioButton?new A(e):e.data.checkBox?new w(e):new S(e);case"Ch":return new k(e)}return new b(e);case o.AnnotationType.POPUP:return new x(e);case o.AnnotationType.FREETEXT:return new E(e);case o.AnnotationType.LINE:return new C(e);case o.AnnotationType.SQUARE:return new P(e);case o.AnnotationType.CIRCLE:return new T(e);case o.AnnotationType.POLYLINE:return new O(e);case o.AnnotationType.CARET:return new I(e);case o.AnnotationType.INK:return new F(e);case o.AnnotationType.POLYGON:return new L(e);case o.AnnotationType.HIGHLIGHT:return new j(e);case o.AnnotationType.UNDERLINE:return new D(e);case o.AnnotationType.SQUIGGLY:return new M(e);case o.AnnotationType.STRIKEOUT:return new N(e);case o.AnnotationType.STAMP:return new U(e);case o.AnnotationType.FILEATTACHMENT:return new q(e);default:return new g(e)}}}]),e}(),g=function(){function e(t){var r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];h(this,e),this.isRenderable=r,this.data=t.data,this.layer=t.layer,this.page=t.page,this.viewport=t.viewport,this.linkService=t.linkService,this.downloadManager=t.downloadManager,this.imageResourcesPath=t.imageResourcesPath,this.renderInteractiveForms=t.renderInteractiveForms,this.svgFactory=t.svgFactory,r&&(this.container=this._createContainer(n))}return p(e,[{key:"_createContainer",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=this.data,r=this.page,n=this.viewport,i=document.createElement("section"),a=t.rect[2]-t.rect[0],s=t.rect[3]-t.rect[1];i.setAttribute("data-annotation-id",t.id);var u=o.Util.normalizeRect([t.rect[0],r.view[3]-t.rect[1]+r.view[1],t.rect[2],r.view[3]-t.rect[3]+r.view[1]]);if(i.style.transform="matrix(".concat(n.transform.join(","),")"),i.style.transformOrigin="-".concat(u[0],"px -").concat(u[1],"px"),!e&&t.borderStyle.width>0){i.style.borderWidth="".concat(t.borderStyle.width,"px"),t.borderStyle.style!==o.AnnotationBorderStyleType.UNDERLINE&&(a-=2*t.borderStyle.width,s-=2*t.borderStyle.width);var c=t.borderStyle.horizontalCornerRadius,l=t.borderStyle.verticalCornerRadius;if(c>0||l>0){var f="".concat(c,"px / ").concat(l,"px");i.style.borderRadius=f}switch(t.borderStyle.style){case o.AnnotationBorderStyleType.SOLID:i.style.borderStyle="solid";break;case o.AnnotationBorderStyleType.DASHED:i.style.borderStyle="dashed";break;case o.AnnotationBorderStyleType.BEVELED:(0,o.warn)("Unimplemented border style: beveled");break;case o.AnnotationBorderStyleType.INSET:(0,o.warn)("Unimplemented border style: inset");break;case o.AnnotationBorderStyleType.UNDERLINE:i.style.borderBottomStyle="solid"}t.color?i.style.borderColor=o.Util.makeCssRgb(0|t.color[0],0|t.color[1],0|t.color[2]):i.style.borderWidth=0}return i.style.left="".concat(u[0],"px"),i.style.top="".concat(u[1],"px"),i.style.width="".concat(a,"px"),i.style.height="".concat(s,"px"),i}},{key:"_createPopup",value:function(e,t,r){t||((t=document.createElement("div")).style.height=e.style.height,t.style.width=e.style.width,e.appendChild(t));var n=new R({container:e,trigger:t,color:r.color,title:r.title,modificationDate:r.modificationDate,contents:r.contents,hideWrapper:!0}).render();n.style.left=e.style.width,e.appendChild(n)}},{key:"render",value:function(){(0,o.unreachable)("Abstract method `AnnotationElement.render` called")}}]),e}(),y=function(e){function t(e){h(this,t);var r=!!(e.data.url||e.data.dest||e.data.action);return s(this,c(t).call(this,e,r))}return l(t,e),p(t,[{key:"render",value:function(){this.container.className="linkAnnotation";var e=this.data,t=this.linkService,r=document.createElement("a");return e.url?(0,n.addLinkAttributes)(r,{url:e.url,target:e.newWindow?n.LinkTarget.BLANK:t.externalLinkTarget,rel:t.externalLinkRel,enabled:t.externalLinkEnabled}):e.action?this._bindNamedAction(r,e.action):this._bindLink(r,e.dest),this.container.appendChild(r),this.container}},{key:"_bindLink",value:function(e,t){var r=this;e.href=this.linkService.getDestinationHash(t),e.onclick=function(){return t&&r.linkService.navigateTo(t),!1},t&&(e.className="internalLink")}},{key:"_bindNamedAction",value:function(e,t){var r=this;e.href=this.linkService.getAnchorUrl(""),e.onclick=function(){return r.linkService.executeNamedAction(t),!1},e.className="internalLink"}}]),t}(g),m=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r))}return l(t,e),p(t,[{key:"render",value:function(){this.container.className="textAnnotation";var e=document.createElement("img");return e.style.height=this.container.style.height,e.style.width=this.container.style.width,e.src=this.imageResourcesPath+"annotation-"+this.data.name.toLowerCase()+".svg",e.alt="[{{type}} Annotation]",e.dataset.l10nId="text_annotation_type",e.dataset.l10nArgs=JSON.stringify({type:this.data.name}),this.data.hasPopup||this._createPopup(this.container,e,this.data),this.container.appendChild(e),this.container}}]),t}(g),b=function(e){function t(){return h(this,t),s(this,c(t).apply(this,arguments))}return l(t,e),p(t,[{key:"render",value:function(){return this.container}}]),t}(g),_=function(e){function t(e){h(this,t);var r=e.renderInteractiveForms||!e.data.hasAppearance&&!!e.data.fieldValue;return s(this,c(t).call(this,e,r))}return l(t,e),p(t,[{key:"render",value:function(){this.container.className="textWidgetAnnotation";var e=null;if(this.renderInteractiveForms){if(this.data.multiLine?(e=document.createElement("textarea")).textContent=this.data.fieldValue:((e=document.createElement("input")).type="text",e.setAttribute("value",this.data.fieldValue)),e.disabled=this.data.readOnly,null!==this.data.maxLen&&(e.maxLength=this.data.maxLen),this.data.comb){var t=(this.data.rect[2]-this.data.rect[0])/this.data.maxLen;e.classList.add("comb"),e.style.letterSpacing="calc(".concat(t,"px - 1ch)")}}else{(e=document.createElement("div")).textContent=this.data.fieldValue,e.style.verticalAlign="middle",e.style.display="table-cell";var r=null;this.data.fontRefName&&this.page.commonObjs.has(this.data.fontRefName)&&(r=this.page.commonObjs.get(this.data.fontRefName)),this._setTextStyle(e,r)}return null!==this.data.textAlignment&&(e.style.textAlign=["left","center","right"][this.data.textAlignment]),this.container.appendChild(e),this.container}},{key:"_setTextStyle",value:function(e,t){var r=e.style;if(r.fontSize="".concat(this.data.fontSize,"px"),r.direction=this.data.fontDirection<0?"rtl":"ltr",t){var n="normal";t.black?n="900":t.bold&&(n="bold"),r.fontWeight=n,r.fontStyle=t.italic?"italic":"normal";var o=t.loadedName?'"'.concat(t.loadedName,'", '):"",i=t.fallbackName||"Helvetica, sans-serif";r.fontFamily=o+i}}}]),t}(b),w=function(e){function t(e){return h(this,t),s(this,c(t).call(this,e,e.renderInteractiveForms))}return l(t,e),p(t,[{key:"render",value:function(){this.container.className="buttonWidgetAnnotation checkBox";var e=document.createElement("input");return e.disabled=this.data.readOnly,e.type="checkbox",this.data.fieldValue&&"Off"!==this.data.fieldValue&&e.setAttribute("checked",!0),this.container.appendChild(e),this.container}}]),t}(b),A=function(e){function t(e){return h(this,t),s(this,c(t).call(this,e,e.renderInteractiveForms))}return l(t,e),p(t,[{key:"render",value:function(){this.container.className="buttonWidgetAnnotation radioButton";var e=document.createElement("input");return e.disabled=this.data.readOnly,e.type="radio",e.name=this.data.fieldName,this.data.fieldValue===this.data.buttonValue&&e.setAttribute("checked",!0),this.container.appendChild(e),this.container}}]),t}(b),S=function(e){function t(){return h(this,t),s(this,c(t).apply(this,arguments))}return l(t,e),p(t,[{key:"render",value:function(){var e=i(c(t.prototype),"render",this).call(this);return e.className="buttonWidgetAnnotation pushButton",e}}]),t}(y),k=function(e){function t(e){return h(this,t),s(this,c(t).call(this,e,e.renderInteractiveForms))}return l(t,e),p(t,[{key:"render",value:function(){this.container.className="choiceWidgetAnnotation";var e=document.createElement("select");e.disabled=this.data.readOnly,this.data.combo||(e.size=this.data.options.length,this.data.multiSelect&&(e.multiple=!0));var t=!0,r=!1,n=void 0;try{for(var o,i=this.data.options[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value,s=document.createElement("option");s.textContent=a.displayValue,s.value=a.exportValue,this.data.fieldValue.includes(a.displayValue)&&s.setAttribute("selected",!0),e.appendChild(s)}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}return this.container.appendChild(e),this.container}}]),t}(b),x=function(e){function t(e){h(this,t);var r=!(!e.data.title&&!e.data.contents);return s(this,c(t).call(this,e,r))}return l(t,e),p(t,[{key:"render",value:function(){if(this.container.className="popupAnnotation",["Line","Square","Circle","PolyLine","Polygon","Ink"].includes(this.data.parentType))return this.container;var e='[data-annotation-id="'.concat(this.data.parentId,'"]'),t=this.layer.querySelector(e);if(!t)return this.container;var r=new R({container:this.container,trigger:t,color:this.data.color,title:this.data.title,modificationDate:this.data.modificationDate,contents:this.data.contents}),n=parseFloat(t.style.left),o=parseFloat(t.style.width);return this.container.style.transformOrigin="-".concat(n+o,"px -").concat(t.style.top),this.container.style.left="".concat(n+o,"px"),this.container.appendChild(r.render()),this.container}}]),t}(g),R=function(){function e(t){h(this,e),this.container=t.container,this.trigger=t.trigger,this.color=t.color,this.title=t.title,this.modificationDate=t.modificationDate,this.contents=t.contents,this.hideWrapper=t.hideWrapper||!1,this.pinned=!1}return p(e,[{key:"render",value:function(){var e=document.createElement("div");e.className="popupWrapper",this.hideElement=this.hideWrapper?e:this.container,this.hideElement.setAttribute("hidden",!0);var t=document.createElement("div");t.className="popup";var r=this.color;if(r){var i=.7*(255-r[0])+r[0],a=.7*(255-r[1])+r[1],s=.7*(255-r[2])+r[2];t.style.backgroundColor=o.Util.makeCssRgb(0|i,0|a,0|s)}var u=document.createElement("h1");u.textContent=this.title,t.appendChild(u);var c=n.PDFDateString.toDateObject(this.modificationDate);if(c){var l=document.createElement("span");l.textContent="{{date}}, {{time}}",l.dataset.l10nId="annotation_date_string",l.dataset.l10nArgs=JSON.stringify({date:c.toLocaleDateString(),time:c.toLocaleTimeString()}),t.appendChild(l)}var f=this._formatContents(this.contents);return t.appendChild(f),this.trigger.addEventListener("click",this._toggle.bind(this)),this.trigger.addEventListener("mouseover",this._show.bind(this,!1)),this.trigger.addEventListener("mouseout",this._hide.bind(this,!1)),t.addEventListener("click",this._hide.bind(this,!0)),e.appendChild(t),e}},{key:"_formatContents",value:function(e){for(var t=document.createElement("p"),r=e.split(/(?:\r\n?|\n)/),n=0,o=r.length;n<o;++n){var i=r[n];t.appendChild(document.createTextNode(i)),n<o-1&&t.appendChild(document.createElement("br"))}return t}},{key:"_toggle",value:function(){this.pinned?this._hide(!0):this._show(!0)}},{key:"_show",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];e&&(this.pinned=!0),this.hideElement.hasAttribute("hidden")&&(this.hideElement.removeAttribute("hidden"),this.container.style.zIndex+=1)}},{key:"_hide",value:function(){var e=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];e&&(this.pinned=!1),this.hideElement.hasAttribute("hidden")||this.pinned||(this.hideElement.setAttribute("hidden",!0),this.container.style.zIndex-=1)}}]),e}(),E=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r,!0))}return l(t,e),p(t,[{key:"render",value:function(){return this.container.className="freeTextAnnotation",this.data.hasPopup||this._createPopup(this.container,null,this.data),this.container}}]),t}(g),C=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r,!0))}return l(t,e),p(t,[{key:"render",value:function(){this.container.className="lineAnnotation";var e=this.data,t=e.rect[2]-e.rect[0],r=e.rect[3]-e.rect[1],n=this.svgFactory.create(t,r),o=this.svgFactory.createElement("svg:line");return o.setAttribute("x1",e.rect[2]-e.lineCoordinates[0]),o.setAttribute("y1",e.rect[3]-e.lineCoordinates[1]),o.setAttribute("x2",e.rect[2]-e.lineCoordinates[2]),o.setAttribute("y2",e.rect[3]-e.lineCoordinates[3]),o.setAttribute("stroke-width",e.borderStyle.width||1),o.setAttribute("stroke","transparent"),n.appendChild(o),this.container.append(n),this._createPopup(this.container,o,e),this.container}}]),t}(g),P=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r,!0))}return l(t,e),p(t,[{key:"render",value:function(){this.container.className="squareAnnotation";var e=this.data,t=e.rect[2]-e.rect[0],r=e.rect[3]-e.rect[1],n=this.svgFactory.create(t,r),o=e.borderStyle.width,i=this.svgFactory.createElement("svg:rect");return i.setAttribute("x",o/2),i.setAttribute("y",o/2),i.setAttribute("width",t-o),i.setAttribute("height",r-o),i.setAttribute("stroke-width",o||1),i.setAttribute("stroke","transparent"),i.setAttribute("fill","none"),n.appendChild(i),this.container.append(n),this._createPopup(this.container,i,e),this.container}}]),t}(g),T=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r,!0))}return l(t,e),p(t,[{key:"render",value:function(){this.container.className="circleAnnotation";var e=this.data,t=e.rect[2]-e.rect[0],r=e.rect[3]-e.rect[1],n=this.svgFactory.create(t,r),o=e.borderStyle.width,i=this.svgFactory.createElement("svg:ellipse");return i.setAttribute("cx",t/2),i.setAttribute("cy",r/2),i.setAttribute("rx",t/2-o/2),i.setAttribute("ry",r/2-o/2),i.setAttribute("stroke-width",o||1),i.setAttribute("stroke","transparent"),i.setAttribute("fill","none"),n.appendChild(i),this.container.append(n),this._createPopup(this.container,i,e),this.container}}]),t}(g),O=function(e){function t(e){var r;h(this,t);var n=!!(e.data.hasPopup||e.data.title||e.data.contents);return(r=s(this,c(t).call(this,e,n,!0))).containerClassName="polylineAnnotation",r.svgElementName="svg:polyline",r}return l(t,e),p(t,[{key:"render",value:function(){this.container.className=this.containerClassName;var e=this.data,t=e.rect[2]-e.rect[0],r=e.rect[3]-e.rect[1],n=this.svgFactory.create(t,r),o=[],i=!0,a=!1,s=void 0;try{for(var u,c=e.vertices[Symbol.iterator]();!(i=(u=c.next()).done);i=!0){var l=u.value,f=l.x-e.rect[0],h=e.rect[3]-l.y;o.push(f+","+h)}}catch(e){a=!0,s=e}finally{try{i||null==c.return||c.return()}finally{if(a)throw s}}o=o.join(" ");var d=this.svgFactory.createElement(this.svgElementName);return d.setAttribute("points",o),d.setAttribute("stroke-width",e.borderStyle.width||1),d.setAttribute("stroke","transparent"),d.setAttribute("fill","none"),n.appendChild(d),this.container.append(n),this._createPopup(this.container,d,e),this.container}}]),t}(g),L=function(e){function t(e){var r;return h(this,t),(r=s(this,c(t).call(this,e))).containerClassName="polygonAnnotation",r.svgElementName="svg:polygon",r}return l(t,e),t}(O),I=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r,!0))}return l(t,e),p(t,[{key:"render",value:function(){return this.container.className="caretAnnotation",this.data.hasPopup||this._createPopup(this.container,null,this.data),this.container}}]),t}(g),F=function(e){function t(e){var r;h(this,t);var n=!!(e.data.hasPopup||e.data.title||e.data.contents);return(r=s(this,c(t).call(this,e,n,!0))).containerClassName="inkAnnotation",r.svgElementName="svg:polyline",r}return l(t,e),p(t,[{key:"render",value:function(){this.container.className=this.containerClassName;var e=this.data,t=e.rect[2]-e.rect[0],r=e.rect[3]-e.rect[1],n=this.svgFactory.create(t,r),o=!0,i=!1,a=void 0;try{for(var s,u=e.inkLists[Symbol.iterator]();!(o=(s=u.next()).done);o=!0){var c=s.value,l=[],f=!0,h=!1,d=void 0;try{for(var p,v=c[Symbol.iterator]();!(f=(p=v.next()).done);f=!0){var g=p.value,y=g.x-e.rect[0],m=e.rect[3]-g.y;l.push("".concat(y,",").concat(m))}}catch(e){h=!0,d=e}finally{try{f||null==v.return||v.return()}finally{if(h)throw d}}l=l.join(" ");var b=this.svgFactory.createElement(this.svgElementName);b.setAttribute("points",l),b.setAttribute("stroke-width",e.borderStyle.width||1),b.setAttribute("stroke","transparent"),b.setAttribute("fill","none"),this._createPopup(this.container,b,e),n.appendChild(b)}}catch(e){i=!0,a=e}finally{try{o||null==u.return||u.return()}finally{if(i)throw a}}return this.container.append(n),this.container}}]),t}(g),j=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r,!0))}return l(t,e),p(t,[{key:"render",value:function(){return this.container.className="highlightAnnotation",this.data.hasPopup||this._createPopup(this.container,null,this.data),this.container}}]),t}(g),D=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r,!0))}return l(t,e),p(t,[{key:"render",value:function(){return this.container.className="underlineAnnotation",this.data.hasPopup||this._createPopup(this.container,null,this.data),this.container}}]),t}(g),M=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r,!0))}return l(t,e),p(t,[{key:"render",value:function(){return this.container.className="squigglyAnnotation",this.data.hasPopup||this._createPopup(this.container,null,this.data),this.container}}]),t}(g),N=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r,!0))}return l(t,e),p(t,[{key:"render",value:function(){return this.container.className="strikeoutAnnotation",this.data.hasPopup||this._createPopup(this.container,null,this.data),this.container}}]),t}(g),U=function(e){function t(e){h(this,t);var r=!!(e.data.hasPopup||e.data.title||e.data.contents);return s(this,c(t).call(this,e,r,!0))}return l(t,e),p(t,[{key:"render",value:function(){return this.container.className="stampAnnotation",this.data.hasPopup||this._createPopup(this.container,null,this.data),this.container}}]),t}(g),q=function(e){function t(e){var r;h(this,t);var i=(r=s(this,c(t).call(this,e,!0))).data.file,a=i.filename,l=i.content;return r.filename=(0,n.getFilenameFromUrl)(a),r.content=l,r.linkService.eventBus&&r.linkService.eventBus.dispatch("fileattachmentannotation",{source:u(r),id:(0,o.stringToPDFString)(a),filename:a,content:l}),r}return l(t,e),p(t,[{key:"render",value:function(){this.container.className="fileAttachmentAnnotation";var e=document.createElement("div");return e.style.height=this.container.style.height,e.style.width=this.container.style.width,e.addEventListener("dblclick",this._download.bind(this)),this.data.hasPopup||!this.data.title&&!this.data.contents||this._createPopup(this.container,e,this.data),this.container.appendChild(e),this.container}},{key:"_download",value:function(){this.downloadManager?this.downloadManager.downloadData(this.content,this.filename,""):(0,o.warn)("Download cannot be started due to unavailable download manager")}}]),t}(g),B=function(){function e(){h(this,e)}return p(e,null,[{key:"render",value:function(e){var t=[],r=[],i=!0,a=!1,s=void 0;try{for(var u,c=e.annotations[Symbol.iterator]();!(i=(u=c.next()).done);i=!0){var l=u.value;l&&(l.annotationType!==o.AnnotationType.POPUP?t.push(l):r.push(l))}}catch(e){a=!0,s=e}finally{try{i||null==c.return||c.return()}finally{if(a)throw s}}r.length&&t.push.apply(t,r);for(var f=0,h=t;f<h.length;f++){var d=h[f],p=v.create({data:d,layer:e.div,page:e.page,viewport:e.viewport,linkService:e.linkService,downloadManager:e.downloadManager,imageResourcesPath:e.imageResourcesPath||"",renderInteractiveForms:e.renderInteractiveForms||!1,svgFactory:new n.DOMSVGFactory});p.isRenderable&&e.div.appendChild(p.render())}}},{key:"update",value:function(e){var t=!0,r=!1,n=void 0;try{for(var o,i=e.annotations[Symbol.iterator]();!(t=(o=i.next()).done);t=!0){var a=o.value,s=e.div.querySelector('[data-annotation-id="'.concat(a.id,'"]'));s&&(s.style.transform="matrix(".concat(e.viewport.transform.join(","),")"))}}catch(e){r=!0,n=e}finally{try{t||null==i.return||i.return()}finally{if(r)throw n}}e.div.removeAttribute("hidden")}}]),e}();t.AnnotationLayer=B},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SVGGraphics=void 0;var n=r(1),o=r(194),i=r(48);function a(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function s(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],n=!0,o=!1,i=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return r}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function u(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function l(e,t,r){return t&&c(e.prototype,t),r&&c(e,r),e}var f=function(){throw new Error("Not implemented: SVGGraphics")};t.SVGGraphics=f;var h=function(e){if(Number.isInteger(e))return e.toString();var t=e.toFixed(10),r=t.length-1;if("0"!==t[r])return t;do{r--}while("0"===t[r]);return t.substring(0,"."===t[r]?r:r+1)},d=function(e){if(0===e[4]&&0===e[5]){if(0===e[1]&&0===e[2])return 1===e[0]&&1===e[3]?"":"scale(".concat(h(e[0])," ").concat(h(e[3]),")");if(e[0]===e[3]&&e[1]===-e[2]){var t=180*Math.acos(e[0])/Math.PI;return"rotate(".concat(h(t),")")}}else if(1===e[0]&&0===e[1]&&0===e[2]&&1===e[3])return"translate(".concat(h(e[4])," ").concat(h(e[5]),")");return"matrix(".concat(h(e[0])," ").concat(h(e[1])," ").concat(h(e[2])," ").concat(h(e[3])," ").concat(h(e[4])," ")+"".concat(h(e[5]),")")},p={fontStyle:"normal",fontWeight:"normal",fillColor:"#000000"},v="http://www.w3.org/1999/xlink",g=["butt","round","square"],y=["miter","round","bevel"],m=function(){for(var e=new Uint8Array([137,80,78,71,13,10,26,10]),t=new Int32Array(256),r=0;r<256;r++){for(var o=r,a=0;a<8;a++)o=1&o?3988292384^o>>1&2147483647:o>>1&2147483647;t[r]=o}function s(e,r,n,o){var i=o,a=r.length;n[i]=a>>24&255,n[i+1]=a>>16&255,n[i+2]=a>>8&255,n[i+3]=255&a,n[i+=4]=255&e.charCodeAt(0),n[i+1]=255&e.charCodeAt(1),n[i+2]=255&e.charCodeAt(2),n[i+3]=255&e.charCodeAt(3),i+=4,n.set(r,i);var s=function(e,r,n){for(var o=-1,i=r;i<n;i++){var a=255&(o^e[i]);o=o>>>8^t[a]}return-1^o}(n,o+4,i+=r.length);n[i]=s>>24&255,n[i+1]=s>>16&255,n[i+2]=s>>8&255,n[i+3]=255&s}function u(e){var t=e.length,r=Math.ceil(t/65535),n=new Uint8Array(2+t+5*r+4),o=0;n[o++]=120,n[o++]=156;for(var i=0;t>65535;)n[o++]=0,n[o++]=255,n[o++]=255,n[o++]=0,n[o++]=0,n.set(e.subarray(i,i+65535),o),o+=65535,i+=65535,t-=65535;n[o++]=1,n[o++]=255&t,n[o++]=t>>8&255,n[o++]=255&~t,n[o++]=(65535&~t)>>8&255,n.set(e.subarray(i),o),o+=e.length-i;var a=function(e,t,r){for(var n=1,o=0,i=t;i<r;++i)o=(o+(n=(n+(255&e[i]))%65521))%65521;return o<<16|n}(e,0,e.length);return n[o++]=a>>24&255,n[o++]=a>>16&255,n[o++]=a>>8&255,n[o++]=255&a,n}function c(t,r,o,a){var c,l,f,h=t.width,d=t.height,p=t.data;switch(r){case n.ImageKind.GRAYSCALE_1BPP:l=0,c=1,f=h+7>>3;break;case n.ImageKind.RGB_24BPP:l=2,c=8,f=3*h;break;case n.ImageKind.RGBA_32BPP:l=6,c=8,f=4*h;break;default:throw new Error("invalid format")}for(var v=new Uint8Array((1+f)*d),g=0,y=0,m=0;m<d;++m)v[g++]=0,v.set(p.subarray(y,y+f),g),y+=f,g+=f;if(r===n.ImageKind.GRAYSCALE_1BPP&&a){g=0;for(var b=0;b<d;b++){g++;for(var _=0;_<f;_++)v[g++]^=255}}var w=new Uint8Array([h>>24&255,h>>16&255,h>>8&255,255&h,d>>24&255,d>>16&255,d>>8&255,255&d,c,l,0,0,0]),A=function(e){if(!i.isNodeJS)return u(e);try{var t;t=parseInt(process.versions.node)>=8?e:Buffer.from(e);var r=__webpack_require__(17).deflateSync(t,{level:9});return r instanceof Uint8Array?r:new Uint8Array(r)}catch(e){(0,n.warn)("Not compressing PNG because zlib.deflateSync is unavailable: "+e)}return u(e)}(v),S=e.length+36+w.length+A.length,k=new Uint8Array(S),x=0;return k.set(e,x),s("IHDR",w,k,x+=e.length),s("IDATA",A,k,x+=12+w.length),x+=12+A.length,s("IEND",new Uint8Array(0),k,x),(0,n.createObjectURL)(k,"image/png",o)}return function(e,t,r){return c(e,void 0===e.kind?n.ImageKind.GRAYSCALE_1BPP:e.kind,t,r)}}(),b=function(){function e(){u(this,e),this.fontSizeScale=1,this.fontWeight=p.fontWeight,this.fontSize=0,this.textMatrix=n.IDENTITY_MATRIX,this.fontMatrix=n.FONT_IDENTITY_MATRIX,this.leading=0,this.textRenderingMode=n.TextRenderingMode.FILL,this.textMatrixScale=1,this.x=0,this.y=0,this.lineX=0,this.lineY=0,this.charSpacing=0,this.wordSpacing=0,this.textHScale=1,this.textRise=0,this.fillColor=p.fillColor,this.strokeColor="#000000",this.fillAlpha=1,this.strokeAlpha=1,this.lineWidth=1,this.lineJoin="",this.lineCap="",this.miterLimit=0,this.dashArray=[],this.dashPhase=0,this.dependencies=[],this.activeClipUrl=null,this.clipGroup=null,this.maskId=""}return l(e,[{key:"clone",value:function(){return Object.create(this)}},{key:"setCurrentPoint",value:function(e,t){this.x=e,this.y=t}}]),e}(),_=0,w=0,A=0;t.SVGGraphics=f=function(){function e(t,r,i){for(var a in u(this,e),this.svgFactory=new o.DOMSVGFactory,this.current=new b,this.transformMatrix=n.IDENTITY_MATRIX,this.transformStack=[],this.extraStack=[],this.commonObjs=t,this.objs=r,this.pendingClip=null,this.pendingEOFill=!1,this.embedFonts=!1,this.embeddedFonts=Object.create(null),this.cssStyle=null,this.forceDataSchema=!!i,this._operatorIdMapping=[],n.OPS)this._operatorIdMapping[n.OPS[a]]=a}return l(e,[{key:"save",value:function(){this.transformStack.push(this.transformMatrix);var e=this.current;this.extraStack.push(e),this.current=e.clone()}},{key:"restore",value:function(){this.transformMatrix=this.transformStack.pop(),this.current=this.extraStack.pop(),this.pendingClip=null,this.tgrp=null}},{key:"group",value:function(e){this.save(),this.executeOpTree(e),this.restore()}},{key:"loadDependencies",value:function(e){for(var t=this,r=e.fnArray,o=e.argsArray,i=0,a=r.length;i<a;i++)if(r[i]===n.OPS.dependency){var s=!0,u=!1,c=void 0;try{for(var l,f=function(){var e=l.value,r=e.startsWith("g_")?t.commonObjs:t.objs,n=new Promise((function(t){r.get(e,t)}));t.current.dependencies.push(n)},h=o[i][Symbol.iterator]();!(s=(l=h.next()).done);s=!0)f()}catch(e){u=!0,c=e}finally{try{s||null==h.return||h.return()}finally{if(u)throw c}}}return Promise.all(this.current.dependencies)}},{key:"transform",value:function(e,t,r,o,i,a){var s=[e,t,r,o,i,a];this.transformMatrix=n.Util.transform(this.transformMatrix,s),this.tgrp=null}},{key:"getSVG",value:function(e,t){var r=this;this.viewport=t;var o=this._initialize(t);return this.loadDependencies(e).then((function(){return r.transformMatrix=n.IDENTITY_MATRIX,r.executeOpTree(r.convertOpList(e)),o}))}},{key:"convertOpList",value:function(e){for(var t=this._operatorIdMapping,r=e.argsArray,n=e.fnArray,o=[],i=0,a=n.length;i<a;i++){var s=n[i];o.push({fnId:s,fn:t[s],args:r[i]})}return function(e){var t=[],r=[],n=!0,o=!1,i=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done);n=!0){var u=a.value;"save"!==u.fn?"restore"===u.fn?t=r.pop():t.push(u):(t.push({fnId:92,fn:"group",items:[]}),r.push(t),t=t[t.length-1].items)}}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return t}(o)}},{key:"executeOpTree",value:function(e){var t=!0,r=!1,o=void 0;try{for(var i,a=e[Symbol.iterator]();!(t=(i=a.next()).done);t=!0){var s=i.value,u=s.fn,c=s.fnId,l=s.args;switch(0|c){case n.OPS.beginText:this.beginText();break;case n.OPS.dependency:break;case n.OPS.setLeading:this.setLeading(l);break;case n.OPS.setLeadingMoveText:this.setLeadingMoveText(l[0],l[1]);break;case n.OPS.setFont:this.setFont(l);break;case n.OPS.showText:case n.OPS.showSpacedText:this.showText(l[0]);break;case n.OPS.endText:this.endText();break;case n.OPS.moveText:this.moveText(l[0],l[1]);break;case n.OPS.setCharSpacing:this.setCharSpacing(l[0]);break;case n.OPS.setWordSpacing:this.setWordSpacing(l[0]);break;case n.OPS.setHScale:this.setHScale(l[0]);break;case n.OPS.setTextMatrix:this.setTextMatrix(l[0],l[1],l[2],l[3],l[4],l[5]);break;case n.OPS.setTextRise:this.setTextRise(l[0]);break;case n.OPS.setTextRenderingMode:this.setTextRenderingMode(l[0]);break;case n.OPS.setLineWidth:this.setLineWidth(l[0]);break;case n.OPS.setLineJoin:this.setLineJoin(l[0]);break;case n.OPS.setLineCap:this.setLineCap(l[0]);break;case n.OPS.setMiterLimit:this.setMiterLimit(l[0]);break;case n.OPS.setFillRGBColor:this.setFillRGBColor(l[0],l[1],l[2]);break;case n.OPS.setStrokeRGBColor:this.setStrokeRGBColor(l[0],l[1],l[2]);break;case n.OPS.setStrokeColorN:this.setStrokeColorN(l);break;case n.OPS.setFillColorN:this.setFillColorN(l);break;case n.OPS.shadingFill:this.shadingFill(l[0]);break;case n.OPS.setDash:this.setDash(l[0],l[1]);break;case n.OPS.setRenderingIntent:this.setRenderingIntent(l[0]);break;case n.OPS.setFlatness:this.setFlatness(l[0]);break;case n.OPS.setGState:this.setGState(l[0]);break;case n.OPS.fill:this.fill();break;case n.OPS.eoFill:this.eoFill();break;case n.OPS.stroke:this.stroke();break;case n.OPS.fillStroke:this.fillStroke();break;case n.OPS.eoFillStroke:this.eoFillStroke();break;case n.OPS.clip:this.clip("nonzero");break;case n.OPS.eoClip:this.clip("evenodd");break;case n.OPS.paintSolidColorImageMask:this.paintSolidColorImageMask();break;case n.OPS.paintJpegXObject:this.paintJpegXObject(l[0],l[1],l[2]);break;case n.OPS.paintImageXObject:this.paintImageXObject(l[0]);break;case n.OPS.paintInlineImageXObject:this.paintInlineImageXObject(l[0]);break;case n.OPS.paintImageMaskXObject:this.paintImageMaskXObject(l[0]);break;case n.OPS.paintFormXObjectBegin:this.paintFormXObjectBegin(l[0],l[1]);break;case n.OPS.paintFormXObjectEnd:this.paintFormXObjectEnd();break;case n.OPS.closePath:this.closePath();break;case n.OPS.closeStroke:this.closeStroke();break;case n.OPS.closeFillStroke:this.closeFillStroke();break;case n.OPS.closeEOFillStroke:this.closeEOFillStroke();break;case n.OPS.nextLine:this.nextLine();break;case n.OPS.transform:this.transform(l[0],l[1],l[2],l[3],l[4],l[5]);break;case n.OPS.constructPath:this.constructPath(l[0],l[1]);break;case n.OPS.endPath:this.endPath();break;case 92:this.group(s.items);break;default:(0,n.warn)("Unimplemented operator ".concat(u))}}}catch(e){r=!0,o=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw o}}}},{key:"setWordSpacing",value:function(e){this.current.wordSpacing=e}},{key:"setCharSpacing",value:function(e){this.current.charSpacing=e}},{key:"nextLine",value:function(){this.moveText(0,this.current.leading)}},{key:"setTextMatrix",value:function(e,t,r,n,o,i){var a=this.current;a.textMatrix=a.lineMatrix=[e,t,r,n,o,i],a.textMatrixScale=Math.sqrt(e*e+t*t),a.x=a.lineX=0,a.y=a.lineY=0,a.xcoords=[],a.tspan=this.svgFactory.createElement("svg:tspan"),a.tspan.setAttributeNS(null,"font-family",a.fontFamily),a.tspan.setAttributeNS(null,"font-size","".concat(h(a.fontSize),"px")),a.tspan.setAttributeNS(null,"y",h(-a.y)),a.txtElement=this.svgFactory.createElement("svg:text"),a.txtElement.appendChild(a.tspan)}},{key:"beginText",value:function(){var e=this.current;e.x=e.lineX=0,e.y=e.lineY=0,e.textMatrix=n.IDENTITY_MATRIX,e.lineMatrix=n.IDENTITY_MATRIX,e.textMatrixScale=1,e.tspan=this.svgFactory.createElement("svg:tspan"),e.txtElement=this.svgFactory.createElement("svg:text"),e.txtgrp=this.svgFactory.createElement("svg:g"),e.xcoords=[]}},{key:"moveText",value:function(e,t){var r=this.current;r.x=r.lineX+=e,r.y=r.lineY+=t,r.xcoords=[],r.tspan=this.svgFactory.createElement("svg:tspan"),r.tspan.setAttributeNS(null,"font-family",r.fontFamily),r.tspan.setAttributeNS(null,"font-size","".concat(h(r.fontSize),"px")),r.tspan.setAttributeNS(null,"y",h(-r.y))}},{key:"showText",value:function(e){var t=this.current,r=t.font,o=t.fontSize;if(0!==o){var i=t.charSpacing,a=t.wordSpacing,s=t.fontDirection,u=t.textHScale*s,c=r.vertical,l=o*t.fontMatrix[0],f=0,v=!0,g=!1,y=void 0;try{for(var m,b=e[Symbol.iterator]();!(v=(m=b.next()).done);v=!0){var _=m.value;if(null!==_)if((0,n.isNum)(_))f+=-_*o*.001;else{var w=_.width,A=_.fontChar,S=w*l+((_.isSpace?a:0)+i)*s;_.isInFont||r.missingFile?(t.xcoords.push(t.x+f),t.tspan.textContent+=A,f+=S):f+=S}else f+=s*a}}catch(e){g=!0,y=e}finally{try{v||null==b.return||b.return()}finally{if(g)throw y}}c?t.y-=f*u:t.x+=f*u,t.tspan.setAttributeNS(null,"x",t.xcoords.map(h).join(" ")),t.tspan.setAttributeNS(null,"y",h(-t.y)),t.tspan.setAttributeNS(null,"font-family",t.fontFamily),t.tspan.setAttributeNS(null,"font-size","".concat(h(t.fontSize),"px")),t.fontStyle!==p.fontStyle&&t.tspan.setAttributeNS(null,"font-style",t.fontStyle),t.fontWeight!==p.fontWeight&&t.tspan.setAttributeNS(null,"font-weight",t.fontWeight);var k=t.textRenderingMode&n.TextRenderingMode.FILL_STROKE_MASK;if(k===n.TextRenderingMode.FILL||k===n.TextRenderingMode.FILL_STROKE?(t.fillColor!==p.fillColor&&t.tspan.setAttributeNS(null,"fill",t.fillColor),t.fillAlpha<1&&t.tspan.setAttributeNS(null,"fill-opacity",t.fillAlpha)):t.textRenderingMode===n.TextRenderingMode.ADD_TO_PATH?t.tspan.setAttributeNS(null,"fill","transparent"):t.tspan.setAttributeNS(null,"fill","none"),k===n.TextRenderingMode.STROKE||k===n.TextRenderingMode.FILL_STROKE){var x=1/(t.textMatrixScale||1);this._setStrokeAttributes(t.tspan,x)}var R=t.textMatrix;0!==t.textRise&&((R=R.slice())[5]+=t.textRise),t.txtElement.setAttributeNS(null,"transform","".concat(d(R)," scale(").concat(h(u),", -1)")),t.txtElement.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),t.txtElement.appendChild(t.tspan),t.txtgrp.appendChild(t.txtElement),this._ensureTransformGroup().appendChild(t.txtElement)}}},{key:"setLeadingMoveText",value:function(e,t){this.setLeading(-t),this.moveText(e,t)}},{key:"addFontStyle",value:function(e){this.cssStyle||(this.cssStyle=this.svgFactory.createElement("svg:style"),this.cssStyle.setAttributeNS(null,"type","text/css"),this.defs.appendChild(this.cssStyle));var t=(0,n.createObjectURL)(e.data,e.mimetype,this.forceDataSchema);this.cssStyle.textContent+='@font-face { font-family: "'.concat(e.loadedName,'";')+" src: url(".concat(t,"); }\n")}},{key:"setFont",value:function(e){var t=this.current,r=this.commonObjs.get(e[0]),o=e[1];t.font=r,this.embedFonts&&r.data&&!this.embeddedFonts[r.loadedName]&&(this.addFontStyle(r),this.embeddedFonts[r.loadedName]=r),t.fontMatrix=r.fontMatrix?r.fontMatrix:n.FONT_IDENTITY_MATRIX;var i="normal";r.black?i="900":r.bold&&(i="bold");var a=r.italic?"italic":"normal";o<0?(o=-o,t.fontDirection=-1):t.fontDirection=1,t.fontSize=o,t.fontFamily=r.loadedName,t.fontWeight=i,t.fontStyle=a,t.tspan=this.svgFactory.createElement("svg:tspan"),t.tspan.setAttributeNS(null,"y",h(-t.y)),t.xcoords=[]}},{key:"endText",value:function(){var e=this.current;e.textRenderingMode&n.TextRenderingMode.ADD_TO_PATH_FLAG&&e.txtElement&&e.txtElement.hasChildNodes()&&(e.element=e.txtElement,this.clip("nonzero"),this.endPath())}},{key:"setLineWidth",value:function(e){e>0&&(this.current.lineWidth=e)}},{key:"setLineCap",value:function(e){this.current.lineCap=g[e]}},{key:"setLineJoin",value:function(e){this.current.lineJoin=y[e]}},{key:"setMiterLimit",value:function(e){this.current.miterLimit=e}},{key:"setStrokeAlpha",value:function(e){this.current.strokeAlpha=e}},{key:"setStrokeRGBColor",value:function(e,t,r){this.current.strokeColor=n.Util.makeCssRgb(e,t,r)}},{key:"setFillAlpha",value:function(e){this.current.fillAlpha=e}},{key:"setFillRGBColor",value:function(e,t,r){this.current.fillColor=n.Util.makeCssRgb(e,t,r),this.current.tspan=this.svgFactory.createElement("svg:tspan"),this.current.xcoords=[]}},{key:"setStrokeColorN",value:function(e){this.current.strokeColor=this._makeColorN_Pattern(e)}},{key:"setFillColorN",value:function(e){this.current.fillColor=this._makeColorN_Pattern(e)}},{key:"shadingFill",value:function(e){var t=this.viewport.width,r=this.viewport.height,o=n.Util.inverseTransform(this.transformMatrix),i=n.Util.applyTransform([0,0],o),a=n.Util.applyTransform([0,r],o),s=n.Util.applyTransform([t,0],o),u=n.Util.applyTransform([t,r],o),c=Math.min(i[0],a[0],s[0],u[0]),l=Math.min(i[1],a[1],s[1],u[1]),f=Math.max(i[0],a[0],s[0],u[0]),h=Math.max(i[1],a[1],s[1],u[1]),d=this.svgFactory.createElement("svg:rect");d.setAttributeNS(null,"x",c),d.setAttributeNS(null,"y",l),d.setAttributeNS(null,"width",f-c),d.setAttributeNS(null,"height",h-l),d.setAttributeNS(null,"fill",this._makeShadingPattern(e)),this._ensureTransformGroup().appendChild(d)}},{key:"_makeColorN_Pattern",value:function(e){return"TilingPattern"===e[0]?this._makeTilingPattern(e):this._makeShadingPattern(e)}},{key:"_makeTilingPattern",value:function(e){var t=e[1],r=e[2],o=e[3]||n.IDENTITY_MATRIX,i=s(e[4],4),u=i[0],c=i[1],l=i[2],f=i[3],h=e[5],d=e[6],p=e[7],v="shading".concat(A++),g=s(n.Util.applyTransform([u,c],o),2),y=g[0],m=g[1],b=s(n.Util.applyTransform([l,f],o),2),_=b[0],w=b[1],S=s(n.Util.singularValueDecompose2dScale(o),2),k=h*S[0],x=d*S[1],R=this.svgFactory.createElement("svg:pattern");R.setAttributeNS(null,"id",v),R.setAttributeNS(null,"patternUnits","userSpaceOnUse"),R.setAttributeNS(null,"width",k),R.setAttributeNS(null,"height",x),R.setAttributeNS(null,"x","".concat(y)),R.setAttributeNS(null,"y","".concat(m));var E=this.svg,C=this.transformMatrix,P=this.current.fillColor,T=this.current.strokeColor,O=this.svgFactory.create(_-y,w-m);if(this.svg=O,this.transformMatrix=o,2===p){var L=n.Util.makeCssRgb.apply(n.Util,a(t));this.current.fillColor=L,this.current.strokeColor=L}return this.executeOpTree(this.convertOpList(r)),this.svg=E,this.transformMatrix=C,this.current.fillColor=P,this.current.strokeColor=T,R.appendChild(O.childNodes[0]),this.defs.appendChild(R),"url(#".concat(v,")")}},{key:"_makeShadingPattern",value:function(e){switch(e[0]){case"RadialAxial":var t,r="shading".concat(A++),o=e[3];switch(e[1]){case"axial":var i=e[4],a=e[5];(t=this.svgFactory.createElement("svg:linearGradient")).setAttributeNS(null,"id",r),t.setAttributeNS(null,"gradientUnits","userSpaceOnUse"),t.setAttributeNS(null,"x1",i[0]),t.setAttributeNS(null,"y1",i[1]),t.setAttributeNS(null,"x2",a[0]),t.setAttributeNS(null,"y2",a[1]);break;case"radial":var s=e[4],u=e[5],c=e[6],l=e[7];(t=this.svgFactory.createElement("svg:radialGradient")).setAttributeNS(null,"id",r),t.setAttributeNS(null,"gradientUnits","userSpaceOnUse"),t.setAttributeNS(null,"cx",u[0]),t.setAttributeNS(null,"cy",u[1]),t.setAttributeNS(null,"r",l),t.setAttributeNS(null,"fx",s[0]),t.setAttributeNS(null,"fy",s[1]),t.setAttributeNS(null,"fr",c);break;default:throw new Error("Unknown RadialAxial type: ".concat(e[1]))}var f=!0,h=!1,d=void 0;try{for(var p,v=o[Symbol.iterator]();!(f=(p=v.next()).done);f=!0){var g=p.value,y=this.svgFactory.createElement("svg:stop");y.setAttributeNS(null,"offset",g[0]),y.setAttributeNS(null,"stop-color",g[1]),t.appendChild(y)}}catch(e){h=!0,d=e}finally{try{f||null==v.return||v.return()}finally{if(h)throw d}}return this.defs.appendChild(t),"url(#".concat(r,")");case"Mesh":return(0,n.warn)("Unimplemented pattern Mesh"),null;case"Dummy":return"hotpink";default:throw new Error("Unknown IR type: ".concat(e[0]))}}},{key:"setDash",value:function(e,t){this.current.dashArray=e,this.current.dashPhase=t}},{key:"constructPath",value:function(e,t){var r=this.current,o=r.x,i=r.y,a=[],s=0,u=!0,c=!1,l=void 0;try{for(var f,d=e[Symbol.iterator]();!(u=(f=d.next()).done);u=!0)switch(0|f.value){case n.OPS.rectangle:o=t[s++],i=t[s++];var p=t[s++],v=t[s++],g=o+p,y=i+v;a.push("M",h(o),h(i),"L",h(g),h(i),"L",h(g),h(y),"L",h(o),h(y),"Z");break;case n.OPS.moveTo:o=t[s++],i=t[s++],a.push("M",h(o),h(i));break;case n.OPS.lineTo:o=t[s++],i=t[s++],a.push("L",h(o),h(i));break;case n.OPS.curveTo:o=t[s+4],i=t[s+5],a.push("C",h(t[s]),h(t[s+1]),h(t[s+2]),h(t[s+3]),h(o),h(i)),s+=6;break;case n.OPS.curveTo2:a.push("C",h(o),h(i),h(t[s]),h(t[s+1]),h(t[s+2]),h(t[s+3])),o=t[s+2],i=t[s+3],s+=4;break;case n.OPS.curveTo3:o=t[s+2],i=t[s+3],a.push("C",h(t[s]),h(t[s+1]),h(o),h(i),h(o),h(i)),s+=4;break;case n.OPS.closePath:a.push("Z")}}catch(e){c=!0,l=e}finally{try{u||null==d.return||d.return()}finally{if(c)throw l}}a=a.join(" "),r.path&&e.length>0&&e[0]!==n.OPS.rectangle&&e[0]!==n.OPS.moveTo?a=r.path.getAttributeNS(null,"d")+a:(r.path=this.svgFactory.createElement("svg:path"),this._ensureTransformGroup().appendChild(r.path)),r.path.setAttributeNS(null,"d",a),r.path.setAttributeNS(null,"fill","none"),r.element=r.path,r.setCurrentPoint(o,i)}},{key:"endPath",value:function(){var e=this.current;if(e.path=null,this.pendingClip)if(e.element){var t="clippath".concat(_++),r=this.svgFactory.createElement("svg:clipPath");r.setAttributeNS(null,"id",t),r.setAttributeNS(null,"transform",d(this.transformMatrix));var n=e.element.cloneNode(!0);"evenodd"===this.pendingClip?n.setAttributeNS(null,"clip-rule","evenodd"):n.setAttributeNS(null,"clip-rule","nonzero"),this.pendingClip=null,r.appendChild(n),this.defs.appendChild(r),e.activeClipUrl&&(e.clipGroup=null,this.extraStack.forEach((function(e){e.clipGroup=null})),r.setAttributeNS(null,"clip-path",e.activeClipUrl)),e.activeClipUrl="url(#".concat(t,")"),this.tgrp=null}else this.pendingClip=null}},{key:"clip",value:function(e){this.pendingClip=e}},{key:"closePath",value:function(){var e=this.current;if(e.path){var t="".concat(e.path.getAttributeNS(null,"d"),"Z");e.path.setAttributeNS(null,"d",t)}}},{key:"setLeading",value:function(e){this.current.leading=-e}},{key:"setTextRise",value:function(e){this.current.textRise=e}},{key:"setTextRenderingMode",value:function(e){this.current.textRenderingMode=e}},{key:"setHScale",value:function(e){this.current.textHScale=e/100}},{key:"setRenderingIntent",value:function(e){}},{key:"setFlatness",value:function(e){}},{key:"setGState",value:function(e){var t=!0,r=!1,o=void 0;try{for(var i,a=e[Symbol.iterator]();!(t=(i=a.next()).done);t=!0){var u=s(i.value,2),c=u[0],l=u[1];switch(c){case"LW":this.setLineWidth(l);break;case"LC":this.setLineCap(l);break;case"LJ":this.setLineJoin(l);break;case"ML":this.setMiterLimit(l);break;case"D":this.setDash(l[0],l[1]);break;case"RI":this.setRenderingIntent(l);break;case"FL":this.setFlatness(l);break;case"Font":this.setFont(l);break;case"CA":this.setStrokeAlpha(l);break;case"ca":this.setFillAlpha(l);break;default:(0,n.warn)("Unimplemented graphic state operator ".concat(c))}}}catch(e){r=!0,o=e}finally{try{t||null==a.return||a.return()}finally{if(r)throw o}}}},{key:"fill",value:function(){var e=this.current;e.element&&(e.element.setAttributeNS(null,"fill",e.fillColor),e.element.setAttributeNS(null,"fill-opacity",e.fillAlpha),this.endPath())}},{key:"stroke",value:function(){var e=this.current;e.element&&(this._setStrokeAttributes(e.element),e.element.setAttributeNS(null,"fill","none"),this.endPath())}},{key:"_setStrokeAttributes",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=this.current,n=r.dashArray;1!==t&&n.length>0&&(n=n.map((function(e){return t*e}))),e.setAttributeNS(null,"stroke",r.strokeColor),e.setAttributeNS(null,"stroke-opacity",r.strokeAlpha),e.setAttributeNS(null,"stroke-miterlimit",h(r.miterLimit)),e.setAttributeNS(null,"stroke-linecap",r.lineCap),e.setAttributeNS(null,"stroke-linejoin",r.lineJoin),e.setAttributeNS(null,"stroke-width",h(t*r.lineWidth)+"px"),e.setAttributeNS(null,"stroke-dasharray",n.map(h).join(" ")),e.setAttributeNS(null,"stroke-dashoffset",h(t*r.dashPhase)+"px")}},{key:"eoFill",value:function(){this.current.element&&this.current.element.setAttributeNS(null,"fill-rule","evenodd"),this.fill()}},{key:"fillStroke",value:function(){this.stroke(),this.fill()}},{key:"eoFillStroke",value:function(){this.current.element&&this.current.element.setAttributeNS(null,"fill-rule","evenodd"),this.fillStroke()}},{key:"closeStroke",value:function(){this.closePath(),this.stroke()}},{key:"closeFillStroke",value:function(){this.closePath(),this.fillStroke()}},{key:"closeEOFillStroke",value:function(){this.closePath(),this.eoFillStroke()}},{key:"paintSolidColorImageMask",value:function(){var e=this.svgFactory.createElement("svg:rect");e.setAttributeNS(null,"x","0"),e.setAttributeNS(null,"y","0"),e.setAttributeNS(null,"width","1px"),e.setAttributeNS(null,"height","1px"),e.setAttributeNS(null,"fill",this.current.fillColor),this._ensureTransformGroup().appendChild(e)}},{key:"paintJpegXObject",value:function(e,t,r){var n=this.objs.get(e),o=this.svgFactory.createElement("svg:image");o.setAttributeNS(v,"xlink:href",n.src),o.setAttributeNS(null,"width",h(t)),o.setAttributeNS(null,"height",h(r)),o.setAttributeNS(null,"x","0"),o.setAttributeNS(null,"y",h(-r)),o.setAttributeNS(null,"transform","scale(".concat(h(1/t)," ").concat(h(-1/r),")")),this._ensureTransformGroup().appendChild(o)}},{key:"paintImageXObject",value:function(e){var t=this.objs.get(e);t?this.paintInlineImageXObject(t):(0,n.warn)("Dependent image with object ID ".concat(e," is not ready yet"))}},{key:"paintInlineImageXObject",value:function(e,t){var r=e.width,n=e.height,o=m(e,this.forceDataSchema,!!t),i=this.svgFactory.createElement("svg:rect");i.setAttributeNS(null,"x","0"),i.setAttributeNS(null,"y","0"),i.setAttributeNS(null,"width",h(r)),i.setAttributeNS(null,"height",h(n)),this.current.element=i,this.clip("nonzero");var a=this.svgFactory.createElement("svg:image");a.setAttributeNS(v,"xlink:href",o),a.setAttributeNS(null,"x","0"),a.setAttributeNS(null,"y",h(-n)),a.setAttributeNS(null,"width",h(r)+"px"),a.setAttributeNS(null,"height",h(n)+"px"),a.setAttributeNS(null,"transform","scale(".concat(h(1/r)," ").concat(h(-1/n),")")),t?t.appendChild(a):this._ensureTransformGroup().appendChild(a)}},{key:"paintImageMaskXObject",value:function(e){var t=this.current,r=e.width,n=e.height,o=t.fillColor;t.maskId="mask".concat(w++);var i=this.svgFactory.createElement("svg:mask");i.setAttributeNS(null,"id",t.maskId);var a=this.svgFactory.createElement("svg:rect");a.setAttributeNS(null,"x","0"),a.setAttributeNS(null,"y","0"),a.setAttributeNS(null,"width",h(r)),a.setAttributeNS(null,"height",h(n)),a.setAttributeNS(null,"fill",o),a.setAttributeNS(null,"mask","url(#".concat(t.maskId,")")),this.defs.appendChild(i),this._ensureTransformGroup().appendChild(a),this.paintInlineImageXObject(e,i)}},{key:"paintFormXObjectBegin",value:function(e,t){if(Array.isArray(e)&&6===e.length&&this.transform(e[0],e[1],e[2],e[3],e[4],e[5]),t){var r=t[2]-t[0],n=t[3]-t[1],o=this.svgFactory.createElement("svg:rect");o.setAttributeNS(null,"x",t[0]),o.setAttributeNS(null,"y",t[1]),o.setAttributeNS(null,"width",h(r)),o.setAttributeNS(null,"height",h(n)),this.current.element=o,this.clip("nonzero"),this.endPath()}}},{key:"paintFormXObjectEnd",value:function(){}},{key:"_initialize",value:function(e){var t=this.svgFactory.create(e.width,e.height),r=this.svgFactory.createElement("svg:defs");t.appendChild(r),this.defs=r;var n=this.svgFactory.createElement("svg:g");return n.setAttributeNS(null,"transform",d(e.transform)),t.appendChild(n),this.svg=n,t}},{key:"_ensureClipGroup",value:function(){if(!this.current.clipGroup){var e=this.svgFactory.createElement("svg:g");e.setAttributeNS(null,"clip-path",this.current.activeClipUrl),this.svg.appendChild(e),this.current.clipGroup=e}return this.current.clipGroup}},{key:"_ensureTransformGroup",value:function(){return this.tgrp||(this.tgrp=this.svgFactory.createElement("svg:g"),this.tgrp.setAttributeNS(null,"transform",d(this.transformMatrix)),this.current.activeClipUrl?this._ensureClipGroup().appendChild(this.tgrp):this.svg.appendChild(this.tgrp)),this.tgrp}}]),e}()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PDFNodeStream=void 0;var n,o=(n=r(191))&&n.__esModule?n:{default:n},i=r(1),a=r(209);function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function u(e,t){return!t||"object"!==s(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function l(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function h(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function d(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){h(i,n,o,a,s,"next",e)}function s(e){h(i,n,o,a,s,"throw",e)}a(void 0)}))}}function p(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function v(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function g(e,t,r){return t&&v(e.prototype,t),r&&v(e,r),e}var y=__webpack_require__(18),m=__webpack_require__(19),b=__webpack_require__(20),_=__webpack_require__(21),w=/^file:\/\/\/[a-zA-Z]:\//,A=function(){function e(t){var r,n;p(this,e),this.source=t,this.url=(r=t.url,"file:"===(n=_.parse(r)).protocol||n.host?n:/^[a-z]:[/\\]/i.test(r)?_.parse("file:///".concat(r)):(n.host||(n.protocol="file:"),n)),this.isHttp="http:"===this.url.protocol||"https:"===this.url.protocol,this.isFsUrl="file:"===this.url.protocol,this.httpHeaders=this.isHttp&&t.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}return g(e,[{key:"getFullReader",value:function(){return(0,i.assert)(!this._fullRequestReader),this._fullRequestReader=this.isFsUrl?new C(this):new R(this),this._fullRequestReader}},{key:"getRangeReader",value:function(e,t){if(t<=this._progressiveDataLength)return null;var r=this.isFsUrl?new P(this,e,t):new E(this,e,t);return this._rangeRequestReaders.push(r),r}},{key:"cancelAllRequests",value:function(e){this._fullRequestReader&&this._fullRequestReader.cancel(e),this._rangeRequestReaders.slice(0).forEach((function(t){t.cancel(e)}))}},{key:"_progressiveDataLength",get:function(){return this._fullRequestReader?this._fullRequestReader._loaded:0}}]),e}();t.PDFNodeStream=A;var S=function(){function e(t){p(this,e),this._url=t.url,this._done=!1,this._storedError=null,this.onProgress=null;var r=t.source;this._contentLength=r.length,this._loaded=0,this._filename=null,this._disableRange=r.disableRange||!1,this._rangeChunkSize=r.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._isStreamingSupported=!r.disableStream,this._isRangeSupported=!r.disableRange,this._readableStream=null,this._readCapability=(0,i.createPromiseCapability)(),this._headersCapability=(0,i.createPromiseCapability)()}var t;return g(e,[{key:"read",value:(t=d(o.default.mark((function e(){var t,r;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._readCapability.promise;case 2:if(!this._done){e.next=4;break}return e.abrupt("return",{value:void 0,done:!0});case 4:if(!this._storedError){e.next=6;break}throw this._storedError;case 6:if(null!==(t=this._readableStream.read())){e.next=10;break}return this._readCapability=(0,i.createPromiseCapability)(),e.abrupt("return",this.read());case 10:return this._loaded+=t.length,this.onProgress&&this.onProgress({loaded:this._loaded,total:this._contentLength}),r=new Uint8Array(t).buffer,e.abrupt("return",{value:r,done:!1});case 14:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"cancel",value:function(e){this._readableStream?this._readableStream.destroy(e):this._error(e)}},{key:"_error",value:function(e){this._storedError=e,this._readCapability.resolve()}},{key:"_setReadableStream",value:function(e){var t=this;this._readableStream=e,e.on("readable",(function(){t._readCapability.resolve()})),e.on("end",(function(){e.destroy(),t._done=!0,t._readCapability.resolve()})),e.on("error",(function(e){t._error(e)})),!this._isStreamingSupported&&this._isRangeSupported&&this._error(new i.AbortException("streaming is disabled")),this._storedError&&this._readableStream.destroy(this._storedError)}},{key:"headersReady",get:function(){return this._headersCapability.promise}},{key:"filename",get:function(){return this._filename}},{key:"contentLength",get:function(){return this._contentLength}},{key:"isRangeSupported",get:function(){return this._isRangeSupported}},{key:"isStreamingSupported",get:function(){return this._isStreamingSupported}}]),e}(),k=function(){function e(t){p(this,e),this._url=t.url,this._done=!1,this._storedError=null,this.onProgress=null,this._loaded=0,this._readableStream=null,this._readCapability=(0,i.createPromiseCapability)();var r=t.source;this._isStreamingSupported=!r.disableStream}var t;return g(e,[{key:"read",value:(t=d(o.default.mark((function e(){var t,r;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._readCapability.promise;case 2:if(!this._done){e.next=4;break}return e.abrupt("return",{value:void 0,done:!0});case 4:if(!this._storedError){e.next=6;break}throw this._storedError;case 6:if(null!==(t=this._readableStream.read())){e.next=10;break}return this._readCapability=(0,i.createPromiseCapability)(),e.abrupt("return",this.read());case 10:return this._loaded+=t.length,this.onProgress&&this.onProgress({loaded:this._loaded}),r=new Uint8Array(t).buffer,e.abrupt("return",{value:r,done:!1});case 14:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"cancel",value:function(e){this._readableStream?this._readableStream.destroy(e):this._error(e)}},{key:"_error",value:function(e){this._storedError=e,this._readCapability.resolve()}},{key:"_setReadableStream",value:function(e){var t=this;this._readableStream=e,e.on("readable",(function(){t._readCapability.resolve()})),e.on("end",(function(){e.destroy(),t._done=!0,t._readCapability.resolve()})),e.on("error",(function(e){t._error(e)})),this._storedError&&this._readableStream.destroy(this._storedError)}},{key:"isStreamingSupported",get:function(){return this._isStreamingSupported}}]),e}();function x(e,t){return{protocol:e.protocol,auth:e.auth,host:e.hostname,port:e.port,path:e.path,method:"GET",headers:t}}var R=function(e){function t(e){var r;p(this,t);var n=function(t){if(404===t.statusCode){var n=new i.MissingPDFException('Missing PDF "'.concat(r._url,'".'));return r._storedError=n,void r._headersCapability.reject(n)}r._headersCapability.resolve(),r._setReadableStream(t);var o=function(e){return r._readableStream.headers[e.toLowerCase()]},s=(0,a.validateRangeRequestCapabilities)({getResponseHeader:o,isHttp:e.isHttp,rangeChunkSize:r._rangeChunkSize,disableRange:r._disableRange}),u=s.allowRangeRequests,c=s.suggestedLength;r._isRangeSupported=u,r._contentLength=c||r._contentLength,r._filename=(0,a.extractFilenameFromHeader)(o)};return(r=u(this,c(t).call(this,e)))._request=null,"http:"===r._url.protocol?r._request=m.request(x(r._url,e.httpHeaders),n):r._request=b.request(x(r._url,e.httpHeaders),n),r._request.on("error",(function(e){r._storedError=e,r._headersCapability.reject(e)})),r._request.end(),r}return l(t,e),t}(S),E=function(e){function t(e,r,n){var o;for(var a in p(this,t),(o=u(this,c(t).call(this,e)))._httpHeaders={},e.httpHeaders){var s=e.httpHeaders[a];void 0!==s&&(o._httpHeaders[a]=s)}o._httpHeaders.Range="bytes=".concat(r,"-").concat(n-1);var l=function(e){if(404!==e.statusCode)o._setReadableStream(e);else{var t=new i.MissingPDFException('Missing PDF "'.concat(o._url,'".'));o._storedError=t}};return o._request=null,"http:"===o._url.protocol?o._request=m.request(x(o._url,o._httpHeaders),l):o._request=b.request(x(o._url,o._httpHeaders),l),o._request.on("error",(function(e){o._storedError=e})),o._request.end(),o}return l(t,e),t}(k),C=function(e){function t(e){var r;p(this,t),r=u(this,c(t).call(this,e));var n=decodeURIComponent(r._url.path);return w.test(r._url.href)&&(n=n.replace(/^\//,"")),y.lstat(n,(function(e,t){if(e)return"ENOENT"===e.code&&(e=new i.MissingPDFException('Missing PDF "'.concat(n,'".'))),r._storedError=e,void r._headersCapability.reject(e);r._contentLength=t.size,r._setReadableStream(y.createReadStream(n)),r._headersCapability.resolve()})),r}return l(t,e),t}(S),P=function(e){function t(e,r,n){var o;p(this,t),o=u(this,c(t).call(this,e));var i=decodeURIComponent(o._url.path);return w.test(o._url.href)&&(i=i.replace(/^\//,"")),o._setReadableStream(y.createReadStream(i,{start:r,end:n-1})),o}return l(t,e),t}(k)},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createResponseStatusError=function(e,t){return 404===e||0===e&&t.startsWith("file:")?new n.MissingPDFException('Missing PDF "'+t+'".'):new n.UnexpectedResponseException("Unexpected server response ("+e+') while retrieving PDF "'+t+'".',e)},t.extractFilenameFromHeader=function(e){var t=e("Content-Disposition");if(t){var r=(0,o.getFilenameFromContentDispositionHeader)(t);if(r.includes("%"))try{r=decodeURIComponent(r)}catch(e){}if(/\.pdf$/i.test(r))return r}return null},t.validateRangeRequestCapabilities=function(e){var t=e.getResponseHeader,r=e.isHttp,o=e.rangeChunkSize,i=e.disableRange;(0,n.assert)(o>0,"Range chunk size must be larger than zero");var a={allowRangeRequests:!1,suggestedLength:void 0},s=parseInt(t("Content-Length"),10);return Number.isInteger(s)?(a.suggestedLength=s,s<=2*o?a:i||!r?a:"bytes"!==t("Accept-Ranges")?a:"identity"!==(t("Content-Encoding")||"identity")?a:(a.allowRangeRequests=!0,a)):a},t.validateResponseStatus=function(e){return 200===e||206===e};var n=r(1),o=r(210)},function(e,t,r){"use strict";function n(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],n=!0,o=!1,i=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return r}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}Object.defineProperty(t,"__esModule",{value:!0}),t.getFilenameFromContentDispositionHeader=function(e){var t=!0,r=a("filename\\*","i").exec(e);if(r){var o=c(r=r[1]);return u(o=f(o=l(o=unescape(o))))}if(r=function(e){for(var t,r=[],o=a("filename\\*((?!0\\d)\\d+)(\\*?)","ig");null!==(t=o.exec(e));){var i=n(t,4),s=i[1],u=i[2],f=i[3];if((s=parseInt(s,10))in r){if(0===s)break}else r[s]=[u,f]}for(var h=[],d=0;d<r.length&&d in r;++d){var p=n(r[d],2),v=p[0],g=p[1];g=c(g),v&&(g=unescape(g),0===d&&(g=l(g))),h.push(g)}return h.join("")}(e))return u(f(r));if(r=a("filename","i").exec(e)){var i=c(r=r[1]);return u(i=f(i))}function a(e,t){return new RegExp("(?:^|;)\\s*"+e+'\\s*=\\s*([^";\\s][^;\\s]*|"(?:[^"\\\\]|\\\\"?)+"?)',t)}function s(e,r){if(e){if(!/^[\x00-\xFF]+$/.test(r))return r;try{var n=new TextDecoder(e,{fatal:!0}),o=Array.from(r,(function(e){return 255&e.charCodeAt(0)}));r=n.decode(new Uint8Array(o)),t=!1}catch(n){if(/^utf-?8$/i.test(e))try{r=decodeURIComponent(escape(r)),t=!1}catch(e){}}}return r}function u(e){return t&&/[\x80-\xff]/.test(e)&&(e=s("utf-8",e),t&&(e=s("iso-8859-1",e))),e}function c(e){if(e.startsWith('"')){for(var t=e.slice(1).split('\\"'),r=0;r<t.length;++r){var n=t[r].indexOf('"');-1!==n&&(t[r]=t[r].slice(0,n),t.length=r+1),t[r]=t[r].replace(/\\(.)/g,"$1")}e=t.join('"')}return e}function l(e){var t=e.indexOf("'");return-1===t?e:s(e.slice(0,t),e.slice(t+1).replace(/^[^']*'/,""))}function f(e){return!e.startsWith("=?")||/[\x00-\x19\x80-\xff]/.test(e)?e:e.replace(/=\?([\w-]*)\?([QqBb])\?((?:[^?]|\?(?!=))*)\?=/g,(function(e,t,r,n){if("q"===r||"Q"===r)return s(t,n=(n=n.replace(/_/g," ")).replace(/=([0-9a-fA-F]{2})/g,(function(e,t){return String.fromCharCode(parseInt(t,16))})));try{n=atob(n)}catch(e){}return s(t,n)}))}return""}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PDFNetworkStream=void 0;var n,o=(n=r(191))&&n.__esModule?n:{default:n},i=r(1),a=r(209);function s(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function u(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){s(i,n,o,a,u,"next",e)}function u(e){s(i,n,o,a,u,"throw",e)}a(void 0)}))}}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function f(e,t,r){return t&&l(e.prototype,t),r&&l(e,r),e}var h=function(){function e(t,r){c(this,e),this.url=t,r=r||{},this.isHttp=/^https?:/i.test(t),this.httpHeaders=this.isHttp&&r.httpHeaders||{},this.withCredentials=r.withCredentials||!1,this.getXhr=r.getXhr||function(){return new XMLHttpRequest},this.currXhrId=0,this.pendingRequests=Object.create(null)}return f(e,[{key:"requestRange",value:function(e,t,r){var n={begin:e,end:t};for(var o in r)n[o]=r[o];return this.request(n)}},{key:"requestFull",value:function(e){return this.request(e)}},{key:"request",value:function(e){var t=this.getXhr(),r=this.currXhrId++,n=this.pendingRequests[r]={xhr:t};for(var o in t.open("GET",this.url),t.withCredentials=this.withCredentials,this.httpHeaders){var i=this.httpHeaders[o];void 0!==i&&t.setRequestHeader(o,i)}return this.isHttp&&"begin"in e&&"end"in e?(t.setRequestHeader("Range","bytes=".concat(e.begin,"-").concat(e.end-1)),n.expectedStatus=206):n.expectedStatus=200,t.responseType="arraybuffer",e.onError&&(t.onerror=function(r){e.onError(t.status)}),t.onreadystatechange=this.onStateChange.bind(this,r),t.onprogress=this.onProgress.bind(this,r),n.onHeadersReceived=e.onHeadersReceived,n.onDone=e.onDone,n.onError=e.onError,n.onProgress=e.onProgress,t.send(null),r}},{key:"onProgress",value:function(e,t){var r=this.pendingRequests[e];r&&r.onProgress&&r.onProgress(t)}},{key:"onStateChange",value:function(e,t){var r=this.pendingRequests[e];if(r){var n=r.xhr;if(n.readyState>=2&&r.onHeadersReceived&&(r.onHeadersReceived(),delete r.onHeadersReceived),4===n.readyState&&e in this.pendingRequests)if(delete this.pendingRequests[e],0===n.status&&this.isHttp)r.onError&&r.onError(n.status);else{var o=n.status||200;if(200===o&&206===r.expectedStatus||o===r.expectedStatus){var a=function(e){var t=e.response;return"string"!=typeof t?t:(0,i.stringToBytes)(t).buffer}(n);if(206===o){var s=n.getResponseHeader("Content-Range"),u=/bytes (\d+)-(\d+)\/(\d+)/.exec(s);r.onDone({begin:parseInt(u[1],10),chunk:a})}else a?r.onDone({begin:0,chunk:a}):r.onError&&r.onError(n.status)}else r.onError&&r.onError(n.status)}}}},{key:"hasPendingRequests",value:function(){for(var e in this.pendingRequests)return!0;return!1}},{key:"getRequestXhr",value:function(e){return this.pendingRequests[e].xhr}},{key:"isPendingRequest",value:function(e){return e in this.pendingRequests}},{key:"abortAllRequests",value:function(){for(var e in this.pendingRequests)this.abortRequest(0|e)}},{key:"abortRequest",value:function(e){var t=this.pendingRequests[e].xhr;delete this.pendingRequests[e],t.abort()}}]),e}(),d=function(){function e(t){c(this,e),this._source=t,this._manager=new h(t.url,{httpHeaders:t.httpHeaders,withCredentials:t.withCredentials}),this._rangeChunkSize=t.rangeChunkSize,this._fullRequestReader=null,this._rangeRequestReaders=[]}return f(e,[{key:"_onRangeRequestReaderClosed",value:function(e){var t=this._rangeRequestReaders.indexOf(e);t>=0&&this._rangeRequestReaders.splice(t,1)}},{key:"getFullReader",value:function(){return(0,i.assert)(!this._fullRequestReader),this._fullRequestReader=new p(this._manager,this._source),this._fullRequestReader}},{key:"getRangeReader",value:function(e,t){var r=new v(this._manager,e,t);return r.onClosed=this._onRangeRequestReaderClosed.bind(this),this._rangeRequestReaders.push(r),r}},{key:"cancelAllRequests",value:function(e){this._fullRequestReader&&this._fullRequestReader.cancel(e),this._rangeRequestReaders.slice(0).forEach((function(t){t.cancel(e)}))}}]),e}();t.PDFNetworkStream=d;var p=function(){function e(t,r){c(this,e),this._manager=t;var n={onHeadersReceived:this._onHeadersReceived.bind(this),onDone:this._onDone.bind(this),onError:this._onError.bind(this),onProgress:this._onProgress.bind(this)};this._url=r.url,this._fullRequestId=t.requestFull(n),this._headersReceivedCapability=(0,i.createPromiseCapability)(),this._disableRange=r.disableRange||!1,this._contentLength=r.length,this._rangeChunkSize=r.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),this._isStreamingSupported=!1,this._isRangeSupported=!1,this._cachedChunks=[],this._requests=[],this._done=!1,this._storedError=void 0,this._filename=null,this.onProgress=null}var t;return f(e,[{key:"_onHeadersReceived",value:function(){var e=this._fullRequestId,t=this._manager.getRequestXhr(e),r=function(e){return t.getResponseHeader(e)},n=(0,a.validateRangeRequestCapabilities)({getResponseHeader:r,isHttp:this._manager.isHttp,rangeChunkSize:this._rangeChunkSize,disableRange:this._disableRange}),o=n.allowRangeRequests,i=n.suggestedLength;o&&(this._isRangeSupported=!0),this._contentLength=i||this._contentLength,this._filename=(0,a.extractFilenameFromHeader)(r),this._isRangeSupported&&this._manager.abortRequest(e),this._headersReceivedCapability.resolve()}},{key:"_onDone",value:function(e){e&&(this._requests.length>0?this._requests.shift().resolve({value:e.chunk,done:!1}):this._cachedChunks.push(e.chunk)),this._done=!0,this._cachedChunks.length>0||(this._requests.forEach((function(e){e.resolve({value:void 0,done:!0})})),this._requests=[])}},{key:"_onError",value:function(e){var t=this._url,r=(0,a.createResponseStatusError)(e,t);this._storedError=r,this._headersReceivedCapability.reject(r),this._requests.forEach((function(e){e.reject(r)})),this._requests=[],this._cachedChunks=[]}},{key:"_onProgress",value:function(e){this.onProgress&&this.onProgress({loaded:e.loaded,total:e.lengthComputable?e.total:this._contentLength})}},{key:"read",value:(t=u(o.default.mark((function e(){var t,r;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(!this._storedError){e.next=2;break}throw this._storedError;case 2:if(!(this._cachedChunks.length>0)){e.next=5;break}return t=this._cachedChunks.shift(),e.abrupt("return",{value:t,done:!1});case 5:if(!this._done){e.next=7;break}return e.abrupt("return",{value:void 0,done:!0});case 7:return r=(0,i.createPromiseCapability)(),this._requests.push(r),e.abrupt("return",r.promise);case 10:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"cancel",value:function(e){this._done=!0,this._headersReceivedCapability.reject(e),this._requests.forEach((function(e){e.resolve({value:void 0,done:!0})})),this._requests=[],this._manager.isPendingRequest(this._fullRequestId)&&this._manager.abortRequest(this._fullRequestId),this._fullRequestReader=null}},{key:"filename",get:function(){return this._filename}},{key:"isRangeSupported",get:function(){return this._isRangeSupported}},{key:"isStreamingSupported",get:function(){return this._isStreamingSupported}},{key:"contentLength",get:function(){return this._contentLength}},{key:"headersReady",get:function(){return this._headersReceivedCapability.promise}}]),e}(),v=function(){function e(t,r,n){c(this,e),this._manager=t;var o={onDone:this._onDone.bind(this),onProgress:this._onProgress.bind(this)};this._requestId=t.requestRange(r,n,o),this._requests=[],this._queuedChunk=null,this._done=!1,this.onProgress=null,this.onClosed=null}var t;return f(e,[{key:"_close",value:function(){this.onClosed&&this.onClosed(this)}},{key:"_onDone",value:function(e){var t=e.chunk;this._requests.length>0?this._requests.shift().resolve({value:t,done:!1}):this._queuedChunk=t,this._done=!0,this._requests.forEach((function(e){e.resolve({value:void 0,done:!0})})),this._requests=[],this._close()}},{key:"_onProgress",value:function(e){!this.isStreamingSupported&&this.onProgress&&this.onProgress({loaded:e.loaded})}},{key:"read",value:(t=u(o.default.mark((function e(){var t,r;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(null===this._queuedChunk){e.next=4;break}return t=this._queuedChunk,this._queuedChunk=null,e.abrupt("return",{value:t,done:!1});case 4:if(!this._done){e.next=6;break}return e.abrupt("return",{value:void 0,done:!0});case 6:return r=(0,i.createPromiseCapability)(),this._requests.push(r),e.abrupt("return",r.promise);case 9:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"cancel",value:function(e){this._done=!0,this._requests.forEach((function(e){e.resolve({value:void 0,done:!0})})),this._requests=[],this._manager.isPendingRequest(this._requestId)&&this._manager.abortRequest(this._requestId),this._close()}},{key:"isStreamingSupported",get:function(){return!1}}]),e}()},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PDFFetchStream=void 0;var n,o=(n=r(191))&&n.__esModule?n:{default:n},i=r(1),a=r(209);function s(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function u(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){s(i,n,o,a,u,"next",e)}function u(e){s(i,n,o,a,u,"throw",e)}a(void 0)}))}}function c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function f(e,t,r){return t&&l(e.prototype,t),r&&l(e,r),e}function h(e,t,r){return{method:"GET",headers:e,signal:r&&r.signal,mode:"cors",credentials:t?"include":"same-origin",redirect:"follow"}}function d(e){var t=new Headers;for(var r in e){var n=e[r];void 0!==n&&t.append(r,n)}return t}var p=function(){function e(t){c(this,e),this.source=t,this.isHttp=/^https?:/i.test(t.url),this.httpHeaders=this.isHttp&&t.httpHeaders||{},this._fullRequestReader=null,this._rangeRequestReaders=[]}return f(e,[{key:"getFullReader",value:function(){return(0,i.assert)(!this._fullRequestReader),this._fullRequestReader=new v(this),this._fullRequestReader}},{key:"getRangeReader",value:function(e,t){if(t<=this._progressiveDataLength)return null;var r=new g(this,e,t);return this._rangeRequestReaders.push(r),r}},{key:"cancelAllRequests",value:function(e){this._fullRequestReader&&this._fullRequestReader.cancel(e),this._rangeRequestReaders.slice(0).forEach((function(t){t.cancel(e)}))}},{key:"_progressiveDataLength",get:function(){return this._fullRequestReader?this._fullRequestReader._loaded:0}}]),e}();t.PDFFetchStream=p;var v=function(){function e(t){var r=this;c(this,e),this._stream=t,this._reader=null,this._loaded=0,this._filename=null;var n=t.source;this._withCredentials=n.withCredentials||!1,this._contentLength=n.length,this._headersCapability=(0,i.createPromiseCapability)(),this._disableRange=n.disableRange||!1,this._rangeChunkSize=n.rangeChunkSize,this._rangeChunkSize||this._disableRange||(this._disableRange=!0),"undefined"!=typeof AbortController&&(this._abortController=new AbortController),this._isStreamingSupported=!n.disableStream,this._isRangeSupported=!n.disableRange,this._headers=d(this._stream.httpHeaders);var o=n.url;fetch(o,h(this._headers,this._withCredentials,this._abortController)).then((function(e){if(!(0,a.validateResponseStatus)(e.status))throw(0,a.createResponseStatusError)(e.status,o);r._reader=e.body.getReader(),r._headersCapability.resolve();var t=function(t){return e.headers.get(t)},n=(0,a.validateRangeRequestCapabilities)({getResponseHeader:t,isHttp:r._stream.isHttp,rangeChunkSize:r._rangeChunkSize,disableRange:r._disableRange}),s=n.allowRangeRequests,u=n.suggestedLength;r._isRangeSupported=s,r._contentLength=u||r._contentLength,r._filename=(0,a.extractFilenameFromHeader)(t),!r._isStreamingSupported&&r._isRangeSupported&&r.cancel(new i.AbortException("Streaming is disabled."))})).catch(this._headersCapability.reject),this.onProgress=null}var t;return f(e,[{key:"read",value:(t=u(o.default.mark((function e(){var t,r,n,i;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._headersCapability.promise;case 2:return e.next=4,this._reader.read();case 4:if(t=e.sent,r=t.value,!(n=t.done)){e.next=9;break}return e.abrupt("return",{value:r,done:n});case 9:return this._loaded+=r.byteLength,this.onProgress&&this.onProgress({loaded:this._loaded,total:this._contentLength}),i=new Uint8Array(r).buffer,e.abrupt("return",{value:i,done:!1});case 13:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"cancel",value:function(e){this._reader&&this._reader.cancel(e),this._abortController&&this._abortController.abort()}},{key:"headersReady",get:function(){return this._headersCapability.promise}},{key:"filename",get:function(){return this._filename}},{key:"contentLength",get:function(){return this._contentLength}},{key:"isRangeSupported",get:function(){return this._isRangeSupported}},{key:"isStreamingSupported",get:function(){return this._isStreamingSupported}}]),e}(),g=function(){function e(t,r,n){var o=this;c(this,e),this._stream=t,this._reader=null,this._loaded=0;var s=t.source;this._withCredentials=s.withCredentials||!1,this._readCapability=(0,i.createPromiseCapability)(),this._isStreamingSupported=!s.disableStream,"undefined"!=typeof AbortController&&(this._abortController=new AbortController),this._headers=d(this._stream.httpHeaders),this._headers.append("Range","bytes=".concat(r,"-").concat(n-1));var u=s.url;fetch(u,h(this._headers,this._withCredentials,this._abortController)).then((function(e){if(!(0,a.validateResponseStatus)(e.status))throw(0,a.createResponseStatusError)(e.status,u);o._readCapability.resolve(),o._reader=e.body.getReader()})),this.onProgress=null}var t;return f(e,[{key:"read",value:(t=u(o.default.mark((function e(){var t,r,n,i;return o.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this._readCapability.promise;case 2:return e.next=4,this._reader.read();case 4:if(t=e.sent,r=t.value,!(n=t.done)){e.next=9;break}return e.abrupt("return",{value:r,done:n});case 9:return this._loaded+=r.byteLength,this.onProgress&&this.onProgress({loaded:this._loaded}),i=new Uint8Array(r).buffer,e.abrupt("return",{value:i,done:!1});case 13:case"end":return e.stop()}}),e,this)}))),function(){return t.apply(this,arguments)})},{key:"cancel",value:function(e){this._reader&&this._reader.cancel(e),this._abortController&&this._abortController.abort()}},{key:"isStreamingSupported",get:function(){return this._isStreamingSupported}}]),e}()}])},module.exports=factory()}).call(this,__webpack_require__(12).Buffer,__webpack_require__(8),__webpack_require__(16))},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function(e){var t=!1;return{promise:new Promise((function(r,n){e.then((function(){return!t&&r.apply(void 0,arguments)})).catch((function(e){return!t&&n(e)}))})),cancel:function(){t=!0}}}},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=t.focusEvents=t.keyboardEvents=t.touchEvents=t.mouseEvents=void 0;var n=["onClick","onContextMenu","onDoubleClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp"];t.mouseEvents=n;var o=["onTouchCancel","onTouchEnd","onTouchMove","onTouchStart"];t.touchEvents=o;var i=["onKeyDown","onKeyPress","onKeyUp"];t.keyboardEvents=i;var a=["onFocus","onBlur"];t.focusEvents=a;var s=function(e,t){var r={};return[].concat(n,o,i,a).forEach((function(n){e[n]&&(r[n]=function(r){return t?e[n](r,t(n)):e[n](r)})})),r};t.default=s},function(e,t){e.exports=raf},function(e,t,r){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(){for(var e=arguments.length,t=Array(e),r=0;r<e;r++)t[r]=arguments[r];return t.reduce((function(e,t){return"string"==typeof t||t instanceof Array?e.concat(t):e}),[]).filter((function(e){return e})).join(" ")}},function(e,t){var r;r=function(){return this}();try{r=r||new Function("return this")()}catch(e){"object"==typeof window&&(r=window)}e.exports=r},function(e,t){e.exports=ReactDOM},function(e,t){e.exports=pdfjsViewer},function(e,t,r){e.exports=r(29)},function(e,t,r){"use strict";(function(e){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
var n=r(13),o=r(14),i=r(15);function a(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(e,t){if(a()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,r){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,r);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return f(this,e)}return c(this,e,t,r)}function c(e,t,r,n){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,r,n){if(t.byteLength,r<0||t.byteLength<r)throw new RangeError("'offset' is out of bounds");if(t.byteLength<r+(n||0))throw new RangeError("'length' is out of bounds");t=void 0===r&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,r):new Uint8Array(t,r,n);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=h(e,t);return e}(e,t,r,n):"string"==typeof t?function(e,t,r){"string"==typeof r&&""!==r||(r="utf8");if(!u.isEncoding(r))throw new TypeError('"encoding" must be a valid string encoding');var n=0|p(t,r),o=(e=s(e,n)).write(t,r);o!==n&&(e=e.slice(0,o));return e}(e,t,r):function(e,t){if(u.isBuffer(t)){var r=0|d(t.length);return 0===(e=s(e,r)).length?e:(t.copy(e,0,0,r),e)}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(n=t.length)!=n?s(e,0):h(e,t);if("Buffer"===t.type&&i(t.data))return h(e,t.data)}var n;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function f(e,t){if(l(t),e=s(e,t<0?0:0|d(t)),!u.TYPED_ARRAY_SUPPORT)for(var r=0;r<t;++r)e[r]=0;return e}function h(e,t){var r=t.length<0?0:0|d(t.length);e=s(e,r);for(var n=0;n<r;n+=1)e[n]=255&t[n];return e}function d(e){if(e>=a())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+a().toString(16)+" bytes");return 0|e}function p(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var r=e.length;if(0===r)return 0;for(var n=!1;;)switch(t){case"ascii":case"latin1":case"binary":return r;case"utf8":case"utf-8":case void 0:return q(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*r;case"hex":return r>>>1;case"base64":return B(e).length;default:if(n)return q(e).length;t=(""+t).toLowerCase(),n=!0}}function v(e,t,r){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===r||r>this.length)&&(r=this.length),r<=0)return"";if((r>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return P(this,t,r);case"utf8":case"utf-8":return R(this,t,r);case"ascii":return E(this,t,r);case"latin1":case"binary":return C(this,t,r);case"base64":return x(this,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return T(this,t,r);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}function g(e,t,r){var n=e[t];e[t]=e[r],e[r]=n}function y(e,t,r,n,o){if(0===e.length)return-1;if("string"==typeof r?(n=r,r=0):r>2147483647?r=2147483647:r<-2147483648&&(r=-2147483648),r=+r,isNaN(r)&&(r=o?0:e.length-1),r<0&&(r=e.length+r),r>=e.length){if(o)return-1;r=e.length-1}else if(r<0){if(!o)return-1;r=0}if("string"==typeof t&&(t=u.from(t,n)),u.isBuffer(t))return 0===t.length?-1:m(e,t,r,n,o);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(e,t,r):Uint8Array.prototype.lastIndexOf.call(e,t,r):m(e,[t],r,n,o);throw new TypeError("val must be string, number or Buffer")}function m(e,t,r,n,o){var i,a=1,s=e.length,u=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;a=2,s/=2,u/=2,r/=2}function c(e,t){return 1===a?e[t]:e.readUInt16BE(t*a)}if(o){var l=-1;for(i=r;i<s;i++)if(c(e,i)===c(t,-1===l?0:i-l)){if(-1===l&&(l=i),i-l+1===u)return l*a}else-1!==l&&(i-=i-l),l=-1}else for(r+u>s&&(r=s-u),i=r;i>=0;i--){for(var f=!0,h=0;h<u;h++)if(c(e,i+h)!==c(t,h)){f=!1;break}if(f)return i}return-1}function b(e,t,r,n){r=Number(r)||0;var o=e.length-r;n?(n=Number(n))>o&&(n=o):n=o;var i=t.length;if(i%2!=0)throw new TypeError("Invalid hex string");n>i/2&&(n=i/2);for(var a=0;a<n;++a){var s=parseInt(t.substr(2*a,2),16);if(isNaN(s))return a;e[r+a]=s}return a}function _(e,t,r,n){return W(q(t,e.length-r),e,r,n)}function w(e,t,r,n){return W(function(e){for(var t=[],r=0;r<e.length;++r)t.push(255&e.charCodeAt(r));return t}(t),e,r,n)}function A(e,t,r,n){return w(e,t,r,n)}function S(e,t,r,n){return W(B(t),e,r,n)}function k(e,t,r,n){return W(function(e,t){for(var r,n,o,i=[],a=0;a<e.length&&!((t-=2)<0);++a)r=e.charCodeAt(a),n=r>>8,o=r%256,i.push(o),i.push(n);return i}(t,e.length-r),e,r,n)}function x(e,t,r){return 0===t&&r===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,r))}function R(e,t,r){r=Math.min(e.length,r);for(var n=[],o=t;o<r;){var i,a,s,u,c=e[o],l=null,f=c>239?4:c>223?3:c>191?2:1;if(o+f<=r)switch(f){case 1:c<128&&(l=c);break;case 2:128==(192&(i=e[o+1]))&&(u=(31&c)<<6|63&i)>127&&(l=u);break;case 3:i=e[o+1],a=e[o+2],128==(192&i)&&128==(192&a)&&(u=(15&c)<<12|(63&i)<<6|63&a)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:i=e[o+1],a=e[o+2],s=e[o+3],128==(192&i)&&128==(192&a)&&128==(192&s)&&(u=(15&c)<<18|(63&i)<<12|(63&a)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(l=65533,f=1):l>65535&&(l-=65536,n.push(l>>>10&1023|55296),l=56320|1023&l),n.push(l),o+=f}return function(e){var t=e.length;if(t<=4096)return String.fromCharCode.apply(String,e);var r="",n=0;for(;n<t;)r+=String.fromCharCode.apply(String,e.slice(n,n+=4096));return r}(n)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=a(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,r){return c(null,e,t,r)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,r){return function(e,t,r,n){return l(t),t<=0?s(e,t):void 0!==r?"string"==typeof n?s(e,t).fill(r,n):s(e,t).fill(r):s(e,t)}(null,e,t,r)},u.allocUnsafe=function(e){return f(null,e)},u.allocUnsafeSlow=function(e){return f(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var r=e.length,n=t.length,o=0,i=Math.min(r,n);o<i;++o)if(e[o]!==t[o]){r=e[o],n=t[o];break}return r<n?-1:n<r?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!i(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var r;if(void 0===t)for(t=0,r=0;r<e.length;++r)t+=e[r].length;var n=u.allocUnsafe(t),o=0;for(r=0;r<e.length;++r){var a=e[r];if(!u.isBuffer(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(n,o),o+=a.length}return n},u.byteLength=p,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)g(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?R(this,0,e):v.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",r=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,r).match(/.{2}/g).join(" "),this.length>r&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,r,n,o){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===r&&(r=e?e.length:0),void 0===n&&(n=0),void 0===o&&(o=this.length),t<0||r>e.length||n<0||o>this.length)throw new RangeError("out of range index");if(n>=o&&t>=r)return 0;if(n>=o)return-1;if(t>=r)return 1;if(this===e)return 0;for(var i=(o>>>=0)-(n>>>=0),a=(r>>>=0)-(t>>>=0),s=Math.min(i,a),c=this.slice(n,o),l=e.slice(t,r),f=0;f<s;++f)if(c[f]!==l[f]){i=c[f],a=l[f];break}return i<a?-1:a<i?1:0},u.prototype.includes=function(e,t,r){return-1!==this.indexOf(e,t,r)},u.prototype.indexOf=function(e,t,r){return y(this,e,t,r,!0)},u.prototype.lastIndexOf=function(e,t,r){return y(this,e,t,r,!1)},u.prototype.write=function(e,t,r,n){if(void 0===t)n="utf8",r=this.length,t=0;else if(void 0===r&&"string"==typeof t)n=t,r=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(r)?(r|=0,void 0===n&&(n="utf8")):(n=r,r=void 0)}var o=this.length-t;if((void 0===r||r>o)&&(r=o),e.length>0&&(r<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var i=!1;;)switch(n){case"hex":return b(this,e,t,r);case"utf8":case"utf-8":return _(this,e,t,r);case"ascii":return w(this,e,t,r);case"latin1":case"binary":return A(this,e,t,r);case"base64":return S(this,e,t,r);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return k(this,e,t,r);default:if(i)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),i=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};function E(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(127&e[o]);return n}function C(e,t,r){var n="";r=Math.min(e.length,r);for(var o=t;o<r;++o)n+=String.fromCharCode(e[o]);return n}function P(e,t,r){var n=e.length;(!t||t<0)&&(t=0),(!r||r<0||r>n)&&(r=n);for(var o="",i=t;i<r;++i)o+=U(e[i]);return o}function T(e,t,r){for(var n=e.slice(t,r),o="",i=0;i<n.length;i+=2)o+=String.fromCharCode(n[i]+256*n[i+1]);return o}function O(e,t,r){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>r)throw new RangeError("Trying to access beyond buffer length")}function L(e,t,r,n,o,i){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>o||t<i)throw new RangeError('"value" argument is out of bounds');if(r+n>e.length)throw new RangeError("Index out of range")}function I(e,t,r,n){t<0&&(t=65535+t+1);for(var o=0,i=Math.min(e.length-r,2);o<i;++o)e[r+o]=(t&255<<8*(n?o:1-o))>>>8*(n?o:1-o)}function F(e,t,r,n){t<0&&(t=4294967295+t+1);for(var o=0,i=Math.min(e.length-r,4);o<i;++o)e[r+o]=t>>>8*(n?o:3-o)&255}function j(e,t,r,n,o,i){if(r+n>e.length)throw new RangeError("Index out of range");if(r<0)throw new RangeError("Index out of range")}function D(e,t,r,n,i){return i||j(e,0,r,4),o.write(e,t,r,n,23,4),r+4}function M(e,t,r,n,i){return i||j(e,0,r,8),o.write(e,t,r,n,52,8),r+8}u.prototype.slice=function(e,t){var r,n=this.length;if((e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(r=this.subarray(e,t)).__proto__=u.prototype;else{var o=t-e;r=new u(o,void 0);for(var i=0;i<o;++i)r[i]=this[i+e]}return r},u.prototype.readUIntLE=function(e,t,r){e|=0,t|=0,r||O(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n},u.prototype.readUIntBE=function(e,t,r){e|=0,t|=0,r||O(e,t,this.length);for(var n=this[e+--t],o=1;t>0&&(o*=256);)n+=this[e+--t]*o;return n},u.prototype.readUInt8=function(e,t){return t||O(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||O(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||O(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||O(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||O(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,r){e|=0,t|=0,r||O(e,t,this.length);for(var n=this[e],o=1,i=0;++i<t&&(o*=256);)n+=this[e+i]*o;return n>=(o*=128)&&(n-=Math.pow(2,8*t)),n},u.prototype.readIntBE=function(e,t,r){e|=0,t|=0,r||O(e,t,this.length);for(var n=t,o=1,i=this[e+--n];n>0&&(o*=256);)i+=this[e+--n]*o;return i>=(o*=128)&&(i-=Math.pow(2,8*t)),i},u.prototype.readInt8=function(e,t){return t||O(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||O(e,2,this.length);var r=this[e]|this[e+1]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt16BE=function(e,t){t||O(e,2,this.length);var r=this[e+1]|this[e]<<8;return 32768&r?4294901760|r:r},u.prototype.readInt32LE=function(e,t){return t||O(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||O(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||O(e,4,this.length),o.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||O(e,4,this.length),o.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||O(e,8,this.length),o.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||O(e,8,this.length),o.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,r,n){(e=+e,t|=0,r|=0,n)||L(this,e,t,r,Math.pow(2,8*r)-1,0);var o=1,i=0;for(this[t]=255&e;++i<r&&(o*=256);)this[t+i]=e/o&255;return t+r},u.prototype.writeUIntBE=function(e,t,r,n){(e=+e,t|=0,r|=0,n)||L(this,e,t,r,Math.pow(2,8*r)-1,0);var o=r-1,i=1;for(this[t+o]=255&e;--o>=0&&(i*=256);)this[t+o]=e/i&255;return t+r},u.prototype.writeUInt8=function(e,t,r){return e=+e,t|=0,r||L(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,r){return e=+e,t|=0,r||L(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):I(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,r){return e=+e,t|=0,r||L(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):I(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,r){return e=+e,t|=0,r||L(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):F(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,r){return e=+e,t|=0,r||L(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):F(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,r,n){if(e=+e,t|=0,!n){var o=Math.pow(2,8*r-1);L(this,e,t,r,o-1,-o)}var i=0,a=1,s=0;for(this[t]=255&e;++i<r&&(a*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/a>>0)-s&255;return t+r},u.prototype.writeIntBE=function(e,t,r,n){if(e=+e,t|=0,!n){var o=Math.pow(2,8*r-1);L(this,e,t,r,o-1,-o)}var i=r-1,a=1,s=0;for(this[t+i]=255&e;--i>=0&&(a*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/a>>0)-s&255;return t+r},u.prototype.writeInt8=function(e,t,r){return e=+e,t|=0,r||L(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,r){return e=+e,t|=0,r||L(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):I(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,r){return e=+e,t|=0,r||L(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):I(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,r){return e=+e,t|=0,r||L(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):F(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,r){return e=+e,t|=0,r||L(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):F(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,r){return D(this,e,t,!0,r)},u.prototype.writeFloatBE=function(e,t,r){return D(this,e,t,!1,r)},u.prototype.writeDoubleLE=function(e,t,r){return M(this,e,t,!0,r)},u.prototype.writeDoubleBE=function(e,t,r){return M(this,e,t,!1,r)},u.prototype.copy=function(e,t,r,n){if(r||(r=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<r&&(n=r),n===r)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(r<0||r>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-r&&(n=e.length-t+r);var o,i=n-r;if(this===e&&r<t&&t<n)for(o=i-1;o>=0;--o)e[o+t]=this[o+r];else if(i<1e3||!u.TYPED_ARRAY_SUPPORT)for(o=0;o<i;++o)e[o+t]=this[o+r];else Uint8Array.prototype.set.call(e,this.subarray(r,r+i),t);return i},u.prototype.fill=function(e,t,r,n){if("string"==typeof e){if("string"==typeof t?(n=t,t=0,r=this.length):"string"==typeof r&&(n=r,r=this.length),1===e.length){var o=e.charCodeAt(0);o<256&&(e=o)}if(void 0!==n&&"string"!=typeof n)throw new TypeError("encoding must be a string");if("string"==typeof n&&!u.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<r)throw new RangeError("Out of range index");if(r<=t)return this;var i;if(t>>>=0,r=void 0===r?this.length:r>>>0,e||(e=0),"number"==typeof e)for(i=t;i<r;++i)this[i]=e;else{var a=u.isBuffer(e)?e:q(new u(e,n).toString()),s=a.length;for(i=0;i<r-t;++i)this[i+t]=a[i%s]}return this};var N=/[^+\/0-9A-Za-z-_]/g;function U(e){return e<16?"0"+e.toString(16):e.toString(16)}function q(e,t){var r;t=t||1/0;for(var n=e.length,o=null,i=[],a=0;a<n;++a){if((r=e.charCodeAt(a))>55295&&r<57344){if(!o){if(r>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(a+1===n){(t-=3)>-1&&i.push(239,191,189);continue}o=r;continue}if(r<56320){(t-=3)>-1&&i.push(239,191,189),o=r;continue}r=65536+(o-55296<<10|r-56320)}else o&&(t-=3)>-1&&i.push(239,191,189);if(o=null,r<128){if((t-=1)<0)break;i.push(r)}else if(r<2048){if((t-=2)<0)break;i.push(r>>6|192,63&r|128)}else if(r<65536){if((t-=3)<0)break;i.push(r>>12|224,r>>6&63|128,63&r|128)}else{if(!(r<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(r>>18|240,r>>12&63|128,r>>6&63|128,63&r|128)}}return i}function B(e){return n.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(N,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function W(e,t,r,n){for(var o=0;o<n&&!(o+r>=t.length||o>=e.length);++o)t[o+r]=e[o];return o}}).call(this,r(8))},function(e,t,r){"use strict";t.byteLength=function(e){var t=c(e),r=t[0],n=t[1];return 3*(r+n)/4-n},t.toByteArray=function(e){for(var t,r=c(e),n=r[0],a=r[1],s=new i(function(e,t,r){return 3*(t+r)/4-r}(0,n,a)),u=0,l=a>0?n-4:n,f=0;f<l;f+=4)t=o[e.charCodeAt(f)]<<18|o[e.charCodeAt(f+1)]<<12|o[e.charCodeAt(f+2)]<<6|o[e.charCodeAt(f+3)],s[u++]=t>>16&255,s[u++]=t>>8&255,s[u++]=255&t;2===a&&(t=o[e.charCodeAt(f)]<<2|o[e.charCodeAt(f+1)]>>4,s[u++]=255&t);1===a&&(t=o[e.charCodeAt(f)]<<10|o[e.charCodeAt(f+1)]<<4|o[e.charCodeAt(f+2)]>>2,s[u++]=t>>8&255,s[u++]=255&t);return s},t.fromByteArray=function(e){for(var t,r=e.length,o=r%3,i=[],a=0,s=r-o;a<s;a+=16383)i.push(l(e,a,a+16383>s?s:a+16383));1===o?(t=e[r-1],i.push(n[t>>2]+n[t<<4&63]+"==")):2===o&&(t=(e[r-2]<<8)+e[r-1],i.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"="));return i.join("")};for(var n=[],o=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0,u=a.length;s<u;++s)n[s]=a[s],o[a.charCodeAt(s)]=s;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var r=e.indexOf("=");return-1===r&&(r=t),[r,r===t?0:4-r%4]}function l(e,t,r){for(var o,i,a=[],s=t;s<r;s+=3)o=(e[s]<<16&16711680)+(e[s+1]<<8&65280)+(255&e[s+2]),a.push(n[(i=o)>>18&63]+n[i>>12&63]+n[i>>6&63]+n[63&i]);return a.join("")}o["-".charCodeAt(0)]=62,o["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,r,n,o){var i,a,s=8*o-n-1,u=(1<<s)-1,c=u>>1,l=-7,f=r?o-1:0,h=r?-1:1,d=e[t+f];for(f+=h,i=d&(1<<-l)-1,d>>=-l,l+=s;l>0;i=256*i+e[t+f],f+=h,l-=8);for(a=i&(1<<-l)-1,i>>=-l,l+=n;l>0;a=256*a+e[t+f],f+=h,l-=8);if(0===i)i=1-c;else{if(i===u)return a?NaN:1/0*(d?-1:1);a+=Math.pow(2,n),i-=c}return(d?-1:1)*a*Math.pow(2,i-n)},t.write=function(e,t,r,n,o,i){var a,s,u,c=8*i-o-1,l=(1<<c)-1,f=l>>1,h=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,d=n?0:i-1,p=n?1:-1,v=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,a=l):(a=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-a))<1&&(a--,u*=2),(t+=a+f>=1?h/u:h*Math.pow(2,1-f))*u>=2&&(a++,u/=2),a+f>=l?(s=0,a=l):a+f>=1?(s=(t*u-1)*Math.pow(2,o),a+=f):(s=t*Math.pow(2,f-1)*Math.pow(2,o),a=0));o>=8;e[r+d]=255&s,d+=p,s/=256,o-=8);for(a=a<<o|s,c+=o;c>0;e[r+d]=255&a,d+=p,a/=256,c-=8);e[r+d-p]|=128*v}},function(e,t){var r={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==r.call(e)}},function(e,t){var r,n,o=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(e){if(r===setTimeout)return setTimeout(e,0);if((r===i||!r)&&setTimeout)return r=setTimeout,setTimeout(e,0);try{return r(e,0)}catch(t){try{return r.call(null,e,0)}catch(t){return r.call(this,e,0)}}}!function(){try{r="function"==typeof setTimeout?setTimeout:i}catch(e){r=i}try{n="function"==typeof clearTimeout?clearTimeout:a}catch(e){n=a}}();var u,c=[],l=!1,f=-1;function h(){l&&u&&(l=!1,u.length?c=u.concat(c):f=-1,c.length&&d())}function d(){if(!l){var e=s(h);l=!0;for(var t=c.length;t;){for(u=c,c=[];++f<t;)u&&u[f].run();f=-1,t=c.length}u=null,l=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===a||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function v(){}o.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var r=1;r<arguments.length;r++)t[r-1]=arguments[r];c.push(new p(e,t)),1!==c.length||l||s(d)},p.prototype.run=function(){this.fun.apply(null,this.array)},o.title="browser",o.browser=!0,o.env={},o.argv=[],o.version="",o.versions={},o.on=v,o.addListener=v,o.once=v,o.off=v,o.removeListener=v,o.removeAllListeners=v,o.emit=v,o.prependListener=v,o.prependOnceListener=v,o.listeners=function(e){return[]},o.binding=function(e){throw new Error("process.binding is not supported")},o.cwd=function(){return"/"},o.chdir=function(e){throw new Error("process.chdir is not supported")},o.umask=function(){return 0}},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t){},function(e,t,r){var n=function(e){"use strict";var t=Object.prototype,r=t.hasOwnProperty,n="function"==typeof Symbol?Symbol:{},o=n.iterator||"@@iterator",i=n.asyncIterator||"@@asyncIterator",a=n.toStringTag||"@@toStringTag";function s(e,t,r,n){var o=t&&t.prototype instanceof l?t:l,i=Object.create(o.prototype),a=new A(n||[]);return i._invoke=function(e,t,r){var n="suspendedStart";return function(o,i){if("executing"===n)throw new Error("Generator is already running");if("completed"===n){if("throw"===o)throw i;return k()}for(r.method=o,r.arg=i;;){var a=r.delegate;if(a){var s=b(a,r);if(s){if(s===c)continue;return s}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if("suspendedStart"===n)throw n="completed",r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n="executing";var l=u(e,t,r);if("normal"===l.type){if(n=r.done?"completed":"suspendedYield",l.arg===c)continue;return{value:l.arg,done:r.done}}"throw"===l.type&&(n="completed",r.method="throw",r.arg=l.arg)}}}(e,r,a),i}function u(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=s;var c={};function l(){}function f(){}function h(){}var d={};d[o]=function(){return this};var p=Object.getPrototypeOf,v=p&&p(p(S([])));v&&v!==t&&r.call(v,o)&&(d=v);var g=h.prototype=l.prototype=Object.create(d);function y(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function m(e){var t;this._invoke=function(n,o){function i(){return new Promise((function(t,i){!function t(n,o,i,a){var s=u(e[n],e,o);if("throw"!==s.type){var c=s.arg,l=c.value;return l&&"object"==typeof l&&r.call(l,"__await")?Promise.resolve(l.__await).then((function(e){t("next",e,i,a)}),(function(e){t("throw",e,i,a)})):Promise.resolve(l).then((function(e){c.value=e,i(c)}),(function(e){return t("throw",e,i,a)}))}a(s.arg)}(n,o,t,i)}))}return t=t?t.then(i,i):i()}}function b(e,t){var r=e.iterator[t.method];if(void 0===r){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=void 0,b(e,t),"throw"===t.method))return c;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return c}var n=u(r,e.iterator,t.arg);if("throw"===n.type)return t.method="throw",t.arg=n.arg,t.delegate=null,c;var o=n.arg;return o?o.done?(t[e.resultName]=o.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=void 0),t.delegate=null,c):o:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,c)}function _(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function w(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function A(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(_,this),this.reset(!0)}function S(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var n=-1,i=function t(){for(;++n<e.length;)if(r.call(e,n))return t.value=e[n],t.done=!1,t;return t.value=void 0,t.done=!0,t};return i.next=i}}return{next:k}}function k(){return{value:void 0,done:!0}}return f.prototype=g.constructor=h,h.constructor=f,h[a]=f.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===f||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,h):(e.__proto__=h,a in e||(e[a]="GeneratorFunction")),e.prototype=Object.create(g),e},e.awrap=function(e){return{__await:e}},y(m.prototype),m.prototype[i]=function(){return this},e.AsyncIterator=m,e.async=function(t,r,n,o){var i=new m(s(t,r,n,o));return e.isGeneratorFunction(r)?i:i.next().then((function(e){return e.done?e.value:i.next()}))},y(g),g[a]="Generator",g[o]=function(){return this},g.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=S,A.prototype={constructor:A,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(w),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=void 0)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(r,n){return a.type="throw",a.arg=e,t.next=r,n&&(t.method="next",t.arg=void 0),!!n}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],a=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var s=r.call(i,"catchLoc"),u=r.call(i,"finallyLoc");if(s&&u){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(s){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=e,a.arg=t,i?(this.method="next",this.next=i.finallyLoc,c):this.complete(a)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),c},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),w(r),c}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;w(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,r){return this.delegate={iterator:S(e),resultName:t,nextLoc:r},"next"===this.method&&(this.arg=void 0),c}},e}(e.exports);try{regeneratorRuntime=n}catch(e){Function("r","regeneratorRuntime = r")(n)}},function(e,t,r){"use strict";var n=r(24);function o(){}function i(){}i.resetWarningCache=o,e.exports=function(){function e(e,t,r,o,i,a){if(a!==n){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function t(){return e}e.isRequired=e;var r={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:o};return r.PropTypes=r,r}},function(e,t,r){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,r){var n=r(26),o=r(27);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=(n(e.i,o,i),o.locals?o.locals:{});e.exports=a},function(e,t,r){"use strict";var n,o=function(){return void 0===n&&(n=Boolean(window&&document&&document.all&&!window.atob)),n},i=function(){var e={};return function(t){if(void 0===e[t]){var r=document.querySelector(t);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}e[t]=r}return e[t]}}(),a={};function s(e,t,r){for(var n=0;n<t.length;n++){var o={css:t[n][1],media:t[n][2],sourceMap:t[n][3]};a[e][n]?a[e][n](o):a[e].push(v(o,r))}}function u(e){var t=document.createElement("style"),n=e.attributes||{};if(void 0===n.nonce){var o=r.nc;o&&(n.nonce=o)}if(Object.keys(n).forEach((function(e){t.setAttribute(e,n[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var c,l=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function f(e,t,r,n){var o=r?"":n.css;if(e.styleSheet)e.styleSheet.cssText=l(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function h(e,t,r){var n=r.css,o=r.media,i=r.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(n+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}var d=null,p=0;function v(e,t){var r,n,o;if(t.singleton){var i=p++;r=d||(d=u(t)),n=f.bind(null,r,i,!1),o=f.bind(null,r,i,!0)}else r=u(t),n=h.bind(null,r,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)};return n(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n(e=t)}else o()}}e.exports=function(e,t,r){return(r=r||{}).singleton||"boolean"==typeof r.singleton||(r.singleton=o()),e=r.base?e+r.base:e,t=t||[],a[e]||(a[e]=[]),s(e,t,r),function(t){if(t=t||[],"[object Array]"===Object.prototype.toString.call(t)){a[e]||(a[e]=[]),s(e,t,r);for(var n=t.length;n<a[e].length;n++)a[e][n]();a[e].length=t.length,0===a[e].length&&delete a[e]}}}},function(e,t,r){(t=r(28)(!1)).push([e.i,"body {\n  margin: 0;\n  background-color: #525659;\n  color: #fff;\n  font-family: Helvetica, Arial, sans-serif;\n}\n.Reader {\n  height: 100vh;\n}\n.Reader__container__numbers {\n  position: fixed;\n  top: 0px;\n  width: 100%;\n  margin: auto;\n  padding: 5px;\n  background-color: #565759;\n  z-index: 100;\n}\n.Reader__container__numbers__content {\n  font-size: 0.65rem;\n  text-align: center;\n  padding: 5px;\n  border-radius: 4px;\n  background-color: rgba(255, 255, 255, 0.144);\n  width: 50px;\n  margin: auto;\n}\n.Reader__container__navigate {\n  position: fixed;\n  bottom: 0px;\n  width: 100%;\n  margin: auto;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  z-index: 100;\n  background-color: #405a65;\n}\n.Reader__container__navigate__arrow {\n  font-size: 2.5em;\n  margin: 10px;\n  width: 100px;\n  margin: auto;\n  text-align: center;\n}\n.Reader__container__zoom_container {\n  position: fixed;\n  bottom: 60px;\n  right: 15px;\n  background-color: rgba(0, 0, 0, 0.9);\n  z-index: 101;\n  flex: 1;\n  justify-content: center;\n}\n.Reader__container__zoom_container__button {\n  font-size: 2.5em;\n  margin: 5;\n  width: 50px;\n  text-align: center;\n}\n.Reader__container__load {\n  margin-top: 1em;\n  color: white;\n}\n.Reader__container__document {\n  margin: auto;\n  padding-top: 40px;\n  padding-bottom: 50px;\n}\n.Reader__container__document .react-pdf__Document span {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.Reader__container__document .react-pdf__Page {\n  display: block;\n}\n.Reader__container__document .react-pdf__Page canvas {\n  margin: auto;\n}\n.Reader__container__document .react-pdf__Page__annotations {\n  display: none;\n}\n",""]),e.exports=t},function(e,t,r){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r=function(e,t){var r=e[1]||"",n=e[3];if(!n)return r;if(t&&"function"==typeof btoa){var o=(a=n,s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(u," */")),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[r].concat(i).concat([o]).join("\n")}var a,s,u;return[r].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(r,"}"):r})).join("")},t.i=function(e,r){"string"==typeof e&&(e=[[null,e,""]]);for(var n=0;n<e.length;n++){var o=[].concat(e[n]);r&&(o[2]?o[2]="".concat(r," and ").concat(o[2]):o[2]=r),t.push(o)}},t}},function(e,t,r){"use strict";r.r(t);var n=r(1),o=r.n(n),i=r(9),a=r(3),s=r.n(a);function u(){return(u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e}).apply(this,arguments)}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function l(e){return(l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var f=r(2),h=r.n(f);function d(e,t,r,n,o,i,a){try{var s=e[i](a),u=s.value}catch(e){return void r(e)}s.done?t(u):Promise.resolve(u).then(n,o)}function p(e){return function(){var t=this,r=arguments;return new Promise((function(n,o){var i=e.apply(t,r);function a(e){d(i,n,o,a,s,"next",e)}function s(e){d(i,n,o,a,s,"throw",e)}a(void 0)}))}}function v(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function g(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function y(e,t,r){return t&&g(e.prototype,t),r&&g(e,r),e}function m(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function b(e,t){return(b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&b(e,t)}function w(e,t){return!t||"object"!==l(t)&&"function"!=typeof t?m(e):t}function A(e){return(A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function S(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var k=r(0),x=r.n(k),R=r(5),E=r.n(R),C=r(4),P=r.n(C),T=r(7),O=r.n(T),L=Object(n.createContext)(null);function I(e){var t=e.children,r=e.type;return(o.a.createElement("div",{className:"react-pdf__message react-pdf__message--".concat(r)},t))}I.propTypes={children:x.a.node,type:x.a.oneOf(["error","loading","no-data"]).isRequired};var F=r(10).PDFLinkService,j={NEED_PASSWORD:1,INCORRECT_PASSWORD:2},D="undefined"!=typeof window,M=D&&"file:"===window.location.protocol,N=function(e){return void 0!==e},U=function(e){return N(e)&&null!==e},q=function(e){return e instanceof ArrayBuffer},B=function(e){if(!D)throw new Error("Attempted to check if a variable is a Blob on a non-browser environment.");return e instanceof Blob},W=function(e){if(!D)throw new Error("Attempted to check if a variable is a File on a non-browser environment.");return e instanceof File},G=function(e){return"string"==typeof e&&/^data:/.test(e)},z=function(e){if(!G(e))throw new Error("dataURItoUint8Array was provided with an argument which is not a valid data URI.");var t;t=e.split(",")[0].indexOf("base64")>=0?atob(e.split(",")[1]):unescape(e.split(",")[1]);for(var r=new Uint8Array(t.length),n=0;n<t.length;n+=1)r[n]=t.charCodeAt(n);return r},H=function(e){},Y=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return H.apply(void 0,["warn"].concat(t))},X=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return H.apply(void 0,["error"].concat(t))},V=function(){M&&Y("Loading PDF as base64 strings/URLs might not work on protocols other than HTTP/HTTPS. On Google Chrome, you can use --allow-file-access-from-files flag for debugging purposes.")},K=function(e){e&&e.cancel&&e.cancel()},Q=function(e,t){return Object.defineProperty(e,"width",{get:function(){return this.view[2]*t},configurable:!0}),Object.defineProperty(e,"height",{get:function(){return this.view[3]*t},configurable:!0}),Object.defineProperty(e,"originalWidth",{get:function(){return this.view[2]},configurable:!0}),Object.defineProperty(e,"originalHeight",{get:function(){return this.view[3]},configurable:!0}),e},J=function(e){return"RenderingCancelledException"===e.name},Z=function(e){return new Promise((function(t,r){var n=new FileReader;return n.onload=function(){return t(new Uint8Array(n.result))},n.onerror=function(e){switch(e.target.error.code){case e.target.error.NOT_FOUND_ERR:return r(new Error("Error while reading a file: File not found."));case e.target.error.NOT_READABLE_ERR:return r(new Error("Error while reading a file: File not readable."));case e.target.error.SECURITY_ERR:return r(new Error("Error while reading a file: Security error."));case e.target.error.ABORT_ERR:return r(new Error("Error while reading a file: Aborted."));default:return r(new Error("Error while reading a file."))}},n.readAsArrayBuffer(e),null}))};function $(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var ee,te=(ee={},[].concat($(R.mouseEvents),$(R.touchEvents),$(R.keyboardEvents)).forEach((function(e){ee[e]=x.a.func})),ee),re=[x.a.string,x.a.instanceOf(ArrayBuffer),x.a.shape({data:x.a.object,httpHeaders:x.a.object,range:x.a.object,url:x.a.string,withCredentials:x.a.bool})];"undefined"!=typeof File&&re.push(x.a.instanceOf(File)),"undefined"!=typeof Blob&&re.push(x.a.instanceOf(Blob));var ne=x.a.oneOfType([x.a.string,x.a.arrayOf(x.a.string)]),oe=(x.a.oneOfType(re),x.a.instanceOf(F)),ie=(x.a.oneOf(["_self","_blank","_parent","_top"]),x.a.shape({_transport:x.a.shape({fontLoader:x.a.object.isRequired}).isRequired,commonObjs:x.a.shape({_objs:x.a.object.isRequired}).isRequired,getAnnotations:x.a.func.isRequired,getTextContent:x.a.func.isRequired,getViewport:x.a.func.isRequired,render:x.a.func.isRequired})),ae=x.a.oneOfType([x.a.shape({getDestination:x.a.func.isRequired,getOutline:x.a.func.isRequired,getPage:x.a.func.isRequired,numPages:x.a.number.isRequired}),x.a.bool]),se=x.a.oneOf(["canvas","none","svg"]),ue=x.a.oneOf([0,90,180,270]);function ce(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function le(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ce(Object(r),!0).forEach((function(t){S(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ce(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function fe(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var he=function(e){_(n,e);var t,r=(t=n,function(){var e,r=A(t);if(fe()){var n=A(this).constructor;e=Reflect.construct(r,arguments,n)}else e=r.apply(this,arguments);return w(this,e)});function n(){var e;v(this,n);for(var t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return S(m(e=r.call.apply(r,[this].concat(o))),"state",{pdf:null}),S(m(e),"viewer",{scrollPageIntoView:function(t){var r=t.pageNumber,n=e.props.onItemClick;if(n)n({pageNumber:r});else{var o=e.pages[r-1];o?o.scrollIntoView():Y("Warning: An internal link leading to page ".concat(r," was clicked, but neither <Document> was provided with onItemClick nor it was able to find the page within itself. Either provide onItemClick to <Document> and handle navigating by yourself or ensure that all pages are rendered within <Document>."))}}}),S(m(e),"linkService",new F),S(m(e),"loadDocument",p(h.a.mark((function t(){var r,n,o,i,a,u,c;return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=null,t.prev=1,t.next=4,e.findDocumentSource();case 4:r=t.sent,e.onSourceSuccess(),t.next=11;break;case 8:t.prev=8,t.t0=t.catch(1),e.onSourceError(t.t0);case 11:if(r){t.next=13;break}return t.abrupt("return");case 13:return e.setState((function(e){return e.pdf?{pdf:null}:null})),n=e.props,o=n.options,i=n.onLoadProgress,a=n.onPassword,t.prev=15,K(e.runningTask),e.loadingTask=s.a.getDocument(le({},r,{},o)),e.loadingTask.onPassword=a,i&&(e.loadingTask.onProgress=i),u=P()(e.loadingTask.promise),e.runningTask=u,t.next=24,u.promise;case 24:c=t.sent,e.setState((function(e){return e.pdf&&e.pdf.fingerprint===c.fingerprint?null:{pdf:c}}),e.onLoadSuccess),t.next=31;break;case 28:t.prev=28,t.t1=t.catch(15),e.onLoadError(t.t1);case 31:case"end":return t.stop()}}),t,null,[[1,8],[15,28]])})))),S(m(e),"setupLinkService",(function(){e.linkService.setViewer(e.viewer);var t=m(e);Object.defineProperty(e.linkService,"externalLinkTarget",{get:function(){switch(t.props.externalLinkTarget){case"_self":return 1;case"_blank":return 2;case"_parent":return 3;case"_top":return 4;default:return 0}}})})),S(m(e),"onSourceSuccess",(function(){var t=e.props.onSourceSuccess;t&&t()})),S(m(e),"onSourceError",(function(t){X(t);var r=e.props.onSourceError;r&&r(t)})),S(m(e),"onLoadSuccess",(function(){var t=e.props.onLoadSuccess,r=e.state.pdf;t&&t(r),e.pages=new Array(r.numPages),e.linkService.setDocument(r)})),S(m(e),"onLoadError",(function(t){e.setState({pdf:!1}),X(t);var r=e.props.onLoadError;r&&r(t)})),S(m(e),"findDocumentSource",p(h.a.mark((function t(){var r,n,o,i,s;return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=e.props.file){t.next=3;break}return t.abrupt("return",null);case 3:if("string"!=typeof r){t.next=9;break}if(!G(r)){t.next=7;break}return n=z(r),t.abrupt("return",{data:n});case 7:return V(),t.abrupt("return",{url:r});case 9:if(!(r instanceof a.PDFDataRangeTransport)){t.next=11;break}return t.abrupt("return",{range:r});case 11:if(!q(r)){t.next=13;break}return t.abrupt("return",{data:r});case 13:if(!D){t.next=19;break}if(!B(r)&&!W(r)){t.next=19;break}return t.next=17,Z(r);case 17:return t.t0=t.sent,t.abrupt("return",{data:t.t0});case 19:if("object"===l(r)){t.next=21;break}throw new Error("Invalid parameter in file, need either Uint8Array, string or a parameter object");case 21:if(r.url||r.data||r.range){t.next=23;break}throw new Error("Invalid parameter object: need either .data, .range or .url");case 23:if("string"!=typeof r.url){t.next=29;break}if(!G(r.url)){t.next=28;break}return o=r.url,i=c(r,["url"]),s=z(o),t.abrupt("return",le({data:s},i));case 28:V();case 29:return t.abrupt("return",r);case 30:case"end":return t.stop()}}),t)})))),S(m(e),"registerPage",(function(t,r){e.pages[t]=r})),S(m(e),"unregisterPage",(function(t){delete e.pages[t]})),e}return y(n,[{key:"componentDidMount",value:function(){this.loadDocument(),this.setupLinkService()}},{key:"componentDidUpdate",value:function(e){this.props.file!==e.file&&this.loadDocument()}},{key:"componentWillUnmount",value:function(){this.loadingTask&&this.loadingTask.destroy(),K(this.runningTask)}},{key:"renderChildren",value:function(){var e=this.props.children;return(o.a.createElement(L.Provider,{value:this.childContext},e))}},{key:"renderContent",value:function(){var e=this.props.file,t=this.state.pdf;if(!e){var r=this.props.noData;return(o.a.createElement(I,{type:"no-data"},"function"==typeof r?r():r))}if(null===t){var n=this.props.loading;return(o.a.createElement(I,{type:"loading"},"function"==typeof n?n():n))}if(!1===t){var i=this.props.error;return(o.a.createElement(I,{type:"error"},"function"==typeof i?i():i))}return this.renderChildren()}},{key:"render",value:function(){var e=this.props,t=e.className,r=e.inputRef;return(o.a.createElement("div",u({className:O()("react-pdf__Document",t),ref:r},this.eventProps),this.renderContent()))}},{key:"childContext",get:function(){var e=this.linkService,t=this.registerPage,r=this.unregisterPage,n=this.props,o=n.renderMode,i=n.rotate;return{linkService:e,pdf:this.state.pdf,registerPage:t,renderMode:o,rotate:i,unregisterPage:r}}},{key:"eventProps",get:function(){var e=this;return E()(this.props,(function(){return e.state.pdf}))}}]),n}(n.PureComponent);he.defaultProps={error:"Failed to load PDF file.",loading:"Loading PDF…",noData:"No PDF file specified.",onPassword:function(e,t){switch(t){case j.NEED_PASSWORD:e(prompt("Enter the password to open this PDF file."));break;case j.INCORRECT_PASSWORD:e(prompt("Invalid password. Please try again."))}}},he.propTypes=le({children:x.a.node,className:ne,error:x.a.node,file:W,inputRef:x.a.func,loading:x.a.node,noData:x.a.node,onItemClick:x.a.func,onLoadError:x.a.func,onLoadProgress:x.a.func,onLoadSuccess:x.a.func,onPassword:x.a.func,onSourceError:x.a.func,onSourceSuccess:x.a.func,rotate:x.a.number},te);var de=Object(n.createContext)(null);function pe(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],n=!0,o=!1,i=void 0;try{for(var a,s=e[Symbol.iterator]();!(n=(a=s.next()).done)&&(r.push(a.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==s.return||s.return()}finally{if(o)throw i}}return r}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}var ve=function(){function e(t){var r=t.num,n=t.gen;v(this,e),this.num=r,this.gen=n}return y(e,[{key:"toString",value:function(){var e="".concat(this.num,"R");return 0!==this.gen&&(e+=this.gen),e}}]),e}();function ge(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var ye=function(e){_(n,e);var t,r=(t=n,function(){var e,r=A(t);if(ge()){var n=A(this).constructor;e=Reflect.construct(r,arguments,n)}else e=r.apply(this,arguments);return w(this,e)});function n(){var e;v(this,n);for(var t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return S(m(e=r.call.apply(r,[this].concat(o))),"getDestination",p(h.a.mark((function t(){var r,n,o;return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=e.props,n=r.item,o=r.pdf,N(e.destination)){t.next=9;break}if("string"!=typeof n.dest){t.next=8;break}return t.next=5,o.getDestination(n.dest);case 5:e.destination=t.sent,t.next=9;break;case 8:e.destination=n.dest;case 9:return t.abrupt("return",e.destination);case 10:case"end":return t.stop()}}),t)})))),S(m(e),"getPageIndex",p(h.a.mark((function t(){var r,n,o,i;return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=e.props.pdf,N(e.pageIndex)){t.next=10;break}return t.next=4,e.getDestination();case 4:if(!(n=t.sent)){t.next=10;break}return o=pe(n,1),i=o[0],t.next=9,r.getPageIndex(new ve(i));case 9:e.pageIndex=t.sent;case 10:return t.abrupt("return",e.pageIndex);case 11:case"end":return t.stop()}}),t)})))),S(m(e),"getPageNumber",p(h.a.mark((function t(){return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(N(e.pageNumber)){t.next=5;break}return t.next=3,e.getPageIndex();case 3:t.t0=t.sent,e.pageNumber=t.t0+1;case 5:return t.abrupt("return",e.pageNumber);case 6:case"end":return t.stop()}}),t)})))),S(m(e),"onClick",function(){var t=p(h.a.mark((function t(r){var n,o,i;return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return n=e.props.onClick,r.preventDefault(),t.next=4,e.getPageIndex();case 4:return o=t.sent,t.next=7,e.getPageNumber();case 7:i=t.sent,n&&n({pageIndex:o,pageNumber:i});case 9:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()),e}return y(n,[{key:"renderSubitems",value:function(){var e=this.props,t=e.item,r=c(e,["item"]);if(!t.items||!t.items.length)return null;var i=t.items;return(o.a.createElement("ul",null,i.map((function(e,t){return o.a.createElement(n,u({key:"string"==typeof e.destination?e.destination:t,item:e},r))}))))}},{key:"render",value:function(){var e=this.props.item;return(o.a.createElement("li",null,o.a.createElement("a",{href:"#",onClick:this.onClick},e.title),this.renderSubitems()))}}]),n}(n.PureComponent),me=x.a.oneOfType([x.a.string,x.a.arrayOf(x.a.any)]);ye.propTypes={item:x.a.shape({dest:me,items:x.a.arrayOf(x.a.shape({dest:me,title:x.a.string})),title:x.a.string}).isRequired,onClick:x.a.func,pdf:ae.isRequired};var be=function(e){return o.a.createElement(L.Consumer,null,(function(t){return o.a.createElement(de.Consumer,null,(function(r){return o.a.createElement(ye,u({},t,r,e))}))}))};function _e(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function we(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var Ae=function(e){_(n,e);var t,r=(t=n,function(){var e,r=A(t);if(we()){var n=A(this).constructor;e=Reflect.construct(r,arguments,n)}else e=r.apply(this,arguments);return w(this,e)});function n(){var e;v(this,n);for(var t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return S(m(e=r.call.apply(r,[this].concat(o))),"state",{outline:null}),S(m(e),"loadOutline",p(h.a.mark((function t(){var r,n,o;return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.props.pdf,e.setState((function(e){return e.outline?{outline:null}:null})),t.prev=2,n=P()(r.getOutline()),e.runningTask=n,t.next=7,n.promise;case 7:o=t.sent,e.setState({outline:o},e.onLoadSuccess),t.next=14;break;case 11:t.prev=11,t.t0=t.catch(2),e.onLoadError(t.t0);case 14:case"end":return t.stop()}}),t,null,[[2,11]])})))),S(m(e),"onLoadSuccess",(function(){var t=e.props.onLoadSuccess,r=e.state.outline;t&&t(r)})),S(m(e),"onLoadError",(function(t){e.setState({outline:!1}),X(t);var r=e.props.onLoadError;r&&r(t)})),S(m(e),"onItemClick",(function(t){var r=t.pageIndex,n=t.pageNumber,o=e.props.onItemClick;o&&o({pageIndex:r,pageNumber:n})})),e}return y(n,[{key:"componentDidMount",value:function(){if(!this.props.pdf)throw new Error("Attempted to load an outline, but no document was specified.");this.loadOutline()}},{key:"componentDidUpdate",value:function(e){var t=this.props.pdf;e.pdf&&t!==e.pdf&&this.loadOutline()}},{key:"componentWillUnmount",value:function(){K(this.runningTask)}},{key:"renderOutline",value:function(){var e=this.state.outline;return(o.a.createElement("ul",null,e.map((function(e,t){return o.a.createElement(be,{key:"string"==typeof e.destination?e.destination:t,item:e})}))))}},{key:"render",value:function(){var e=this.props.pdf,t=this.state.outline;if(!e||!t)return null;var r=this.props,n=r.className,i=r.inputRef;return(o.a.createElement("div",u({className:O()("react-pdf__Outline",n),ref:i},this.eventProps),o.a.createElement(de.Provider,{value:this.childContext},this.renderOutline())))}},{key:"childContext",get:function(){return{onClick:this.onItemClick}}},{key:"eventProps",get:function(){var e=this;return E()(this.props,(function(){return e.state.outline}))}}]),n}(n.PureComponent);Ae.propTypes=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?_e(Object(r),!0).forEach((function(t){S(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):_e(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({className:ne,inputRef:x.a.func,onItemClick:x.a.func,onLoadError:x.a.func,onLoadSuccess:x.a.func,pdf:ae},te);o.a.forwardRef((function(e,t){return o.a.createElement(L.Consumer,null,(function(r){return o.a.createElement(Ae,u({ref:t},r,e))}))}));var Se=Object(n.createContext)(null);function ke(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var xe=function(e){_(n,e);var t,r=(t=n,function(){var e,r=A(t);if(ke()){var n=A(this).constructor;e=Reflect.construct(r,arguments,n)}else e=r.apply(this,arguments);return w(this,e)});function n(){var e;v(this,n);for(var t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return S(m(e=r.call.apply(r,[this].concat(o))),"onRenderSuccess",(function(){e.renderer=null;var t=e.props,r=t.onRenderSuccess,n=t.page,o=t.scale;r&&r(Q(n,o))})),S(m(e),"onRenderError",(function(t){if(!J(t)){X(t);var r=e.props.onRenderError;r&&r(t)}})),S(m(e),"drawPageOnCanvas",(function(){var t=m(e).canvasLayer;if(!t)return null;var r=m(e),n=r.renderViewport,o=r.viewport,i=e.props,a=i.page,s=i.renderInteractiveForms;t.width=n.width,t.height=n.height,t.style.width="".concat(Math.floor(o.width),"px"),t.style.height="".concat(Math.floor(o.height),"px");var u={get canvasContext(){return t.getContext("2d")},viewport:n,renderInteractiveForms:s};return e.cancelRenderingTask(),e.renderer=a.render(u),e.renderer.promise.then(e.onRenderSuccess).catch(e.onRenderError)})),e}return y(n,[{key:"componentDidMount",value:function(){this.drawPageOnCanvas()}},{key:"componentDidUpdate",value:function(e){var t=this.props,r=t.page;t.renderInteractiveForms!==e.renderInteractiveForms&&(r.cleanup(),this.drawPageOnCanvas())}},{key:"componentWillUnmount",value:function(){this.cancelRenderingTask(),this.canvasLayer&&(this.canvasLayer.width=0,this.canvasLayer.height=0,this.canvasLayer=null)}},{key:"cancelRenderingTask",value:function(){this.renderer&&this.renderer._internalRenderTask.running&&this.renderer._internalRenderTask.cancel()}},{key:"render",value:function(){var e=this;return(o.a.createElement("canvas",{className:"react-pdf__Page__canvas",ref:function(t){e.canvasLayer=t},style:{display:"block",userSelect:"none"}}))}},{key:"renderViewport",get:function(){var e=this.props,t=e.page,r=e.rotate,n=e.scale,o=D&&window.devicePixelRatio||1;return t.getViewport({scale:n*o,rotation:r})}},{key:"viewport",get:function(){var e=this.props,t=e.page,r=e.rotate,n=e.scale;return t.getViewport({scale:n,rotation:r})}}]),n}(n.PureComponent);function Re(e){return o.a.createElement(Se.Consumer,null,(function(t){return o.a.createElement(xe,u({},t,e))}))}function Ee(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}xe.propTypes={onRenderError:x.a.func,onRenderSuccess:x.a.func,page:ie.isRequired,renderInteractiveForms:x.a.bool,rotate:ue,scale:x.a.number};var Ce=function(e){_(n,e);var t,r=(t=n,function(){var e,r=A(t);if(Ee()){var n=A(this).constructor;e=Reflect.construct(r,arguments,n)}else e=r.apply(this,arguments);return w(this,e)});function n(){var e;v(this,n);for(var t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return S(m(e=r.call.apply(r,[this].concat(o))),"state",{svg:null}),S(m(e),"onRenderSuccess",(function(){e.renderer=null;var t=e.props,r=t.onRenderSuccess,n=t.page,o=t.scale;r&&r(Q(n,o))})),S(m(e),"onRenderError",(function(t){if(!J(t)){X(t);var r=e.props.onRenderError;r&&r(t)}})),S(m(e),"renderSVG",(function(){var t=e.props.page;return e.renderer=t.getOperatorList(),e.renderer.then((function(r){var n=new s.a.SVGGraphics(t.commonObjs,t.objs);e.renderer=n.getSVG(r,e.viewport).then((function(t){e.setState({svg:t},e.onRenderSuccess)})).catch(e.onRenderError)})).catch(e.onRenderError)})),S(m(e),"drawPageOnContainer",(function(t){var r=e.state.svg;if(t&&r){t.firstElementChild||t.appendChild(r);var n=e.viewport,o=n.width,i=n.height;r.setAttribute("width",o),r.setAttribute("height",i)}})),e}return y(n,[{key:"componentDidMount",value:function(){this.renderSVG()}},{key:"render",value:function(){var e=this,t=this.viewport,r=t.width,n=t.height;return o.a.createElement("div",{className:"react-pdf__Page__svg",ref:function(t){return e.drawPageOnContainer(t)},style:{display:"block",backgroundColor:"white",overflow:"hidden",width:r,height:n,userSelect:"none"}})}},{key:"viewport",get:function(){var e=this.props,t=e.page,r=e.rotate,n=e.scale;return t.getViewport({scale:n,rotation:r})}}]),n}(n.PureComponent);function Pe(e){return o.a.createElement(Se.Consumer,null,(function(t){return o.a.createElement(Ce,u({},t,e))}))}function Te(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}Ce.propTypes={onRenderError:x.a.func,onRenderSuccess:x.a.func,page:ie.isRequired,rotate:ue,scale:x.a.number};var Oe=function(e){_(a,e);var t,r,n,i=(t=a,function(){var e,r=A(t);if(Te()){var n=A(this).constructor;e=Reflect.construct(r,arguments,n)}else e=r.apply(this,arguments);return w(this,e)});function a(){var e;v(this,a);for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return S(m(e=i.call.apply(i,[this].concat(r))),"getElementWidth",(function(t){var r=m(e).sideways;return t.getBoundingClientRect()[r?"height":"width"]})),e}return y(a,[{key:"componentDidMount",value:function(){this.alignTextItem()}},{key:"componentDidUpdate",value:function(){this.alignTextItem()}},{key:"getFontData",value:(n=p(h.a.mark((function e(t){var r,n;return h.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return r=this.props.page,e.next=3,new Promise((function(e){r.commonObjs.get(t,e)}));case 3:return n=e.sent,e.abrupt("return",n);case 5:case"end":return e.stop()}}),e,this)}))),function(e){return n.apply(this,arguments)})},{key:"alignTextItem",value:(r=p(h.a.mark((function e(){var t,r,n,o,i,a,s,u,c,l,f;return h.a.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(t=this.item){e.next=3;break}return e.abrupt("return");case 3:return t.style.transform="",r=this.props,n=r.fontName,o=r.scale,i=r.width,t.style.fontFamily="".concat(n,", sans-serif"),e.next=8,this.getFontData(n);case 8:a=e.sent,s=a?a.fallbackName:"sans-serif",t.style.fontFamily="".concat(n,", ").concat(s),u=i*o,c=this.getElementWidth(t),l="scaleX(".concat(u/c,")"),(f=a?a.ascent:0)&&(l+=" translateY(".concat(100*(1-f),"%)")),t.style.transform=l,t.style.WebkitTransform=l;case 18:case"end":return e.stop()}}),e,this)}))),function(){return r.apply(this,arguments)})},{key:"render",value:function(){var e=this,t=this.fontSize,r=this.top,n=this.left,i=this.props,a=i.customTextRenderer,s=i.scale,u=i.str;return o.a.createElement("span",{ref:function(t){e.item=t},style:{height:"1em",fontFamily:"sans-serif",fontSize:"".concat(t*s,"px"),position:"absolute",top:"".concat(r*s,"px"),left:"".concat(n*s,"px"),transformOrigin:"left bottom",whiteSpace:"pre",pointerEvents:"all"}},a?a(this.props):u)}},{key:"unrotatedViewport",get:function(){var e=this.props,t=e.page,r=e.scale;return t.getViewport({scale:r})}},{key:"rotate",get:function(){var e=this.props,t=e.page;return e.rotate-t.rotate}},{key:"sideways",get:function(){return this.rotate%180!=0}},{key:"defaultSideways",get:function(){return this.unrotatedViewport.rotation%180!=0}},{key:"fontSize",get:function(){var e=this.props.transform,t=this.defaultSideways,r=pe(e,2),n=r[0],o=r[1];return t?o:n}},{key:"top",get:function(){var e=this.props.transform,t=this.unrotatedViewport,r=this.defaultSideways,n=pe(e,6),o=n[2],i=n[3],a=n[4],s=n[5],u=pe(t.viewBox,4),c=u[1],l=u[3];return r?a+o+c:l-(s+i)}},{key:"left",get:function(){var e=this.props.transform,t=this.unrotatedViewport,r=this.defaultSideways,n=pe(e,6),o=n[4],i=n[5],a=pe(t.viewBox,1)[0];return r?i-a:o-a}}]),a}(n.PureComponent);function Le(e){return o.a.createElement(Se.Consumer,null,(function(t){return o.a.createElement(Oe,u({},t,e))}))}function Ie(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}Oe.propTypes={customTextRenderer:x.a.func,fontName:x.a.string.isRequired,itemIndex:x.a.number.isRequired,page:ie.isRequired,rotate:ue,scale:x.a.number,str:x.a.string.isRequired,transform:x.a.arrayOf(x.a.number).isRequired,width:x.a.number.isRequired};var Fe=function(e){_(n,e);var t,r=(t=n,function(){var e,r=A(t);if(Ie()){var n=A(this).constructor;e=Reflect.construct(r,arguments,n)}else e=r.apply(this,arguments);return w(this,e)});function n(){var e;v(this,n);for(var t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return S(m(e=r.call.apply(r,[this].concat(o))),"state",{textItems:null}),S(m(e),"loadTextItems",p(h.a.mark((function t(){var r,n,o,i;return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.props.page,t.prev=1,n=P()(r.getTextContent()),e.runningTask=n,t.next=6,n.promise;case 6:o=t.sent,i=o.items,e.setState({textItems:i},e.onLoadSuccess),t.next=14;break;case 11:t.prev=11,t.t0=t.catch(1),e.onLoadError(t.t0);case 14:case"end":return t.stop()}}),t,null,[[1,11]])})))),S(m(e),"onLoadSuccess",(function(){var t=e.props.onGetTextSuccess,r=e.state.textItems;t&&t(r)})),S(m(e),"onLoadError",(function(t){e.setState({textItems:!1}),X(t);var r=e.props.onGetTextError;r&&r(t)})),e}return y(n,[{key:"componentDidMount",value:function(){if(!this.props.page)throw new Error("Attempted to load page text content, but no page was specified.");this.loadTextItems()}},{key:"componentDidUpdate",value:function(e){var t=this.props.page;e.page&&t!==e.page&&this.loadTextItems()}},{key:"componentWillUnmount",value:function(){K(this.runningTask)}},{key:"renderTextItems",value:function(){var e=this.state.textItems;return e?e.map((function(e,t){return o.a.createElement(Le,u({key:t,itemIndex:t},e))})):null}},{key:"render",value:function(){var e=this.unrotatedViewport,t=this.rotate;return(o.a.createElement("div",{className:"react-pdf__Page__textContent",style:{position:"absolute",top:"50%",left:"50%",width:"".concat(e.width,"px"),height:"".concat(e.height,"px"),color:"transparent",transform:"translate(-50%, -50%) rotate(".concat(t,"deg)"),WebkitTransform:"translate(-50%, -50%) rotate(".concat(t,"deg)"),pointerEvents:"none"}},this.renderTextItems()))}},{key:"unrotatedViewport",get:function(){var e=this.props,t=e.page,r=e.scale;return t.getViewport({scale:r})}},{key:"rotate",get:function(){var e=this.props,t=e.page;return e.rotate-t.rotate}}]),n}(n.PureComponent);function je(e){return o.a.createElement(Se.Consumer,null,(function(t){return o.a.createElement(Fe,u({},t,e))}))}function De(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}Fe.propTypes={onGetTextError:x.a.func,onGetTextSuccess:x.a.func,page:ie.isRequired,rotate:ue,scale:x.a.number};var Me=function(e){_(n,e);var t,r=(t=n,function(){var e,r=A(t);if(De()){var n=A(this).constructor;e=Reflect.construct(r,arguments,n)}else e=r.apply(this,arguments);return w(this,e)});function n(){var e;v(this,n);for(var t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return S(m(e=r.call.apply(r,[this].concat(o))),"state",{annotations:null}),S(m(e),"loadAnnotations",p(h.a.mark((function t(){var r,n,o;return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return r=e.props.page,t.prev=1,n=P()(r.getAnnotations()),e.runningTask=n,t.next=6,n.promise;case 6:o=t.sent,e.setState({annotations:o},e.onLoadSuccess),t.next=13;break;case 10:t.prev=10,t.t0=t.catch(1),e.onLoadError(t.t0);case 13:case"end":return t.stop()}}),t,null,[[1,10]])})))),S(m(e),"onLoadSuccess",(function(){var t=e.props.onGetAnnotationsSuccess,r=e.state.annotations;t&&t(r)})),S(m(e),"onLoadError",(function(t){e.setState({annotations:!1}),X(t);var r=e.props.onGetAnnotationsError;r&&r(t)})),S(m(e),"onRenderSuccess",(function(){var t=e.props.onRenderAnnotationLayerSuccess;t&&t()})),S(m(e),"onRenderError",(function(t){X(t);var r=e.props.onRenderAnnotationLayerError;r&&r(t)})),e}return y(n,[{key:"componentDidMount",value:function(){if(!this.props.page)throw new Error("Attempted to load page annotations, but no page was specified.");this.loadAnnotations()}},{key:"componentDidUpdate",value:function(e){var t=this.props,r=t.page,n=t.renderInteractiveForms;(e.page&&r!==e.page||n!==e.renderInteractiveForms)&&this.loadAnnotations()}},{key:"componentWillUnmount",value:function(){K(this.runningTask)}},{key:"renderAnnotationLayer",value:function(){var e=this.state.annotations;if(e){var t=this.props,r=t.linkService,n=t.page,o=t.renderInteractiveForms,i=this.viewport.clone({dontFlip:!0}),a={annotations:e,div:this.annotationLayer,linkService:r,page:n,renderInteractiveForms:o,viewport:i};this.annotationLayer.innerHTML="";try{s.a.AnnotationLayer.render(a),this.onRenderSuccess()}catch(e){this.onRenderError(e)}}}},{key:"render",value:function(){var e=this;return(o.a.createElement("div",{className:"react-pdf__Page__annotations annotationLayer",ref:function(t){e.annotationLayer=t}},this.renderAnnotationLayer()))}},{key:"viewport",get:function(){var e=this.props,t=e.page,r=e.rotate,n=e.scale;return t.getViewport({scale:n,rotation:r})}}]),n}(n.PureComponent);Me.propTypes={linkService:oe.isRequired,onGetAnnotationsError:x.a.func,onGetAnnotationsSuccess:x.a.func,onRenderAnnotationLayerError:x.a.func,onRenderAnnotationLayerSuccess:x.a.func,page:ie,renderInteractiveForms:x.a.bool,rotate:ue,scale:x.a.number};var Ne=function(e){return o.a.createElement(L.Consumer,null,(function(t){return o.a.createElement(Se.Consumer,null,(function(r){return o.a.createElement(Me,u({},t,r,e))}))}))};function Ue(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function qe(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var Be=function(e){_(n,e);var t,r=(t=n,function(){var e,r=A(t);if(qe()){var n=A(this).constructor;e=Reflect.construct(r,arguments,n)}else e=r.apply(this,arguments);return w(this,e)});function n(){var e;v(this,n);for(var t=arguments.length,o=new Array(t),i=0;i<t;i++)o[i]=arguments[i];return S(m(e=r.call.apply(r,[this].concat(o))),"state",{page:null}),S(m(e),"onLoadSuccess",(function(){var t=e.props,r=t.onLoadSuccess,n=t.registerPage,o=e.state.page;r&&r(Q(o,e.scale)),n&&n(e.pageIndex,e.ref)})),S(m(e),"onLoadError",(function(t){X(t);var r=e.props.onLoadError;r&&r(t)})),S(m(e),"loadPage",p(h.a.mark((function t(){var r,n,o,i;return h.a.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(r=e.props.pdf,n=e.getPageNumber()){t.next=4;break}return t.abrupt("return");case 4:return e.setState((function(e){return e.page?{page:null}:null})),t.prev=5,o=P()(r.getPage(n)),e.runningTask=o,t.next=10,o.promise;case 10:i=t.sent,e.setState({page:i},e.onLoadSuccess),t.next=18;break;case 14:t.prev=14,t.t0=t.catch(5),e.setState({page:!1}),e.onLoadError(t.t0);case 18:case"end":return t.stop()}}),t,null,[[5,14]])})))),e}return y(n,[{key:"componentDidMount",value:function(){if(!this.props.pdf)throw new Error("Attempted to load a page, but no document was specified.");this.loadPage()}},{key:"componentDidUpdate",value:function(e){var t=this.props.pdf;if(e.pdf&&t!==e.pdf||this.getPageNumber()!==this.getPageNumber(e)){var r=this.props.unregisterPage;r&&r(this.getPageIndex(e)),this.loadPage()}}},{key:"componentWillUnmount",value:function(){var e=this.props.unregisterPage;e&&e(this.pageIndex),K(this.runningTask)}},{key:"getPageIndex",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props;return U(e.pageNumber)?e.pageNumber-1:U(e.pageIndex)?e.pageIndex:null}},{key:"getPageNumber",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.props;return U(e.pageNumber)?e.pageNumber:U(e.pageIndex)?e.pageIndex+1:null}},{key:"renderMainLayer",value:function(){switch(this.props.renderMode){case"none":return null;case"svg":return o.a.createElement(Pe,{key:"".concat(this.pageKeyNoScale,"_svg")});case"canvas":default:return o.a.createElement(Re,{key:"".concat(this.pageKey,"_canvas")})}}},{key:"renderTextLayer",value:function(){var e=this.props.renderTextLayer;return e?o.a.createElement(je,{key:"".concat(this.pageKey,"_text")}):null}},{key:"renderAnnotationLayer",value:function(){var e=this.props.renderAnnotationLayer;return e?o.a.createElement(Ne,{key:"".concat(this.pageKey,"_annotations")}):null}},{key:"renderChildren",value:function(){var e=this.props.children;return(o.a.createElement(Se.Provider,{value:this.childContext},this.renderMainLayer(),this.renderTextLayer(),this.renderAnnotationLayer(),e))}},{key:"renderContent",value:function(){var e=this.pageNumber,t=this.props.pdf,r=this.state.page;if(!e){var n=this.props.noData;return(o.a.createElement(I,{type:"no-data"},"function"==typeof n?n():n))}if(null===t||null===r){var i=this.props.loading;return(o.a.createElement(I,{type:"loading"},"function"==typeof i?i():i))}if(!1===t||!1===r){var a=this.props.error;return(o.a.createElement(I,{type:"error"},"function"==typeof a?a():a))}return this.renderChildren()}},{key:"render",value:function(){var e=this,t=this.pageNumber,r=this.props.className;return o.a.createElement("div",u({className:O()("react-pdf__Page",r),"data-page-number":t,ref:function(t){var r=e.props.inputRef;r&&r(t),e.ref=t},style:{position:"relative"}},this.eventProps),this.renderContent())}},{key:"childContext",get:function(){var e=this.state.page;if(!e)return{};var t=this.props;return{customTextRenderer:t.customTextRenderer,onGetAnnotationsError:t.onGetAnnotationsError,onGetAnnotationsSuccess:t.onGetAnnotationsSuccess,onGetTextError:t.onGetTextError,onGetTextSuccess:t.onGetTextSuccess,onRenderAnnotationLayerError:t.onRenderAnnotationLayerError,onRenderAnnotationLayerSuccess:t.onRenderAnnotationLayerSuccess,onRenderError:t.onRenderError,onRenderSuccess:t.onRenderSuccess,page:e,renderInteractiveForms:t.renderInteractiveForms,rotate:this.rotate,scale:this.scale}}},{key:"pageIndex",get:function(){return this.getPageIndex()}},{key:"pageNumber",get:function(){return this.getPageNumber()}},{key:"rotate",get:function(){var e=this.props.rotate;if(U(e))return e;var t=this.state.page;return t?t.rotate:null}},{key:"scale",get:function(){var e=this.state.page;if(!e)return null;var t=this.props,r=t.scale,n=t.width,o=t.height,i=this.rotate,a=1,s=null===r?1:r;if(n||o){var u=e.getViewport({scale:1,rotation:i});a=n?n/u.width:o/u.height}return s*a}},{key:"eventProps",get:function(){var e=this;return E()(this.props,(function(){var t=e.state.page;return t?Q(t,e.scale):t}))}},{key:"pageKey",get:function(){var e=this.state.page;return"".concat(e.pageIndex,"@").concat(this.scale,"/").concat(this.rotate)}},{key:"pageKeyNoScale",get:function(){var e=this.state.page;return"".concat(e.pageIndex,"/").concat(this.rotate)}}]),n}(n.PureComponent);Be.defaultProps={error:"Failed to load the page.",loading:"Loading page…",noData:"No page specified.",renderAnnotationLayer:!0,renderInteractiveForms:!1,renderMode:"canvas",renderTextLayer:!0,scale:1},Be.propTypes=function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?Ue(Object(r),!0).forEach((function(t){S(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):Ue(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}({children:x.a.node,className:ne,customTextRenderer:x.a.func,error:x.a.node,height:x.a.number,inputRef:x.a.func,loading:x.a.node,noData:x.a.node,onGetTextError:x.a.func,onGetTextSuccess:x.a.func,onLoadError:x.a.func,onLoadSuccess:x.a.func,onRenderError:x.a.func,onRenderSuccess:x.a.func,pageIndex:function(e,t,r){var n=e[t],o=e.pageNumber,i=e.pdf;if(!N(i))return null;if(N(n)){if("number"!=typeof n)return new Error("`".concat(t,"` of type `").concat(l(n),"` supplied to `").concat(r,"`, expected `number`."));if(n<0)return new Error("Expected `".concat(t,"` to be greater or equal to 0."));var a=i.numPages;if(n+1>a)return new Error("Expected `".concat(t,"` to be less or equal to ").concat(a-1,"."))}else if(!N(o))return new Error("`".concat(t,"` not supplied. Either pageIndex or pageNumber must be supplied to `").concat(r,"`."));return null},pageNumber:function(e,t,r){var n=e[t],o=e.pageIndex,i=e.pdf;if(!N(i))return null;if(N(n)){if("number"!=typeof n)return new Error("`".concat(t,"` of type `").concat(l(n),"` supplied to `").concat(r,"`, expected `number`."));if(n<1)return new Error("Expected `".concat(t,"` to be greater or equal to 1."));var a=i.numPages;if(n>a)return new Error("Expected `".concat(t,"` to be less or equal to ").concat(a,"."))}else if(!N(o))return new Error("`".concat(t,"` not supplied. Either pageIndex or pageNumber must be supplied to `").concat(r,"`."));return null},pdf:ae,registerPage:x.a.func,renderAnnotationLayer:x.a.bool,renderInteractiveForms:x.a.bool,renderMode:se,renderTextLayer:x.a.bool,rotate:ue,scale:x.a.number,unregisterPage:x.a.func,width:x.a.number},te);var We=o.a.forwardRef((function(e,t){return o.a.createElement(L.Consumer,null,(function(r){return o.a.createElement(Be,u({ref:t},r,e))}))}));M&&Y("You are running React-PDF from your local file system. PDF.js Worker may fail to load due to browser's security policies. If you're on Google Chrome, you can use --allow-file-access-from-files flag for debugging purposes."),s.a.GlobalWorkerOptions.workerSrc="pdf.worker.js";var Ge=r(6),ze=r.n(Ge),He=()=>n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"feather feather-arrow-down"},n.createElement("line",{x1:"12",y1:"5",x2:"12",y2:"19"}),n.createElement("polyline",{points:"19 12 12 19 5 12"})),Ye=()=>n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:""},n.createElement("polyline",{points:"5 12 19 12"}),n.createElement("polyline",{points:"12 5 12 19"})),Xe=()=>n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:""},n.createElement("line",{x1:"5",y1:"12",x2:"19",y2:"12"})),Ve=()=>n.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",strokeLinecap:"round",strokeLinejoin:"round",className:"feather feather-arrow-up"},n.createElement("line",{x1:"12",y1:"19",x2:"12",y2:"5"}),n.createElement("polyline",{points:"5 12 12 5 19 12"}));r(25);const Ke=document.querySelector("#react-container"),Qe=s.a;Qe.GlobalWorkerOptions.workerSrc=`//cdnjs.cloudflare.com/ajax/libs/pdf.js/${Qe.version}/pdf.worker.js`;const Je={cMapUrl:`//cdn.jsdelivr.net/npm/pdfjs-dist@${Qe.version}/cmaps/`,cMapPacked:!0};class Ze extends n.Component{constructor(){super(...arguments),this.state={numPages:null,currentPage:1,ready:!0,pageLoaded:!1,scale:1,error:void 0},this.MAX_SCALE=2,this.__zoomEvent=!1,this.onDocumentLoadSuccess=({numPages:e})=>{this.setState({numPages:e})},this.onError=e=>{console.error(e),this.setState({error:e})},this.zoomOut=e=>{e.preventDefault(),this.__zoomEvent||ze()(this.zOut)},this.zoomIn=e=>{e.preventDefault(),this.__zoomEvent||ze()(this.zIn)},this.zIn=()=>{this.state.scale<=this.MAX_SCALE-.25&&(this.__zoomEvent=!0,this.setState(e=>({scale:e.scale+.25})))},this.zOut=()=>{this.state.scale>=.75&&(this.__zoomEvent=!0,this.setState(e=>({scale:e.scale-.25})))},this.up=()=>{const{currentPage:e}=this.state;if(e>1){const t=e-1;this.setState({currentPage:t})}Object(Ge.cancel)(this.up)},this.down=()=>{const{currentPage:e,numPages:t}=this.state;if(e<t){const t=e+1;this.setState({currentPage:t})}Object(Ge.cancel)(this.down)},this.goUp=e=>{e.preventDefault(),ze()(this.up)},this.goDown=e=>{e.preventDefault(),ze()(this.down)},this.renderPage=e=>n.createElement(We,{loading:" ",key:`page_${e}`,pageNumber:e,onLoadError:this.onError,onRenderError:this.onError,onGetTextError:this.onError,onGetAnnotationsError:this.onError,width:90*document.body.clientWidth/100,onRenderSuccess:()=>{this.__zoomEvent=!1},scale:this.state.scale}),this.renderPages=()=>Array.from(Array(this.state.numPages).keys()).map(e=>n.createElement("div",{key:`page-${e.toString()}`,style:{marginBottom:10}},this.renderPage(e+1)))}static getDerivedStateFromError(e){return{error:e}}render(){var e,t,r,o,i,a,s,u,c,l;const{numPages:f,currentPage:h,error:d}=this.state,{customStyle:p}=this.props;return d?n.createElement("p",null,d.message?d.message:"Sorry an error occurred!"):n.createElement("div",{className:"Reader"},n.createElement("div",{className:"Reader__container",style:null===(e=p)||void 0===e?void 0:e.readerContainer},n.createElement("div",{className:"Reader__container__document",style:null===(t=p)||void 0===t?void 0:t.readerContainerDocument},n.createElement(he,Object.assign({loading:" ",onLoadSuccess:this.onDocumentLoadSuccess,onLoadError:this.onError,onSourceError:this.onError},{options:Je,file:$e}),tt?this.renderPages():this.renderPage(h))),f&&!tt&&n.createElement("div",{className:"Reader__container__numbers",style:null===(r=p)||void 0===r?void 0:r.readerContainerNumbers},n.createElement("div",{className:"Reader__container__numbers__content",style:null===(o=p)||void 0===o?void 0:o.readerContainerNumbersContent},h," / ",f)),n.createElement("div",{className:"Reader__container__zoom_container",style:null===(i=p)||void 0===i?void 0:i.readerContainerZoomContainer},n.createElement("div",{className:"Reader__container__zoom_container__button",style:null===(a=p)||void 0===a?void 0:a.readerContainerZoomContainerButton,onClick:this.zoomIn},n.createElement(Ye,null)),n.createElement("div",{className:"Reader__container__zoom_container__button",style:null===(s=p)||void 0===s?void 0:s.readerContainerZoomContainerButton,onClick:this.zoomOut},n.createElement(Xe,null))),f>1&&!tt&&n.createElement("div",{className:"Reader__container__navigate",style:null===(u=p)||void 0===u?void 0:u.readerContainerNavigate},n.createElement("div",{className:"Reader__container__navigate__arrow",style:Object.assign(Object.assign({},1===h?{color:"rgba(255,255,255,0.4)"}:{}),null===(c=p)||void 0===c?void 0:c.readerContainerNavigateArrow),onClick:this.goUp},n.createElement(Ve,null)),n.createElement("div",{className:"Reader__container__navigate__arrow",style:Object.assign(Object.assign({},h===f?{color:"rgba(255,255,255,0.4)"}:{}),null===(l=p)||void 0===l?void 0:l.readerContainerNavigateArrow),onClick:this.goDown},n.createElement(He,null)))))}}const $e=document.querySelector("#file").getAttribute("data-file"),et=window.CUSTOM_STYLE,tt=window.WITH_SCROLL;Object(i.render)(n.createElement(Ze,Object.assign({},{file:$e,customStyle:et,withScroll:tt})),Ke)}]);';
export function getBundle() {
    return Base64.decode(bundle);
}
export function getBundleMd5() {
    return 'f772df201f96ff9a306ac440537fdbe6';
}
